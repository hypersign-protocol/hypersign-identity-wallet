"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[537],{76513:(e,i,t)=>{var r=t(35294),a=t(2910),o=t(77859);function s(e){if(!(this instanceof s))return new s(e);this.hash=e.hash,this.predResist=!!e.predResist,this.outLen=this.hash.outSize,this.minEntropy=e.minEntropy||this.hash.hmacStrength,this._reseed=null,this.reseedInterval=null,this.K=null,this.V=null;var i=a.toArray(e.entropy,e.entropyEnc||"hex"),t=a.toArray(e.nonce,e.nonceEnc||"hex"),r=a.toArray(e.pers,e.persEnc||"hex");o(i.length>=this.minEntropy/8,"Not enough entropy. Minimum is: "+this.minEntropy+" bits"),this._init(i,t,r)}e.exports=s,s.prototype._init=function(e,i,t){var r=e.concat(i).concat(t);this.K=new Array(this.outLen/8),this.V=new Array(this.outLen/8);for(var a=0;a<this.V.length;a++)this.K[a]=0,this.V[a]=1;this._update(r),this._reseed=1,this.reseedInterval=281474976710656},s.prototype._hmac=function(){return new r.hmac(this.hash,this.K)},s.prototype._update=function(e){var i=this._hmac().update(this.V).update([0]);e&&(i=i.update(e)),this.K=i.digest(),this.V=this._hmac().update(this.V).digest(),e&&(this.K=this._hmac().update(this.V).update([1]).update(e).digest(),this.V=this._hmac().update(this.V).digest())},s.prototype.reseed=function(e,i,t,r){"string"!=typeof i&&(r=t,t=i,i=null),e=a.toArray(e,i),t=a.toArray(t,r),o(e.length>=this.minEntropy/8,"Not enough entropy. Minimum is: "+this.minEntropy+" bits"),this._update(e.concat(t||[])),this._reseed=1},s.prototype.generate=function(e,i,t,r){if(this._reseed>this.reseedInterval)throw new Error("Reseed is required");"string"!=typeof i&&(r=t,t=i,i=null),t&&(t=a.toArray(t,r||"hex"),this._update(t));for(var o=[];o.length<e;)this.V=this._hmac().update(this.V).digest(),o=o.concat(this.V);var s=o.slice(0,e);return this._update(t),this._reseed++,a.encode(s,i)}},593:(e,i)=>{var t,r,a;Object.defineProperty(i,"__esModule",{value:!0}),i.proofTypesToNumber=i.proofTypesToJSON=i.proofTypesFromJSON=i.ProofTypes=i.verificationMethodTypesToNumber=i.verificationMethodTypesToJSON=i.verificationMethodTypesFromJSON=i.VerificationMethodTypes=i.verificationMethodRelationshipsToNumber=i.verificationMethodRelationshipsToJSON=i.verificationMethodRelationshipsFromJSON=i.VerificationMethodRelationships=i.protobufPackage=void 0,i.protobufPackage="hypersign.ssi.client",function(e){e.authentication="authentication",e.assertionMethod="assertionMethod",e.keyAgreement="keyAgreement",e.capabilityInvocation="capabilityInvocation",e.capabilityDelegation="capabilityDelegation"}(t=i.VerificationMethodRelationships||(i.VerificationMethodRelationships={})),i.verificationMethodRelationshipsFromJSON=function(e){switch(e){case 0:case"authentication":return t.authentication;case 1:case"assertionMethod":return t.assertionMethod;case 2:case"keyAgreement":return t.keyAgreement;case 3:case"capabilityInvocation":return t.capabilityInvocation;case 4:case"capabilityDelegation":return t.capabilityDelegation;default:throw new globalThis.Error("Unrecognized enum value "+e+" for enum VerificationMethodRelationships")}},i.verificationMethodRelationshipsToJSON=function(e){switch(e){case t.authentication:return"authentication";case t.assertionMethod:return"assertionMethod";case t.keyAgreement:return"keyAgreement";case t.capabilityInvocation:return"capabilityInvocation";case t.capabilityDelegation:return"capabilityDelegation";default:throw new globalThis.Error("Unrecognized enum value "+e+" for enum VerificationMethodRelationships")}},i.verificationMethodRelationshipsToNumber=function(e){switch(e){case t.authentication:return 0;case t.assertionMethod:return 1;case t.keyAgreement:return 2;case t.capabilityInvocation:return 3;case t.capabilityDelegation:return 4;default:throw new globalThis.Error("Unrecognized enum value "+e+" for enum VerificationMethodRelationships")}},function(e){e.Ed25519VerificationKey2020="Ed25519VerificationKey2020",e.EcdsaSecp256k1VerificationKey2019="EcdsaSecp256k1VerificationKey2019",e.EcdsaSecp256k1RecoveryMethod2020="EcdsaSecp256k1RecoveryMethod2020",e.X25519KeyAgreementKey2020="X25519KeyAgreementKey2020",e.X25519KeyAgreementKeyEIP5630="X25519KeyAgreementKeyEIP5630",e.Bls12381G2Key2020="Bls12381G2Key2020",e.BabyJubJubKey2021="BabyJubJubKey2021"}(r=i.VerificationMethodTypes||(i.VerificationMethodTypes={})),i.verificationMethodTypesFromJSON=function(e){switch(e){case 0:case"Ed25519VerificationKey2020":return r.Ed25519VerificationKey2020;case 1:case"EcdsaSecp256k1VerificationKey2019":return r.EcdsaSecp256k1VerificationKey2019;case 2:case"EcdsaSecp256k1RecoveryMethod2020":return r.EcdsaSecp256k1RecoveryMethod2020;case 3:case"X25519KeyAgreementKey2020":return r.X25519KeyAgreementKey2020;case 4:case"X25519KeyAgreementKeyEIP5630":return r.X25519KeyAgreementKeyEIP5630;case 5:case"Bls12381G2Key2020":return r.Bls12381G2Key2020;case 6:case"BabyJubJubKey2021":return r.BabyJubJubKey2021;default:throw new globalThis.Error("Unrecognized enum value "+e+" for enum VerificationMethodTypes")}},i.verificationMethodTypesToJSON=function(e){switch(e){case r.Ed25519VerificationKey2020:return"Ed25519VerificationKey2020";case r.EcdsaSecp256k1VerificationKey2019:return"EcdsaSecp256k1VerificationKey2019";case r.EcdsaSecp256k1RecoveryMethod2020:return"EcdsaSecp256k1RecoveryMethod2020";case r.X25519KeyAgreementKey2020:return"X25519KeyAgreementKey2020";case r.X25519KeyAgreementKeyEIP5630:return"X25519KeyAgreementKeyEIP5630";case r.Bls12381G2Key2020:return"Bls12381G2Key2020";case r.BabyJubJubKey2021:return"BabyJubJubKey2021";default:throw new globalThis.Error("Unrecognized enum value "+e+" for enum VerificationMethodTypes")}},i.verificationMethodTypesToNumber=function(e){switch(e){case r.Ed25519VerificationKey2020:return 0;case r.EcdsaSecp256k1VerificationKey2019:return 1;case r.EcdsaSecp256k1RecoveryMethod2020:return 2;case r.X25519KeyAgreementKey2020:return 3;case r.X25519KeyAgreementKeyEIP5630:return 4;case r.Bls12381G2Key2020:return 5;case r.BabyJubJubKey2021:return 6;default:throw new globalThis.Error("Unrecognized enum value "+e+" for enum VerificationMethodTypes")}},function(e){e.Ed25519Signature2020="Ed25519Signature2020",e.EcdsaSecp256k1Signature2019="EcdsaSecp256k1Signature2019",e.EcdsaSecp256k1RecoverySignature2020="EcdsaSecp256k1RecoverySignature2020",e.BJJSignature2021="BJJSignature2021",e.BbsBlsSignature2020="BbsBlsSignature2020"}(a=i.ProofTypes||(i.ProofTypes={})),i.proofTypesFromJSON=function(e){switch(e){case 0:case"Ed25519Signature2020":return a.Ed25519Signature2020;case 1:case"EcdsaSecp256k1Signature2019":return a.EcdsaSecp256k1Signature2019;case 2:case"EcdsaSecp256k1RecoverySignature2020":return a.EcdsaSecp256k1RecoverySignature2020;case 3:case"BJJSignature2021":return a.BJJSignature2021;case 4:case"BbsBlsSignature2020":return a.BbsBlsSignature2020;default:throw new globalThis.Error("Unrecognized enum value "+e+" for enum ProofTypes")}},i.proofTypesToJSON=function(e){switch(e){case a.Ed25519Signature2020:return"Ed25519Signature2020";case a.EcdsaSecp256k1Signature2019:return"EcdsaSecp256k1Signature2019";case a.EcdsaSecp256k1RecoverySignature2020:return"EcdsaSecp256k1RecoverySignature2020";case a.BJJSignature2021:return"BJJSignature2021";case a.BbsBlsSignature2020:return"BbsBlsSignature2020";default:throw new globalThis.Error("Unrecognized enum value "+e+" for enum ProofTypes")}},i.proofTypesToNumber=function(e){switch(e){case a.Ed25519Signature2020:return 0;case a.EcdsaSecp256k1Signature2019:return 1;case a.EcdsaSecp256k1RecoverySignature2020:return 2;case a.BJJSignature2021:return 3;case a.BbsBlsSignature2020:return 4;default:throw new globalThis.Error("Unrecognized enum value "+e+" for enum ProofTypes")}}},81907:(e,i)=>{var t;Object.defineProperty(i,"__esModule",{value:!0}),i.clientSpecTypeToNumber=i.clientSpecTypeToJSON=i.clientSpecTypeFromJSON=i.ClientSpecType=i.protobufPackage=void 0,i.protobufPackage="hypersign.ssi.v1",function(e){e.CLIENT_SPEC_TYPE_NONE="CLIENT_SPEC_TYPE_NONE",e.CLIENT_SPEC_TYPE_COSMOS_ADR036="CLIENT_SPEC_TYPE_COSMOS_ADR036",e.CLIENT_SPEC_TYPE_ETH_PERSONAL_SIGN="CLIENT_SPEC_TYPE_ETH_PERSONAL_SIGN"}(t=i.ClientSpecType||(i.ClientSpecType={})),i.clientSpecTypeFromJSON=function(e){switch(e){case 0:case"CLIENT_SPEC_TYPE_NONE":return t.CLIENT_SPEC_TYPE_NONE;case 1:case"CLIENT_SPEC_TYPE_COSMOS_ADR036":return t.CLIENT_SPEC_TYPE_COSMOS_ADR036;case 2:case"CLIENT_SPEC_TYPE_ETH_PERSONAL_SIGN":return t.CLIENT_SPEC_TYPE_ETH_PERSONAL_SIGN;default:throw new globalThis.Error("Unrecognized enum value "+e+" for enum ClientSpecType")}},i.clientSpecTypeToJSON=function(e){switch(e){case t.CLIENT_SPEC_TYPE_NONE:return"CLIENT_SPEC_TYPE_NONE";case t.CLIENT_SPEC_TYPE_COSMOS_ADR036:return"CLIENT_SPEC_TYPE_COSMOS_ADR036";case t.CLIENT_SPEC_TYPE_ETH_PERSONAL_SIGN:return"CLIENT_SPEC_TYPE_ETH_PERSONAL_SIGN";default:throw new globalThis.Error("Unrecognized enum value "+e+" for enum ClientSpecType")}},i.clientSpecTypeToNumber=function(e){switch(e){case t.CLIENT_SPEC_TYPE_NONE:return 0;case t.CLIENT_SPEC_TYPE_COSMOS_ADR036:return 1;case t.CLIENT_SPEC_TYPE_ETH_PERSONAL_SIGN:return 2;default:throw new globalThis.Error("Unrecognized enum value "+e+" for enum ClientSpecType")}}},8496:function(e,i,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(i,"__esModule",{value:!0}),i.CredentialSchemaState=i.CredentialSchemaProperty=i.CredentialSchemaDocument=i.protobufPackage=void 0;const a=r(t(59210)),o=t(75823);function s(e){return null!=e}i.protobufPackage="hypersign.ssi.v1",i.CredentialSchemaDocument={encode(e,t=a.default.Writer.create()){if(void 0!==e["@context"]&&0!==e["@context"].length)for(const i of e["@context"])t.uint32(10).string(i);return void 0!==e.type&&""!==e.type&&t.uint32(18).string(e.type),void 0!==e.modelVersion&&""!==e.modelVersion&&t.uint32(26).string(e.modelVersion),void 0!==e.id&&""!==e.id&&t.uint32(34).string(e.id),void 0!==e.name&&""!==e.name&&t.uint32(42).string(e.name),void 0!==e.author&&""!==e.author&&t.uint32(50).string(e.author),void 0!==e.authored&&""!==e.authored&&t.uint32(58).string(e.authored),void 0!==e.schema&&i.CredentialSchemaProperty.encode(e.schema,t.uint32(66).fork()).ldelim(),t},decode(e,t){const r=e instanceof a.default.Reader?e:a.default.Reader.create(e);let o=void 0===t?r.len:r.pos+t;const s={};for(;r.pos<o;){const e=r.uint32();switch(e>>>3){case 1:if(10!==e)break;void 0===s["@context"]&&(s["@context"]=[]),s["@context"].push(r.string());continue;case 2:if(18!==e)break;s.type=r.string();continue;case 3:if(26!==e)break;s.modelVersion=r.string();continue;case 4:if(34!==e)break;s.id=r.string();continue;case 5:if(42!==e)break;s.name=r.string();continue;case 6:if(50!==e)break;s.author=r.string();continue;case 7:if(58!==e)break;s.authored=r.string();continue;case 8:if(66!==e)break;s.schema=i.CredentialSchemaProperty.decode(r,r.uint32());continue}if(4==(7&e)||0===e)break;r.skipType(7&e)}return s},fromJSON:e=>({"@context":globalThis.Array.isArray(null==e?void 0:e["@context"])?e["@context"].map((e=>globalThis.String(e))):void 0,type:s(e.type)?globalThis.String(e.type):void 0,modelVersion:s(e.modelVersion)?globalThis.String(e.modelVersion):void 0,id:s(e.id)?globalThis.String(e.id):void 0,name:s(e.name)?globalThis.String(e.name):void 0,author:s(e.author)?globalThis.String(e.author):void 0,authored:s(e.authored)?globalThis.String(e.authored):void 0,schema:s(e.schema)?i.CredentialSchemaProperty.fromJSON(e.schema):void 0}),toJSON(e){var t;const r={};return(null===(t=e["@context"])||void 0===t?void 0:t.length)&&(r["@context"]=e["@context"]),void 0!==e.type&&""!==e.type&&(r.type=e.type),void 0!==e.modelVersion&&""!==e.modelVersion&&(r.modelVersion=e.modelVersion),void 0!==e.id&&""!==e.id&&(r.id=e.id),void 0!==e.name&&""!==e.name&&(r.name=e.name),void 0!==e.author&&""!==e.author&&(r.author=e.author),void 0!==e.authored&&""!==e.authored&&(r.authored=e.authored),void 0!==e.schema&&(r.schema=i.CredentialSchemaProperty.toJSON(e.schema)),r},create:e=>i.CredentialSchemaDocument.fromPartial(null!=e?e:{}),fromPartial(e){var t,r,a,o,s,n,d;const c={};return c["@context"]=(null===(t=e["@context"])||void 0===t?void 0:t.map((e=>e)))||void 0,c.type=null!==(r=e.type)&&void 0!==r?r:void 0,c.modelVersion=null!==(a=e.modelVersion)&&void 0!==a?a:void 0,c.id=null!==(o=e.id)&&void 0!==o?o:void 0,c.name=null!==(s=e.name)&&void 0!==s?s:void 0,c.author=null!==(n=e.author)&&void 0!==n?n:void 0,c.authored=null!==(d=e.authored)&&void 0!==d?d:void 0,c.schema=void 0!==e.schema&&null!==e.schema?i.CredentialSchemaProperty.fromPartial(e.schema):void 0,c}},i.CredentialSchemaProperty={encode(e,i=a.default.Writer.create()){if(void 0!==e.schema&&""!==e.schema&&i.uint32(10).string(e.schema),void 0!==e.description&&""!==e.description&&i.uint32(18).string(e.description),void 0!==e.type&&""!==e.type&&i.uint32(26).string(e.type),void 0!==e.properties&&""!==e.properties&&i.uint32(34).string(e.properties),void 0!==e.required&&0!==e.required.length)for(const t of e.required)i.uint32(42).string(t);return!0===e.additionalProperties&&i.uint32(48).bool(e.additionalProperties),i},decode(e,i){const t=e instanceof a.default.Reader?e:a.default.Reader.create(e);let r=void 0===i?t.len:t.pos+i;const o={};for(;t.pos<r;){const e=t.uint32();switch(e>>>3){case 1:if(10!==e)break;o.schema=t.string();continue;case 2:if(18!==e)break;o.description=t.string();continue;case 3:if(26!==e)break;o.type=t.string();continue;case 4:if(34!==e)break;o.properties=t.string();continue;case 5:if(42!==e)break;void 0===o.required&&(o.required=[]),o.required.push(t.string());continue;case 6:if(48!==e)break;o.additionalProperties=t.bool();continue}if(4==(7&e)||0===e)break;t.skipType(7&e)}return o},fromJSON:e=>({schema:s(e.schema)?globalThis.String(e.schema):void 0,description:s(e.description)?globalThis.String(e.description):void 0,type:s(e.type)?globalThis.String(e.type):void 0,properties:s(e.properties)?globalThis.String(e.properties):void 0,required:globalThis.Array.isArray(null==e?void 0:e.required)?e.required.map((e=>globalThis.String(e))):void 0,additionalProperties:s(e.additionalProperties)?globalThis.Boolean(e.additionalProperties):void 0}),toJSON(e){var i;const t={};return void 0!==e.schema&&""!==e.schema&&(t.schema=e.schema),void 0!==e.description&&""!==e.description&&(t.description=e.description),void 0!==e.type&&""!==e.type&&(t.type=e.type),void 0!==e.properties&&""!==e.properties&&(t.properties=e.properties),(null===(i=e.required)||void 0===i?void 0:i.length)&&(t.required=e.required),!0===e.additionalProperties&&(t.additionalProperties=e.additionalProperties),t},create:e=>i.CredentialSchemaProperty.fromPartial(null!=e?e:{}),fromPartial(e){var i,t,r,a,o,s;const n={};return n.schema=null!==(i=e.schema)&&void 0!==i?i:void 0,n.description=null!==(t=e.description)&&void 0!==t?t:void 0,n.type=null!==(r=e.type)&&void 0!==r?r:void 0,n.properties=null!==(a=e.properties)&&void 0!==a?a:void 0,n.required=(null===(o=e.required)||void 0===o?void 0:o.map((e=>e)))||void 0,n.additionalProperties=null!==(s=e.additionalProperties)&&void 0!==s?s:void 0,n}},i.CredentialSchemaState={encode:(e,t=a.default.Writer.create())=>(void 0!==e.credentialSchemaDocument&&i.CredentialSchemaDocument.encode(e.credentialSchemaDocument,t.uint32(10).fork()).ldelim(),void 0!==e.credentialSchemaProof&&o.DocumentProof.encode(e.credentialSchemaProof,t.uint32(18).fork()).ldelim(),t),decode(e,t){const r=e instanceof a.default.Reader?e:a.default.Reader.create(e);let s=void 0===t?r.len:r.pos+t;const n={};for(;r.pos<s;){const e=r.uint32();switch(e>>>3){case 1:if(10!==e)break;n.credentialSchemaDocument=i.CredentialSchemaDocument.decode(r,r.uint32());continue;case 2:if(18!==e)break;n.credentialSchemaProof=o.DocumentProof.decode(r,r.uint32());continue}if(4==(7&e)||0===e)break;r.skipType(7&e)}return n},fromJSON:e=>({credentialSchemaDocument:s(e.credentialSchemaDocument)?i.CredentialSchemaDocument.fromJSON(e.credentialSchemaDocument):void 0,credentialSchemaProof:s(e.credentialSchemaProof)?o.DocumentProof.fromJSON(e.credentialSchemaProof):void 0}),toJSON(e){const t={};return void 0!==e.credentialSchemaDocument&&(t.credentialSchemaDocument=i.CredentialSchemaDocument.toJSON(e.credentialSchemaDocument)),void 0!==e.credentialSchemaProof&&(t.credentialSchemaProof=o.DocumentProof.toJSON(e.credentialSchemaProof)),t},create:e=>i.CredentialSchemaState.fromPartial(null!=e?e:{}),fromPartial(e){const t={};return t.credentialSchemaDocument=void 0!==e.credentialSchemaDocument&&null!==e.credentialSchemaDocument?i.CredentialSchemaDocument.fromPartial(e.credentialSchemaDocument):void 0,t.credentialSchemaProof=void 0!==e.credentialSchemaProof&&null!==e.credentialSchemaProof?o.DocumentProof.fromPartial(e.credentialSchemaProof):void 0,t}}},81958:function(e,i,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(i,"__esModule",{value:!0}),i.CredentialStatusState=i.CredentialStatusDocument=i.protobufPackage=void 0;const a=r(t(59210)),o=t(75823);function s(e){return null!=e}i.protobufPackage="hypersign.ssi.v1",i.CredentialStatusDocument={encode(e,i=a.default.Writer.create()){if(void 0!==e["@context"]&&0!==e["@context"].length)for(const t of e["@context"])i.uint32(10).string(t);return void 0!==e.id&&""!==e.id&&i.uint32(18).string(e.id),!0===e.revoked&&i.uint32(24).bool(e.revoked),!0===e.suspended&&i.uint32(32).bool(e.suspended),void 0!==e.remarks&&""!==e.remarks&&i.uint32(42).string(e.remarks),void 0!==e.issuer&&""!==e.issuer&&i.uint32(50).string(e.issuer),void 0!==e.issuanceDate&&""!==e.issuanceDate&&i.uint32(58).string(e.issuanceDate),void 0!==e.credentialMerkleRootHash&&""!==e.credentialMerkleRootHash&&i.uint32(66).string(e.credentialMerkleRootHash),i},decode(e,i){const t=e instanceof a.default.Reader?e:a.default.Reader.create(e);let r=void 0===i?t.len:t.pos+i;const o={};for(;t.pos<r;){const e=t.uint32();switch(e>>>3){case 1:if(10!==e)break;void 0===o["@context"]&&(o["@context"]=[]),o["@context"].push(t.string());continue;case 2:if(18!==e)break;o.id=t.string();continue;case 3:if(24!==e)break;o.revoked=t.bool();continue;case 4:if(32!==e)break;o.suspended=t.bool();continue;case 5:if(42!==e)break;o.remarks=t.string();continue;case 6:if(50!==e)break;o.issuer=t.string();continue;case 7:if(58!==e)break;o.issuanceDate=t.string();continue;case 8:if(66!==e)break;o.credentialMerkleRootHash=t.string();continue}if(4==(7&e)||0===e)break;t.skipType(7&e)}return o},fromJSON:e=>({"@context":globalThis.Array.isArray(null==e?void 0:e["@context"])?e["@context"].map((e=>globalThis.String(e))):void 0,id:s(e.id)?globalThis.String(e.id):void 0,revoked:s(e.revoked)?globalThis.Boolean(e.revoked):void 0,suspended:s(e.suspended)?globalThis.Boolean(e.suspended):void 0,remarks:s(e.remarks)?globalThis.String(e.remarks):void 0,issuer:s(e.issuer)?globalThis.String(e.issuer):void 0,issuanceDate:s(e.issuanceDate)?globalThis.String(e.issuanceDate):void 0,credentialMerkleRootHash:s(e.credentialMerkleRootHash)?globalThis.String(e.credentialMerkleRootHash):void 0}),toJSON(e){var i;const t={};return(null===(i=e["@context"])||void 0===i?void 0:i.length)&&(t["@context"]=e["@context"]),void 0!==e.id&&""!==e.id&&(t.id=e.id),!0===e.revoked&&(t.revoked=e.revoked),!0===e.suspended&&(t.suspended=e.suspended),void 0!==e.remarks&&""!==e.remarks&&(t.remarks=e.remarks),void 0!==e.issuer&&""!==e.issuer&&(t.issuer=e.issuer),void 0!==e.issuanceDate&&""!==e.issuanceDate&&(t.issuanceDate=e.issuanceDate),void 0!==e.credentialMerkleRootHash&&""!==e.credentialMerkleRootHash&&(t.credentialMerkleRootHash=e.credentialMerkleRootHash),t},create:e=>i.CredentialStatusDocument.fromPartial(null!=e?e:{}),fromPartial(e){var i,t,r,a,o,s,n,d;const c={};return c["@context"]=(null===(i=e["@context"])||void 0===i?void 0:i.map((e=>e)))||void 0,c.id=null!==(t=e.id)&&void 0!==t?t:void 0,c.revoked=null!==(r=e.revoked)&&void 0!==r?r:void 0,c.suspended=null!==(a=e.suspended)&&void 0!==a?a:void 0,c.remarks=null!==(o=e.remarks)&&void 0!==o?o:void 0,c.issuer=null!==(s=e.issuer)&&void 0!==s?s:void 0,c.issuanceDate=null!==(n=e.issuanceDate)&&void 0!==n?n:void 0,c.credentialMerkleRootHash=null!==(d=e.credentialMerkleRootHash)&&void 0!==d?d:void 0,c}},i.CredentialStatusState={encode:(e,t=a.default.Writer.create())=>(void 0!==e.credentialStatusDocument&&i.CredentialStatusDocument.encode(e.credentialStatusDocument,t.uint32(10).fork()).ldelim(),void 0!==e.credentialStatusProof&&o.DocumentProof.encode(e.credentialStatusProof,t.uint32(18).fork()).ldelim(),t),decode(e,t){const r=e instanceof a.default.Reader?e:a.default.Reader.create(e);let s=void 0===t?r.len:r.pos+t;const n={};for(;r.pos<s;){const e=r.uint32();switch(e>>>3){case 1:if(10!==e)break;n.credentialStatusDocument=i.CredentialStatusDocument.decode(r,r.uint32());continue;case 2:if(18!==e)break;n.credentialStatusProof=o.DocumentProof.decode(r,r.uint32());continue}if(4==(7&e)||0===e)break;r.skipType(7&e)}return n},fromJSON:e=>({credentialStatusDocument:s(e.credentialStatusDocument)?i.CredentialStatusDocument.fromJSON(e.credentialStatusDocument):void 0,credentialStatusProof:s(e.credentialStatusProof)?o.DocumentProof.fromJSON(e.credentialStatusProof):void 0}),toJSON(e){const t={};return void 0!==e.credentialStatusDocument&&(t.credentialStatusDocument=i.CredentialStatusDocument.toJSON(e.credentialStatusDocument)),void 0!==e.credentialStatusProof&&(t.credentialStatusProof=o.DocumentProof.toJSON(e.credentialStatusProof)),t},create:e=>i.CredentialStatusState.fromPartial(null!=e?e:{}),fromPartial(e){const t={};return t.credentialStatusDocument=void 0!==e.credentialStatusDocument&&null!==e.credentialStatusDocument?i.CredentialStatusDocument.fromPartial(e.credentialStatusDocument):void 0,t.credentialStatusProof=void 0!==e.credentialStatusProof&&null!==e.credentialStatusProof?o.DocumentProof.fromPartial(e.credentialStatusProof):void 0,t}}},89786:function(e,i,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(i,"__esModule",{value:!0}),i.DidDocumentState=i.Service=i.VerificationMethod=i.DidDocumentMetadata=i.DidDocument=i.protobufPackage=void 0;const a=r(t(59210));function o(e){return null!=e}i.protobufPackage="hypersign.ssi.v1",i.DidDocument={encode(e,t=a.default.Writer.create()){if(void 0!==e["@context"]&&0!==e["@context"].length)for(const i of e["@context"])t.uint32(10).string(i);if(void 0!==e.id&&""!==e.id&&t.uint32(18).string(e.id),void 0!==e.controller&&0!==e.controller.length)for(const i of e.controller)t.uint32(26).string(i);if(void 0!==e.alsoKnownAs&&0!==e.alsoKnownAs.length)for(const i of e.alsoKnownAs)t.uint32(34).string(i);if(void 0!==e.verificationMethod&&0!==e.verificationMethod.length)for(const r of e.verificationMethod)i.VerificationMethod.encode(r,t.uint32(42).fork()).ldelim();if(void 0!==e.authentication&&0!==e.authentication.length)for(const i of e.authentication)t.uint32(50).string(i);if(void 0!==e.assertionMethod&&0!==e.assertionMethod.length)for(const i of e.assertionMethod)t.uint32(58).string(i);if(void 0!==e.keyAgreement&&0!==e.keyAgreement.length)for(const i of e.keyAgreement)t.uint32(66).string(i);if(void 0!==e.capabilityInvocation&&0!==e.capabilityInvocation.length)for(const i of e.capabilityInvocation)t.uint32(74).string(i);if(void 0!==e.capabilityDelegation&&0!==e.capabilityDelegation.length)for(const i of e.capabilityDelegation)t.uint32(82).string(i);if(void 0!==e.service&&0!==e.service.length)for(const r of e.service)i.Service.encode(r,t.uint32(90).fork()).ldelim();return t},decode(e,t){const r=e instanceof a.default.Reader?e:a.default.Reader.create(e);let o=void 0===t?r.len:r.pos+t;const s={};for(;r.pos<o;){const e=r.uint32();switch(e>>>3){case 1:if(10!==e)break;void 0===s["@context"]&&(s["@context"]=[]),s["@context"].push(r.string());continue;case 2:if(18!==e)break;s.id=r.string();continue;case 3:if(26!==e)break;void 0===s.controller&&(s.controller=[]),s.controller.push(r.string());continue;case 4:if(34!==e)break;void 0===s.alsoKnownAs&&(s.alsoKnownAs=[]),s.alsoKnownAs.push(r.string());continue;case 5:if(42!==e)break;void 0===s.verificationMethod&&(s.verificationMethod=[]),s.verificationMethod.push(i.VerificationMethod.decode(r,r.uint32()));continue;case 6:if(50!==e)break;void 0===s.authentication&&(s.authentication=[]),s.authentication.push(r.string());continue;case 7:if(58!==e)break;void 0===s.assertionMethod&&(s.assertionMethod=[]),s.assertionMethod.push(r.string());continue;case 8:if(66!==e)break;void 0===s.keyAgreement&&(s.keyAgreement=[]),s.keyAgreement.push(r.string());continue;case 9:if(74!==e)break;void 0===s.capabilityInvocation&&(s.capabilityInvocation=[]),s.capabilityInvocation.push(r.string());continue;case 10:if(82!==e)break;void 0===s.capabilityDelegation&&(s.capabilityDelegation=[]),s.capabilityDelegation.push(r.string());continue;case 11:if(90!==e)break;void 0===s.service&&(s.service=[]),s.service.push(i.Service.decode(r,r.uint32()));continue}if(4==(7&e)||0===e)break;r.skipType(7&e)}return s},fromJSON:e=>({"@context":globalThis.Array.isArray(null==e?void 0:e["@context"])?e["@context"].map((e=>globalThis.String(e))):void 0,id:o(e.id)?globalThis.String(e.id):void 0,controller:globalThis.Array.isArray(null==e?void 0:e.controller)?e.controller.map((e=>globalThis.String(e))):void 0,alsoKnownAs:globalThis.Array.isArray(null==e?void 0:e.alsoKnownAs)?e.alsoKnownAs.map((e=>globalThis.String(e))):void 0,verificationMethod:globalThis.Array.isArray(null==e?void 0:e.verificationMethod)?e.verificationMethod.map((e=>i.VerificationMethod.fromJSON(e))):void 0,authentication:globalThis.Array.isArray(null==e?void 0:e.authentication)?e.authentication.map((e=>globalThis.String(e))):void 0,assertionMethod:globalThis.Array.isArray(null==e?void 0:e.assertionMethod)?e.assertionMethod.map((e=>globalThis.String(e))):void 0,keyAgreement:globalThis.Array.isArray(null==e?void 0:e.keyAgreement)?e.keyAgreement.map((e=>globalThis.String(e))):void 0,capabilityInvocation:globalThis.Array.isArray(null==e?void 0:e.capabilityInvocation)?e.capabilityInvocation.map((e=>globalThis.String(e))):void 0,capabilityDelegation:globalThis.Array.isArray(null==e?void 0:e.capabilityDelegation)?e.capabilityDelegation.map((e=>globalThis.String(e))):void 0,service:globalThis.Array.isArray(null==e?void 0:e.service)?e.service.map((e=>i.Service.fromJSON(e))):void 0}),toJSON(e){var t,r,a,o,s,n,d,c,l,h;const u={};return(null===(t=e["@context"])||void 0===t?void 0:t.length)&&(u["@context"]=e["@context"]),void 0!==e.id&&""!==e.id&&(u.id=e.id),(null===(r=e.controller)||void 0===r?void 0:r.length)&&(u.controller=e.controller),(null===(a=e.alsoKnownAs)||void 0===a?void 0:a.length)&&(u.alsoKnownAs=e.alsoKnownAs),(null===(o=e.verificationMethod)||void 0===o?void 0:o.length)&&(u.verificationMethod=e.verificationMethod.map((e=>i.VerificationMethod.toJSON(e)))),(null===(s=e.authentication)||void 0===s?void 0:s.length)&&(u.authentication=e.authentication),(null===(n=e.assertionMethod)||void 0===n?void 0:n.length)&&(u.assertionMethod=e.assertionMethod),(null===(d=e.keyAgreement)||void 0===d?void 0:d.length)&&(u.keyAgreement=e.keyAgreement),(null===(c=e.capabilityInvocation)||void 0===c?void 0:c.length)&&(u.capabilityInvocation=e.capabilityInvocation),(null===(l=e.capabilityDelegation)||void 0===l?void 0:l.length)&&(u.capabilityDelegation=e.capabilityDelegation),(null===(h=e.service)||void 0===h?void 0:h.length)&&(u.service=e.service.map((e=>i.Service.toJSON(e)))),u},create:e=>i.DidDocument.fromPartial(null!=e?e:{}),fromPartial(e){var t,r,a,o,s,n,d,c,l,h,u;const m={};return m["@context"]=(null===(t=e["@context"])||void 0===t?void 0:t.map((e=>e)))||void 0,m.id=null!==(r=e.id)&&void 0!==r?r:void 0,m.controller=(null===(a=e.controller)||void 0===a?void 0:a.map((e=>e)))||void 0,m.alsoKnownAs=(null===(o=e.alsoKnownAs)||void 0===o?void 0:o.map((e=>e)))||void 0,m.verificationMethod=(null===(s=e.verificationMethod)||void 0===s?void 0:s.map((e=>i.VerificationMethod.fromPartial(e))))||void 0,m.authentication=(null===(n=e.authentication)||void 0===n?void 0:n.map((e=>e)))||void 0,m.assertionMethod=(null===(d=e.assertionMethod)||void 0===d?void 0:d.map((e=>e)))||void 0,m.keyAgreement=(null===(c=e.keyAgreement)||void 0===c?void 0:c.map((e=>e)))||void 0,m.capabilityInvocation=(null===(l=e.capabilityInvocation)||void 0===l?void 0:l.map((e=>e)))||void 0,m.capabilityDelegation=(null===(h=e.capabilityDelegation)||void 0===h?void 0:h.map((e=>e)))||void 0,m.service=(null===(u=e.service)||void 0===u?void 0:u.map((e=>i.Service.fromPartial(e))))||void 0,m}},i.DidDocumentMetadata={encode:(e,i=a.default.Writer.create())=>(void 0!==e.created&&""!==e.created&&i.uint32(10).string(e.created),void 0!==e.updated&&""!==e.updated&&i.uint32(18).string(e.updated),!0===e.deactivated&&i.uint32(24).bool(e.deactivated),void 0!==e.versionId&&""!==e.versionId&&i.uint32(34).string(e.versionId),i),decode(e,i){const t=e instanceof a.default.Reader?e:a.default.Reader.create(e);let r=void 0===i?t.len:t.pos+i;const o={};for(;t.pos<r;){const e=t.uint32();switch(e>>>3){case 1:if(10!==e)break;o.created=t.string();continue;case 2:if(18!==e)break;o.updated=t.string();continue;case 3:if(24!==e)break;o.deactivated=t.bool();continue;case 4:if(34!==e)break;o.versionId=t.string();continue}if(4==(7&e)||0===e)break;t.skipType(7&e)}return o},fromJSON:e=>({created:o(e.created)?globalThis.String(e.created):void 0,updated:o(e.updated)?globalThis.String(e.updated):void 0,deactivated:o(e.deactivated)?globalThis.Boolean(e.deactivated):void 0,versionId:o(e.versionId)?globalThis.String(e.versionId):void 0}),toJSON(e){const i={};return void 0!==e.created&&""!==e.created&&(i.created=e.created),void 0!==e.updated&&""!==e.updated&&(i.updated=e.updated),!0===e.deactivated&&(i.deactivated=e.deactivated),void 0!==e.versionId&&""!==e.versionId&&(i.versionId=e.versionId),i},create:e=>i.DidDocumentMetadata.fromPartial(null!=e?e:{}),fromPartial(e){var i,t,r,a;const o={};return o.created=null!==(i=e.created)&&void 0!==i?i:void 0,o.updated=null!==(t=e.updated)&&void 0!==t?t:void 0,o.deactivated=null!==(r=e.deactivated)&&void 0!==r?r:void 0,o.versionId=null!==(a=e.versionId)&&void 0!==a?a:void 0,o}},i.VerificationMethod={encode:(e,i=a.default.Writer.create())=>(void 0!==e.id&&""!==e.id&&i.uint32(10).string(e.id),void 0!==e.type&&""!==e.type&&i.uint32(18).string(e.type),void 0!==e.controller&&""!==e.controller&&i.uint32(26).string(e.controller),void 0!==e.publicKeyMultibase&&""!==e.publicKeyMultibase&&i.uint32(34).string(e.publicKeyMultibase),void 0!==e.blockchainAccountId&&""!==e.blockchainAccountId&&i.uint32(42).string(e.blockchainAccountId),i),decode(e,i){const t=e instanceof a.default.Reader?e:a.default.Reader.create(e);let r=void 0===i?t.len:t.pos+i;const o={};for(;t.pos<r;){const e=t.uint32();switch(e>>>3){case 1:if(10!==e)break;o.id=t.string();continue;case 2:if(18!==e)break;o.type=t.string();continue;case 3:if(26!==e)break;o.controller=t.string();continue;case 4:if(34!==e)break;o.publicKeyMultibase=t.string();continue;case 5:if(42!==e)break;o.blockchainAccountId=t.string();continue}if(4==(7&e)||0===e)break;t.skipType(7&e)}return o},fromJSON:e=>({id:o(e.id)?globalThis.String(e.id):void 0,type:o(e.type)?globalThis.String(e.type):void 0,controller:o(e.controller)?globalThis.String(e.controller):void 0,publicKeyMultibase:o(e.publicKeyMultibase)?globalThis.String(e.publicKeyMultibase):void 0,blockchainAccountId:o(e.blockchainAccountId)?globalThis.String(e.blockchainAccountId):void 0}),toJSON(e){const i={};return void 0!==e.id&&""!==e.id&&(i.id=e.id),void 0!==e.type&&""!==e.type&&(i.type=e.type),void 0!==e.controller&&""!==e.controller&&(i.controller=e.controller),void 0!==e.publicKeyMultibase&&""!==e.publicKeyMultibase&&(i.publicKeyMultibase=e.publicKeyMultibase),void 0!==e.blockchainAccountId&&""!==e.blockchainAccountId&&(i.blockchainAccountId=e.blockchainAccountId),i},create:e=>i.VerificationMethod.fromPartial(null!=e?e:{}),fromPartial(e){var i,t,r,a,o;const s={};return s.id=null!==(i=e.id)&&void 0!==i?i:void 0,s.type=null!==(t=e.type)&&void 0!==t?t:void 0,s.controller=null!==(r=e.controller)&&void 0!==r?r:void 0,s.publicKeyMultibase=null!==(a=e.publicKeyMultibase)&&void 0!==a?a:void 0,s.blockchainAccountId=null!==(o=e.blockchainAccountId)&&void 0!==o?o:void 0,s}},i.Service={encode:(e,i=a.default.Writer.create())=>(void 0!==e.id&&""!==e.id&&i.uint32(10).string(e.id),void 0!==e.type&&""!==e.type&&i.uint32(18).string(e.type),void 0!==e.serviceEndpoint&&""!==e.serviceEndpoint&&i.uint32(26).string(e.serviceEndpoint),i),decode(e,i){const t=e instanceof a.default.Reader?e:a.default.Reader.create(e);let r=void 0===i?t.len:t.pos+i;const o={};for(;t.pos<r;){const e=t.uint32();switch(e>>>3){case 1:if(10!==e)break;o.id=t.string();continue;case 2:if(18!==e)break;o.type=t.string();continue;case 3:if(26!==e)break;o.serviceEndpoint=t.string();continue}if(4==(7&e)||0===e)break;t.skipType(7&e)}return o},fromJSON:e=>({id:o(e.id)?globalThis.String(e.id):void 0,type:o(e.type)?globalThis.String(e.type):void 0,serviceEndpoint:o(e.serviceEndpoint)?globalThis.String(e.serviceEndpoint):void 0}),toJSON(e){const i={};return void 0!==e.id&&""!==e.id&&(i.id=e.id),void 0!==e.type&&""!==e.type&&(i.type=e.type),void 0!==e.serviceEndpoint&&""!==e.serviceEndpoint&&(i.serviceEndpoint=e.serviceEndpoint),i},create:e=>i.Service.fromPartial(null!=e?e:{}),fromPartial(e){var i,t,r;const a={};return a.id=null!==(i=e.id)&&void 0!==i?i:void 0,a.type=null!==(t=e.type)&&void 0!==t?t:void 0,a.serviceEndpoint=null!==(r=e.serviceEndpoint)&&void 0!==r?r:void 0,a}},i.DidDocumentState={encode:(e,t=a.default.Writer.create())=>(void 0!==e.didDocument&&i.DidDocument.encode(e.didDocument,t.uint32(10).fork()).ldelim(),void 0!==e.didDocumentMetadata&&i.DidDocumentMetadata.encode(e.didDocumentMetadata,t.uint32(18).fork()).ldelim(),t),decode(e,t){const r=e instanceof a.default.Reader?e:a.default.Reader.create(e);let o=void 0===t?r.len:r.pos+t;const s={};for(;r.pos<o;){const e=r.uint32();switch(e>>>3){case 1:if(10!==e)break;s.didDocument=i.DidDocument.decode(r,r.uint32());continue;case 2:if(18!==e)break;s.didDocumentMetadata=i.DidDocumentMetadata.decode(r,r.uint32());continue}if(4==(7&e)||0===e)break;r.skipType(7&e)}return s},fromJSON:e=>({didDocument:o(e.didDocument)?i.DidDocument.fromJSON(e.didDocument):void 0,didDocumentMetadata:o(e.didDocumentMetadata)?i.DidDocumentMetadata.fromJSON(e.didDocumentMetadata):void 0}),toJSON(e){const t={};return void 0!==e.didDocument&&(t.didDocument=i.DidDocument.toJSON(e.didDocument)),void 0!==e.didDocumentMetadata&&(t.didDocumentMetadata=i.DidDocumentMetadata.toJSON(e.didDocumentMetadata)),t},create:e=>i.DidDocumentState.fromPartial(null!=e?e:{}),fromPartial(e){const t={};return t.didDocument=void 0!==e.didDocument&&null!==e.didDocument?i.DidDocument.fromPartial(e.didDocument):void 0,t.didDocumentMetadata=void 0!==e.didDocumentMetadata&&null!==e.didDocumentMetadata?i.DidDocumentMetadata.fromPartial(e.didDocumentMetadata):void 0,t}}},75823:function(e,i,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(i,"__esModule",{value:!0}),i.DocumentProof=i.protobufPackage=void 0;const a=r(t(59210)),o=t(81907);function s(e){return null!=e}i.protobufPackage="hypersign.ssi.v1",i.DocumentProof={encode:(e,i=a.default.Writer.create())=>(void 0!==e.type&&""!==e.type&&i.uint32(10).string(e.type),void 0!==e.created&&""!==e.created&&i.uint32(18).string(e.created),void 0!==e.verificationMethod&&""!==e.verificationMethod&&i.uint32(26).string(e.verificationMethod),void 0!==e.proofPurpose&&""!==e.proofPurpose&&i.uint32(34).string(e.proofPurpose),void 0!==e.proofValue&&""!==e.proofValue&&i.uint32(42).string(e.proofValue),void 0!==e.clientSpecType&&e.clientSpecType!==o.ClientSpecType.CLIENT_SPEC_TYPE_NONE&&i.uint32(48).int32((0,o.clientSpecTypeToNumber)(e.clientSpecType)),i),decode(e,i){const t=e instanceof a.default.Reader?e:a.default.Reader.create(e);let r=void 0===i?t.len:t.pos+i;const s={};for(;t.pos<r;){const e=t.uint32();switch(e>>>3){case 1:if(10!==e)break;s.type=t.string();continue;case 2:if(18!==e)break;s.created=t.string();continue;case 3:if(26!==e)break;s.verificationMethod=t.string();continue;case 4:if(34!==e)break;s.proofPurpose=t.string();continue;case 5:if(42!==e)break;s.proofValue=t.string();continue;case 6:if(48!==e)break;s.clientSpecType=(0,o.clientSpecTypeFromJSON)(t.int32());continue}if(4==(7&e)||0===e)break;t.skipType(7&e)}return s},fromJSON:e=>({type:s(e.type)?globalThis.String(e.type):void 0,created:s(e.created)?globalThis.String(e.created):void 0,verificationMethod:s(e.verificationMethod)?globalThis.String(e.verificationMethod):void 0,proofPurpose:s(e.proofPurpose)?globalThis.String(e.proofPurpose):void 0,proofValue:s(e.proofValue)?globalThis.String(e.proofValue):void 0,clientSpecType:s(e.clientSpecType)?(0,o.clientSpecTypeFromJSON)(e.clientSpecType):void 0}),toJSON(e){const i={};return void 0!==e.type&&""!==e.type&&(i.type=e.type),void 0!==e.created&&""!==e.created&&(i.created=e.created),void 0!==e.verificationMethod&&""!==e.verificationMethod&&(i.verificationMethod=e.verificationMethod),void 0!==e.proofPurpose&&""!==e.proofPurpose&&(i.proofPurpose=e.proofPurpose),void 0!==e.proofValue&&""!==e.proofValue&&(i.proofValue=e.proofValue),void 0!==e.clientSpecType&&e.clientSpecType!==o.ClientSpecType.CLIENT_SPEC_TYPE_NONE&&(i.clientSpecType=(0,o.clientSpecTypeToJSON)(e.clientSpecType)),i},create:e=>i.DocumentProof.fromPartial(null!=e?e:{}),fromPartial(e){var i,t,r,a,o,s;const n={};return n.type=null!==(i=e.type)&&void 0!==i?i:void 0,n.created=null!==(t=e.created)&&void 0!==t?t:void 0,n.verificationMethod=null!==(r=e.verificationMethod)&&void 0!==r?r:void 0,n.proofPurpose=null!==(a=e.proofPurpose)&&void 0!==a?a:void 0,n.proofValue=null!==(o=e.proofValue)&&void 0!==o?o:void 0,n.clientSpecType=null!==(s=e.clientSpecType)&&void 0!==s?s:void 0,n}}},13020:function(e,i,t){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(i,"__esModule",{value:!0}),i.MsgClientImpl=i.MsgServiceName=i.MsgUpdateCredentialStatusResponse=i.MsgUpdateCredentialStatus=i.MsgRegisterCredentialStatusResponse=i.MsgRegisterCredentialStatus=i.MsgUpdateCredentialSchemaResponse=i.MsgUpdateCredentialSchema=i.MsgRegisterCredentialSchemaResponse=i.MsgRegisterCredentialSchema=i.MsgDeactivateDIDResponse=i.MsgDeactivateDID=i.MsgUpdateDIDResponse=i.MsgUpdateDID=i.MsgRegisterDIDResponse=i.MsgRegisterDID=i.protobufPackage=void 0;const a=r(t(59210)),o=t(8496),s=t(81958),n=t(89786),d=t(75823);function c(e){return null!=e}i.protobufPackage="hypersign.ssi.v1",i.MsgRegisterDID={encode(e,i=a.default.Writer.create()){if(void 0!==e.didDocument&&n.DidDocument.encode(e.didDocument,i.uint32(10).fork()).ldelim(),void 0!==e.didDocumentProofs&&0!==e.didDocumentProofs.length)for(const t of e.didDocumentProofs)d.DocumentProof.encode(t,i.uint32(18).fork()).ldelim();return void 0!==e.txAuthor&&""!==e.txAuthor&&i.uint32(26).string(e.txAuthor),i},decode(e,i){const t=e instanceof a.default.Reader?e:a.default.Reader.create(e);let r=void 0===i?t.len:t.pos+i;const o={};for(;t.pos<r;){const e=t.uint32();switch(e>>>3){case 1:if(10!==e)break;o.didDocument=n.DidDocument.decode(t,t.uint32());continue;case 2:if(18!==e)break;void 0===o.didDocumentProofs&&(o.didDocumentProofs=[]),o.didDocumentProofs.push(d.DocumentProof.decode(t,t.uint32()));continue;case 3:if(26!==e)break;o.txAuthor=t.string();continue}if(4==(7&e)||0===e)break;t.skipType(7&e)}return o},fromJSON:e=>({didDocument:c(e.didDocument)?n.DidDocument.fromJSON(e.didDocument):void 0,didDocumentProofs:globalThis.Array.isArray(null==e?void 0:e.didDocumentProofs)?e.didDocumentProofs.map((e=>d.DocumentProof.fromJSON(e))):void 0,txAuthor:c(e.txAuthor)?globalThis.String(e.txAuthor):void 0}),toJSON(e){var i;const t={};return void 0!==e.didDocument&&(t.didDocument=n.DidDocument.toJSON(e.didDocument)),(null===(i=e.didDocumentProofs)||void 0===i?void 0:i.length)&&(t.didDocumentProofs=e.didDocumentProofs.map((e=>d.DocumentProof.toJSON(e)))),void 0!==e.txAuthor&&""!==e.txAuthor&&(t.txAuthor=e.txAuthor),t},create:e=>i.MsgRegisterDID.fromPartial(null!=e?e:{}),fromPartial(e){var i,t;const r={};return r.didDocument=void 0!==e.didDocument&&null!==e.didDocument?n.DidDocument.fromPartial(e.didDocument):void 0,r.didDocumentProofs=(null===(i=e.didDocumentProofs)||void 0===i?void 0:i.map((e=>d.DocumentProof.fromPartial(e))))||void 0,r.txAuthor=null!==(t=e.txAuthor)&&void 0!==t?t:void 0,r}},i.MsgRegisterDIDResponse={encode:(e,i=a.default.Writer.create())=>i,decode(e,i){const t=e instanceof a.default.Reader?e:a.default.Reader.create(e);let r=void 0===i?t.len:t.pos+i;for(;t.pos<r;){const e=t.uint32();if(4==(7&e)||0===e)break;t.skipType(7&e)}return{}},fromJSON:e=>({}),toJSON:e=>({}),create:e=>i.MsgRegisterDIDResponse.fromPartial(null!=e?e:{}),fromPartial:e=>({})},i.MsgUpdateDID={encode(e,i=a.default.Writer.create()){if(void 0!==e.didDocument&&n.DidDocument.encode(e.didDocument,i.uint32(10).fork()).ldelim(),void 0!==e.didDocumentProofs&&0!==e.didDocumentProofs.length)for(const t of e.didDocumentProofs)d.DocumentProof.encode(t,i.uint32(18).fork()).ldelim();return void 0!==e.versionId&&""!==e.versionId&&i.uint32(26).string(e.versionId),void 0!==e.txAuthor&&""!==e.txAuthor&&i.uint32(34).string(e.txAuthor),i},decode(e,i){const t=e instanceof a.default.Reader?e:a.default.Reader.create(e);let r=void 0===i?t.len:t.pos+i;const o={};for(;t.pos<r;){const e=t.uint32();switch(e>>>3){case 1:if(10!==e)break;o.didDocument=n.DidDocument.decode(t,t.uint32());continue;case 2:if(18!==e)break;void 0===o.didDocumentProofs&&(o.didDocumentProofs=[]),o.didDocumentProofs.push(d.DocumentProof.decode(t,t.uint32()));continue;case 3:if(26!==e)break;o.versionId=t.string();continue;case 4:if(34!==e)break;o.txAuthor=t.string();continue}if(4==(7&e)||0===e)break;t.skipType(7&e)}return o},fromJSON:e=>({didDocument:c(e.didDocument)?n.DidDocument.fromJSON(e.didDocument):void 0,didDocumentProofs:globalThis.Array.isArray(null==e?void 0:e.didDocumentProofs)?e.didDocumentProofs.map((e=>d.DocumentProof.fromJSON(e))):void 0,versionId:c(e.versionId)?globalThis.String(e.versionId):void 0,txAuthor:c(e.txAuthor)?globalThis.String(e.txAuthor):void 0}),toJSON(e){var i;const t={};return void 0!==e.didDocument&&(t.didDocument=n.DidDocument.toJSON(e.didDocument)),(null===(i=e.didDocumentProofs)||void 0===i?void 0:i.length)&&(t.didDocumentProofs=e.didDocumentProofs.map((e=>d.DocumentProof.toJSON(e)))),void 0!==e.versionId&&""!==e.versionId&&(t.versionId=e.versionId),void 0!==e.txAuthor&&""!==e.txAuthor&&(t.txAuthor=e.txAuthor),t},create:e=>i.MsgUpdateDID.fromPartial(null!=e?e:{}),fromPartial(e){var i,t,r;const a={};return a.didDocument=void 0!==e.didDocument&&null!==e.didDocument?n.DidDocument.fromPartial(e.didDocument):void 0,a.didDocumentProofs=(null===(i=e.didDocumentProofs)||void 0===i?void 0:i.map((e=>d.DocumentProof.fromPartial(e))))||void 0,a.versionId=null!==(t=e.versionId)&&void 0!==t?t:void 0,a.txAuthor=null!==(r=e.txAuthor)&&void 0!==r?r:void 0,a}},i.MsgUpdateDIDResponse={encode:(e,i=a.default.Writer.create())=>i,decode(e,i){const t=e instanceof a.default.Reader?e:a.default.Reader.create(e);let r=void 0===i?t.len:t.pos+i;for(;t.pos<r;){const e=t.uint32();if(4==(7&e)||0===e)break;t.skipType(7&e)}return{}},fromJSON:e=>({}),toJSON:e=>({}),create:e=>i.MsgUpdateDIDResponse.fromPartial(null!=e?e:{}),fromPartial:e=>({})},i.MsgDeactivateDID={encode(e,i=a.default.Writer.create()){if(void 0!==e.didDocumentId&&""!==e.didDocumentId&&i.uint32(10).string(e.didDocumentId),void 0!==e.didDocumentProofs&&0!==e.didDocumentProofs.length)for(const t of e.didDocumentProofs)d.DocumentProof.encode(t,i.uint32(18).fork()).ldelim();return void 0!==e.versionId&&""!==e.versionId&&i.uint32(26).string(e.versionId),void 0!==e.txAuthor&&""!==e.txAuthor&&i.uint32(34).string(e.txAuthor),i},decode(e,i){const t=e instanceof a.default.Reader?e:a.default.Reader.create(e);let r=void 0===i?t.len:t.pos+i;const o={};for(;t.pos<r;){const e=t.uint32();switch(e>>>3){case 1:if(10!==e)break;o.didDocumentId=t.string();continue;case 2:if(18!==e)break;void 0===o.didDocumentProofs&&(o.didDocumentProofs=[]),o.didDocumentProofs.push(d.DocumentProof.decode(t,t.uint32()));continue;case 3:if(26!==e)break;o.versionId=t.string();continue;case 4:if(34!==e)break;o.txAuthor=t.string();continue}if(4==(7&e)||0===e)break;t.skipType(7&e)}return o},fromJSON:e=>({didDocumentId:c(e.didDocumentId)?globalThis.String(e.didDocumentId):void 0,didDocumentProofs:globalThis.Array.isArray(null==e?void 0:e.didDocumentProofs)?e.didDocumentProofs.map((e=>d.DocumentProof.fromJSON(e))):void 0,versionId:c(e.versionId)?globalThis.String(e.versionId):void 0,txAuthor:c(e.txAuthor)?globalThis.String(e.txAuthor):void 0}),toJSON(e){var i;const t={};return void 0!==e.didDocumentId&&""!==e.didDocumentId&&(t.didDocumentId=e.didDocumentId),(null===(i=e.didDocumentProofs)||void 0===i?void 0:i.length)&&(t.didDocumentProofs=e.didDocumentProofs.map((e=>d.DocumentProof.toJSON(e)))),void 0!==e.versionId&&""!==e.versionId&&(t.versionId=e.versionId),void 0!==e.txAuthor&&""!==e.txAuthor&&(t.txAuthor=e.txAuthor),t},create:e=>i.MsgDeactivateDID.fromPartial(null!=e?e:{}),fromPartial(e){var i,t,r,a;const o={};return o.didDocumentId=null!==(i=e.didDocumentId)&&void 0!==i?i:void 0,o.didDocumentProofs=(null===(t=e.didDocumentProofs)||void 0===t?void 0:t.map((e=>d.DocumentProof.fromPartial(e))))||void 0,o.versionId=null!==(r=e.versionId)&&void 0!==r?r:void 0,o.txAuthor=null!==(a=e.txAuthor)&&void 0!==a?a:void 0,o}},i.MsgDeactivateDIDResponse={encode:(e,i=a.default.Writer.create())=>i,decode(e,i){const t=e instanceof a.default.Reader?e:a.default.Reader.create(e);let r=void 0===i?t.len:t.pos+i;for(;t.pos<r;){const e=t.uint32();if(4==(7&e)||0===e)break;t.skipType(7&e)}return{}},fromJSON:e=>({}),toJSON:e=>({}),create:e=>i.MsgDeactivateDIDResponse.fromPartial(null!=e?e:{}),fromPartial:e=>({})},i.MsgRegisterCredentialSchema={encode:(e,i=a.default.Writer.create())=>(void 0!==e.credentialSchemaDocument&&o.CredentialSchemaDocument.encode(e.credentialSchemaDocument,i.uint32(10).fork()).ldelim(),void 0!==e.credentialSchemaProof&&d.DocumentProof.encode(e.credentialSchemaProof,i.uint32(18).fork()).ldelim(),void 0!==e.txAuthor&&""!==e.txAuthor&&i.uint32(26).string(e.txAuthor),i),decode(e,i){const t=e instanceof a.default.Reader?e:a.default.Reader.create(e);let r=void 0===i?t.len:t.pos+i;const s={};for(;t.pos<r;){const e=t.uint32();switch(e>>>3){case 1:if(10!==e)break;s.credentialSchemaDocument=o.CredentialSchemaDocument.decode(t,t.uint32());continue;case 2:if(18!==e)break;s.credentialSchemaProof=d.DocumentProof.decode(t,t.uint32());continue;case 3:if(26!==e)break;s.txAuthor=t.string();continue}if(4==(7&e)||0===e)break;t.skipType(7&e)}return s},fromJSON:e=>({credentialSchemaDocument:c(e.credentialSchemaDocument)?o.CredentialSchemaDocument.fromJSON(e.credentialSchemaDocument):void 0,credentialSchemaProof:c(e.credentialSchemaProof)?d.DocumentProof.fromJSON(e.credentialSchemaProof):void 0,txAuthor:c(e.txAuthor)?globalThis.String(e.txAuthor):void 0}),toJSON(e){const i={};return void 0!==e.credentialSchemaDocument&&(i.credentialSchemaDocument=o.CredentialSchemaDocument.toJSON(e.credentialSchemaDocument)),void 0!==e.credentialSchemaProof&&(i.credentialSchemaProof=d.DocumentProof.toJSON(e.credentialSchemaProof)),void 0!==e.txAuthor&&""!==e.txAuthor&&(i.txAuthor=e.txAuthor),i},create:e=>i.MsgRegisterCredentialSchema.fromPartial(null!=e?e:{}),fromPartial(e){var i;const t={};return t.credentialSchemaDocument=void 0!==e.credentialSchemaDocument&&null!==e.credentialSchemaDocument?o.CredentialSchemaDocument.fromPartial(e.credentialSchemaDocument):void 0,t.credentialSchemaProof=void 0!==e.credentialSchemaProof&&null!==e.credentialSchemaProof?d.DocumentProof.fromPartial(e.credentialSchemaProof):void 0,t.txAuthor=null!==(i=e.txAuthor)&&void 0!==i?i:void 0,t}},i.MsgRegisterCredentialSchemaResponse={encode:(e,i=a.default.Writer.create())=>i,decode(e,i){const t=e instanceof a.default.Reader?e:a.default.Reader.create(e);let r=void 0===i?t.len:t.pos+i;for(;t.pos<r;){const e=t.uint32();if(4==(7&e)||0===e)break;t.skipType(7&e)}return{}},fromJSON:e=>({}),toJSON:e=>({}),create:e=>i.MsgRegisterCredentialSchemaResponse.fromPartial(null!=e?e:{}),fromPartial:e=>({})},i.MsgUpdateCredentialSchema={encode:(e,i=a.default.Writer.create())=>(void 0!==e.credentialSchemaDocument&&o.CredentialSchemaDocument.encode(e.credentialSchemaDocument,i.uint32(10).fork()).ldelim(),void 0!==e.credentialSchemaProof&&d.DocumentProof.encode(e.credentialSchemaProof,i.uint32(18).fork()).ldelim(),void 0!==e.txAuthor&&""!==e.txAuthor&&i.uint32(26).string(e.txAuthor),i),decode(e,i){const t=e instanceof a.default.Reader?e:a.default.Reader.create(e);let r=void 0===i?t.len:t.pos+i;const s={};for(;t.pos<r;){const e=t.uint32();switch(e>>>3){case 1:if(10!==e)break;s.credentialSchemaDocument=o.CredentialSchemaDocument.decode(t,t.uint32());continue;case 2:if(18!==e)break;s.credentialSchemaProof=d.DocumentProof.decode(t,t.uint32());continue;case 3:if(26!==e)break;s.txAuthor=t.string();continue}if(4==(7&e)||0===e)break;t.skipType(7&e)}return s},fromJSON:e=>({credentialSchemaDocument:c(e.credentialSchemaDocument)?o.CredentialSchemaDocument.fromJSON(e.credentialSchemaDocument):void 0,credentialSchemaProof:c(e.credentialSchemaProof)?d.DocumentProof.fromJSON(e.credentialSchemaProof):void 0,txAuthor:c(e.txAuthor)?globalThis.String(e.txAuthor):void 0}),toJSON(e){const i={};return void 0!==e.credentialSchemaDocument&&(i.credentialSchemaDocument=o.CredentialSchemaDocument.toJSON(e.credentialSchemaDocument)),void 0!==e.credentialSchemaProof&&(i.credentialSchemaProof=d.DocumentProof.toJSON(e.credentialSchemaProof)),void 0!==e.txAuthor&&""!==e.txAuthor&&(i.txAuthor=e.txAuthor),i},create:e=>i.MsgUpdateCredentialSchema.fromPartial(null!=e?e:{}),fromPartial(e){var i;const t={};return t.credentialSchemaDocument=void 0!==e.credentialSchemaDocument&&null!==e.credentialSchemaDocument?o.CredentialSchemaDocument.fromPartial(e.credentialSchemaDocument):void 0,t.credentialSchemaProof=void 0!==e.credentialSchemaProof&&null!==e.credentialSchemaProof?d.DocumentProof.fromPartial(e.credentialSchemaProof):void 0,t.txAuthor=null!==(i=e.txAuthor)&&void 0!==i?i:void 0,t}},i.MsgUpdateCredentialSchemaResponse={encode:(e,i=a.default.Writer.create())=>i,decode(e,i){const t=e instanceof a.default.Reader?e:a.default.Reader.create(e);let r=void 0===i?t.len:t.pos+i;for(;t.pos<r;){const e=t.uint32();if(4==(7&e)||0===e)break;t.skipType(7&e)}return{}},fromJSON:e=>({}),toJSON:e=>({}),create:e=>i.MsgUpdateCredentialSchemaResponse.fromPartial(null!=e?e:{}),fromPartial:e=>({})},i.MsgRegisterCredentialStatus={encode:(e,i=a.default.Writer.create())=>(void 0!==e.credentialStatusDocument&&s.CredentialStatusDocument.encode(e.credentialStatusDocument,i.uint32(10).fork()).ldelim(),void 0!==e.credentialStatusProof&&d.DocumentProof.encode(e.credentialStatusProof,i.uint32(18).fork()).ldelim(),void 0!==e.txAuthor&&""!==e.txAuthor&&i.uint32(26).string(e.txAuthor),i),decode(e,i){const t=e instanceof a.default.Reader?e:a.default.Reader.create(e);let r=void 0===i?t.len:t.pos+i;const o={};for(;t.pos<r;){const e=t.uint32();switch(e>>>3){case 1:if(10!==e)break;o.credentialStatusDocument=s.CredentialStatusDocument.decode(t,t.uint32());continue;case 2:if(18!==e)break;o.credentialStatusProof=d.DocumentProof.decode(t,t.uint32());continue;case 3:if(26!==e)break;o.txAuthor=t.string();continue}if(4==(7&e)||0===e)break;t.skipType(7&e)}return o},fromJSON:e=>({credentialStatusDocument:c(e.credentialStatusDocument)?s.CredentialStatusDocument.fromJSON(e.credentialStatusDocument):void 0,credentialStatusProof:c(e.credentialStatusProof)?d.DocumentProof.fromJSON(e.credentialStatusProof):void 0,txAuthor:c(e.txAuthor)?globalThis.String(e.txAuthor):void 0}),toJSON(e){const i={};return void 0!==e.credentialStatusDocument&&(i.credentialStatusDocument=s.CredentialStatusDocument.toJSON(e.credentialStatusDocument)),void 0!==e.credentialStatusProof&&(i.credentialStatusProof=d.DocumentProof.toJSON(e.credentialStatusProof)),void 0!==e.txAuthor&&""!==e.txAuthor&&(i.txAuthor=e.txAuthor),i},create:e=>i.MsgRegisterCredentialStatus.fromPartial(null!=e?e:{}),fromPartial(e){var i;const t={};return t.credentialStatusDocument=void 0!==e.credentialStatusDocument&&null!==e.credentialStatusDocument?s.CredentialStatusDocument.fromPartial(e.credentialStatusDocument):void 0,t.credentialStatusProof=void 0!==e.credentialStatusProof&&null!==e.credentialStatusProof?d.DocumentProof.fromPartial(e.credentialStatusProof):void 0,t.txAuthor=null!==(i=e.txAuthor)&&void 0!==i?i:void 0,t}},i.MsgRegisterCredentialStatusResponse={encode:(e,i=a.default.Writer.create())=>i,decode(e,i){const t=e instanceof a.default.Reader?e:a.default.Reader.create(e);let r=void 0===i?t.len:t.pos+i;for(;t.pos<r;){const e=t.uint32();if(4==(7&e)||0===e)break;t.skipType(7&e)}return{}},fromJSON:e=>({}),toJSON:e=>({}),create:e=>i.MsgRegisterCredentialStatusResponse.fromPartial(null!=e?e:{}),fromPartial:e=>({})},i.MsgUpdateCredentialStatus={encode:(e,i=a.default.Writer.create())=>(void 0!==e.credentialStatusDocument&&s.CredentialStatusDocument.encode(e.credentialStatusDocument,i.uint32(10).fork()).ldelim(),void 0!==e.credentialStatusProof&&d.DocumentProof.encode(e.credentialStatusProof,i.uint32(18).fork()).ldelim(),void 0!==e.txAuthor&&""!==e.txAuthor&&i.uint32(26).string(e.txAuthor),i),decode(e,i){const t=e instanceof a.default.Reader?e:a.default.Reader.create(e);let r=void 0===i?t.len:t.pos+i;const o={};for(;t.pos<r;){const e=t.uint32();switch(e>>>3){case 1:if(10!==e)break;o.credentialStatusDocument=s.CredentialStatusDocument.decode(t,t.uint32());continue;case 2:if(18!==e)break;o.credentialStatusProof=d.DocumentProof.decode(t,t.uint32());continue;case 3:if(26!==e)break;o.txAuthor=t.string();continue}if(4==(7&e)||0===e)break;t.skipType(7&e)}return o},fromJSON:e=>({credentialStatusDocument:c(e.credentialStatusDocument)?s.CredentialStatusDocument.fromJSON(e.credentialStatusDocument):void 0,credentialStatusProof:c(e.credentialStatusProof)?d.DocumentProof.fromJSON(e.credentialStatusProof):void 0,txAuthor:c(e.txAuthor)?globalThis.String(e.txAuthor):void 0}),toJSON(e){const i={};return void 0!==e.credentialStatusDocument&&(i.credentialStatusDocument=s.CredentialStatusDocument.toJSON(e.credentialStatusDocument)),void 0!==e.credentialStatusProof&&(i.credentialStatusProof=d.DocumentProof.toJSON(e.credentialStatusProof)),void 0!==e.txAuthor&&""!==e.txAuthor&&(i.txAuthor=e.txAuthor),i},create:e=>i.MsgUpdateCredentialStatus.fromPartial(null!=e?e:{}),fromPartial(e){var i;const t={};return t.credentialStatusDocument=void 0!==e.credentialStatusDocument&&null!==e.credentialStatusDocument?s.CredentialStatusDocument.fromPartial(e.credentialStatusDocument):void 0,t.credentialStatusProof=void 0!==e.credentialStatusProof&&null!==e.credentialStatusProof?d.DocumentProof.fromPartial(e.credentialStatusProof):void 0,t.txAuthor=null!==(i=e.txAuthor)&&void 0!==i?i:void 0,t}},i.MsgUpdateCredentialStatusResponse={encode:(e,i=a.default.Writer.create())=>i,decode(e,i){const t=e instanceof a.default.Reader?e:a.default.Reader.create(e);let r=void 0===i?t.len:t.pos+i;for(;t.pos<r;){const e=t.uint32();if(4==(7&e)||0===e)break;t.skipType(7&e)}return{}},fromJSON:e=>({}),toJSON:e=>({}),create:e=>i.MsgUpdateCredentialStatusResponse.fromPartial(null!=e?e:{}),fromPartial:e=>({})},i.MsgServiceName="hypersign.ssi.v1.Msg",i.MsgClientImpl=class{constructor(e,t){this.service=(null==t?void 0:t.service)||i.MsgServiceName,this.rpc=e,this.RegisterDID=this.RegisterDID.bind(this),this.UpdateDID=this.UpdateDID.bind(this),this.DeactivateDID=this.DeactivateDID.bind(this),this.RegisterCredentialSchema=this.RegisterCredentialSchema.bind(this),this.UpdateCredentialSchema=this.UpdateCredentialSchema.bind(this),this.RegisterCredentialStatus=this.RegisterCredentialStatus.bind(this),this.UpdateCredentialStatus=this.UpdateCredentialStatus.bind(this)}RegisterDID(e){const t=i.MsgRegisterDID.encode(e).finish();return this.rpc.request(this.service,"RegisterDID",t).then((e=>i.MsgRegisterDIDResponse.decode(a.default.Reader.create(e))))}UpdateDID(e){const t=i.MsgUpdateDID.encode(e).finish();return this.rpc.request(this.service,"UpdateDID",t).then((e=>i.MsgUpdateDIDResponse.decode(a.default.Reader.create(e))))}DeactivateDID(e){const t=i.MsgDeactivateDID.encode(e).finish();return this.rpc.request(this.service,"DeactivateDID",t).then((e=>i.MsgDeactivateDIDResponse.decode(a.default.Reader.create(e))))}RegisterCredentialSchema(e){const t=i.MsgRegisterCredentialSchema.encode(e).finish();return this.rpc.request(this.service,"RegisterCredentialSchema",t).then((e=>i.MsgRegisterCredentialSchemaResponse.decode(a.default.Reader.create(e))))}UpdateCredentialSchema(e){const t=i.MsgUpdateCredentialSchema.encode(e).finish();return this.rpc.request(this.service,"UpdateCredentialSchema",t).then((e=>i.MsgUpdateCredentialSchemaResponse.decode(a.default.Reader.create(e))))}RegisterCredentialStatus(e){const t=i.MsgRegisterCredentialStatus.encode(e).finish();return this.rpc.request(this.service,"RegisterCredentialStatus",t).then((e=>i.MsgRegisterCredentialStatusResponse.decode(a.default.Reader.create(e))))}UpdateCredentialStatus(e){const t=i.MsgUpdateCredentialStatus.encode(e).finish();return this.rpc.request(this.service,"UpdateCredentialStatus",t).then((e=>i.MsgUpdateCredentialStatusResponse.decode(a.default.Reader.create(e))))}}},14132:function(e,i,t){var r=this&&this.__awaiter||function(e,i,t,r){return new(t||(t=Promise))((function(a,o){function s(e){try{d(r.next(e))}catch(e){o(e)}}function n(e){try{d(r.throw(e))}catch(e){o(e)}}function d(e){var i;e.done?a(e.value):(i=e.value,i instanceof t?i:new t((function(e){e(i)}))).then(s,n)}d((r=r.apply(e,i||[])).next())}))},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(i,"__esModule",{value:!0});const o=a(t(30053)),s=a(t(28850)),n=a(t(41465)),d=a(t(76461)),c=a(t(33091)),l=a(t(87557)),h=a(t(47835)),u=a(t(59353)),m=a(t(37263)),p=a(t(35717)),f=a(t(33977)),y=a(t(2796)),g=a(t(4995));let S;S="undefined"==typeof window?c.default.documentLoaders.node():c.default.documentLoaders.xhr();const v=a(t(83172)),D=Object.freeze({"https://www.w3.org/ns/did/v1":Object.assign({},o.default),"https://w3id.org/security/suites/ed25519-2020/v1":Object.assign({},s.default),"https://w3id.org/security/v2":Object.assign({},n.default),"https://www.w3.org/2018/credentials/v1":Object.assign({},d.default),"https://w3c.github.io/vc-data-integrity/vocab/security/vocabulary.jsonld":Object.assign({},l.default),"https://w3id.org/security/suites/secp256k1recovery-2020/v2":Object.assign({},h.default),"https://schema.org":Object.assign({},u.default),"https://ns.did.ai/suites/x25519-2020/v1":Object.assign({},m.default),"https://identity.foundation/.well-known/did-configuration/v1":Object.assign({},v.default),"https://raw.githubusercontent.com/hypersign-protocol/hypersign-contexts/main/BabyJubJubKey2021.jsonld":{"@context":{id:"@id",type:"@type","@protected":!0,"hypersign-vocab":"urn:uuid:13fe9318-bb82-4d95-8bf5-8e7fdf8b2026#",BabyJubJubKey2021:{"@id":"hypersign-vocab:BabyJubJubKey2021","@context":{id:"@id",type:"@type",controller:{"@id":"https://w3id.org/security#controller","@type":"@id"},publicKeyMultibase:{"@id":"https://w3id.org/security#publicKeyMultibase","@type":"https://w3id.org/security#multibase"}}}}},"https://raw.githubusercontent.com/hypersign-protocol/hypersign-contexts/main/X25519KeyAgreementKeyEIP5630.jsonld":Object.assign({},p.default),"https://raw.githubusercontent.com/hypersign-protocol/hypersign-contexts/main/CredentialStatus.jsonld":Object.assign({},f.default),"https://raw.githubusercontent.com/hypersign-protocol/hypersign-contexts/main/CredentialSchema.jsonld":Object.assign({},y.default),"https://raw.githubusercontent.com/hypersign-protocol/hypersign-contexts/main/HypersignCredentialStatus2023.jsonld":Object.assign({},g.default),"https://raw.githubusercontent.com/hypersign-protocol/hypersign-contexts/main/BJJSignature2021.jsonld":{"@context":{"@version":1.1,id:"@id",type:"@type",BJJSignature2021:{"@id":"https://w3id.org/security#BJJSignature2021","@context":{"@version":1.1,"@protected":!0,id:"@id",type:"@type",challenge:"https://w3id.org/security#challenge",created:{"@id":"http://purl.org/dc/terms/created","@type":"http://www.w3.org/2001/XMLSchema#dateTime"},domain:"https://w3id.org/security#domain",proofValue:"https://w3id.org/security#proofValue",credentialRoot:"https://w3id.org/security#credentialRoot",nonce:"https://w3id.org/security#nonce",proofPurpose:{"@id":"https://w3id.org/security#proofPurpose","@type":"@vocab","@context":{"@version":1.1,"@protected":!0,id:"@id",type:"@type",assertionMethod:{"@id":"https://w3id.org/security#assertionMethod","@type":"@id","@container":"@set"},authentication:{"@id":"https://w3id.org/security#authenticationMethod","@type":"@id","@container":"@set"}}},verificationMethod:{"@id":"https://w3id.org/security#verificationMethod","@type":"@id"}}},BabyJubJubSignatureProof2021:{"@id":"https://w3id.org/security#BabyJubJubSignatureProof2021","@context":{"@version":1.1,"@protected":!0,id:"@id",type:"@type",challenge:"https://w3id.org/security#challenge",created:{"@id":"http://purl.org/dc/terms/created","@type":"http://www.w3.org/2001/XMLSchema#dateTime"},domain:"https://w3id.org/security#domain",nonce:"https://w3id.org/security#nonce",proofPurpose:{"@id":"https://w3id.org/security#proofPurpose","@type":"@vocab","@context":{"@version":1.1,"@protected":!0,id:"@id",type:"@type",sec:"https://w3id.org/security#",assertionMethod:{"@id":"https://w3id.org/security#assertionMethod","@type":"@id","@container":"@set"},authentication:{"@id":"https://w3id.org/security#authenticationMethod","@type":"@id","@container":"@set"}}},proofValue:"https://w3id.org/security#proofValue",credentialRoot:"https://w3id.org/security#credentialRoot",verificationMethod:{"@id":"https://w3id.org/security#verificationMethod","@type":"@id"}}}}}});i.default=(e,i)=>r(void 0,void 0,void 0,(function*(){return e in D?{contextUrl:null,document:D[e],documentUrl:e}:S(e)}))},75259:(e,i,t)=>{Object.defineProperty(i,"__esModule",{value:!0}),i.GAS_FEE_METHODS=i.GAS_FEE_API_URL=i.HID_MIN_FEE=i.HID_MIN_GAS=i.HID_DNOMINATION=i.HID_DECIMAL=i.GAS_PRICE=i.KEY_HEADERS=i.SCHEMA=i.VP=i.VC=i.DID=i.CAIP_10_PREFIX=i.DID_BabyJubJubKey2021=i.DID_EcdsaSecp256k1VerificationKey2019=i.DID_EcdsaSecp256k1RecoveryMethod2020=i.DID_Ed25519VerificationKey2020=i.CredentialStatusReasonEnums=i.CredentialStatusEnums=i.HIDRpcEnums=i.HYPERSIGN_NETWORK_BANK_BALANCE_PATH=i.HYPERSIGN_NETWORK_CREDENTIALSTATUS_PATH=i.HYPERSIGN_NETWORK_SCHEMA_PATH=i.HYPERSIGN_NETWORK_DID_PATH=i.HID_COSMOS_MODULE=i.HYPERSIGN_MAINNET_REST=i.HYPERSIGN_MAINNET_RPC=i.HYPERSIGN_TESTNET_REST=i.HYPERSIGN_TESTNET_RPC=i.compactProof=void 0;const r=t(593);var a,o,s;i.compactProof=!1,i.HYPERSIGN_TESTNET_RPC="https://rpc.jagrat.hypersign.id",i.HYPERSIGN_TESTNET_REST="https://api.jagrat.hypersign.id",i.HYPERSIGN_MAINNET_RPC="http://localhost:26657",i.HYPERSIGN_MAINNET_REST="http://localhost:1317",i.HID_COSMOS_MODULE="/hypersign.ssi.v1",i.HYPERSIGN_NETWORK_DID_PATH="hypersign-protocol/hidnode/ssi/did",i.HYPERSIGN_NETWORK_SCHEMA_PATH="hypersign-protocol/hidnode/ssi/schema",i.HYPERSIGN_NETWORK_CREDENTIALSTATUS_PATH="hypersign-protocol/hidnode/ssi/credential",i.HYPERSIGN_NETWORK_BANK_BALANCE_PATH="/bank/balances/",function(e){e.MsgRegisterDID="MsgRegisterDID",e.MsgUpdateDID="MsgUpdateDID",e.MsgDeactivateDID="MsgDeactivateDID",e.MsgRegisterCredentialSchema="MsgRegisterCredentialSchema",e.MsgRegisterCredentialStatus="MsgRegisterCredentialStatus",e.MsgUpdateCredentialStatus="MsgUpdateCredentialStatus"}(a=i.HIDRpcEnums||(i.HIDRpcEnums={})),Object.freeze(a),function(e){e.LIVE="Live",e.REVOKED="Revoked",e.SUSPENDED="Suspended"}(o=i.CredentialStatusEnums||(i.CredentialStatusEnums={})),function(e){e.LIVE="Credential is live",e.REVOKED="Credential is revoked",e.SUSPENDED="Credential is suspended"}(s=i.CredentialStatusReasonEnums||(i.CredentialStatusReasonEnums={})),i.DID_Ed25519VerificationKey2020={CONTROLLER_CONTEXT:"https://w3id.org/security/v2",SCHEME:"did",METHOD:"hid",NAMESPACE:"testnet",DID_BASE_CONTEXT:"https://www.w3.org/ns/did/v1",DID_KEYAGREEMENT_CONTEXT:"https://ns.did.ai/suites/x25519-2020/v1",DID_Ed25519_CONTEXT_2020:"https://w3id.org/security/suites/ed25519-2020/v1",VERIFICATION_METHOD_TYPE:"Ed25519VerificationKey2020",BLOCKCHAINACCOUNTID_CONTEXT:"https://w3c.github.io/vc-data-integrity/vocab/security/vocabulary.jsonld",SIGNATURE_TYPE:r.ProofTypes.Ed25519Signature2020},i.DID_EcdsaSecp256k1RecoveryMethod2020={CONTROLLER_CONTEXT:"https://w3id.org/security/v2",SCHEME:"did",METHOD:"hid",NAMESPACE:"testnet",DID_BASE_CONTEXT:"https://www.w3.org/ns/did/v1",DID_KEYAGREEMENT_CONTEXT:"https://raw.githubusercontent.com/hypersign-protocol/hypersign-contexts/main/X25519KeyAgreementKeyEIP5630.jsonld",BLOCKCHAINACCOUNTID_CONTEXT:"https://w3c.github.io/vc-data-integrity/vocab/security/vocabulary.jsonld",SECP256K12020_RECOVERY_CONTEXT:"https://ns.did.ai/suites/secp256k1-2020/v1",VERIFICATION_METHOD_TYPE:r.VerificationMethodTypes.EcdsaSecp256k1RecoveryMethod2020,SIGNATURE_TYPE:r.ProofTypes.EcdsaSecp256k1RecoverySignature2020},i.DID_EcdsaSecp256k1VerificationKey2019={CONTROLLER_CONTEXT:"https://w3id.org/security/v2",SCHEME:"did",METHOD:"hid",NAMESPACE:"testnet",DID_BASE_CONTEXT:"https://www.w3.org/ns/did/v1",BLOCKCHAINACCOUNTID_CONTEXT:"https://w3c.github.io/vc-data-integrity/vocab/security/vocabulary.jsonld",SECP256K12020_VERIFICATION_CONTEXT:"https://ns.did.ai/suites/secp256k1-2019/v1",VERIFICATION_METHOD_TYPE:r.VerificationMethodTypes.EcdsaSecp256k1VerificationKey2019,SIGNATURE_TYPE:r.ProofTypes.EcdsaSecp256k1Signature2019},i.DID_BabyJubJubKey2021={CONTROLLER_CONTEXT:"https://w3id.org/security/v2",SCHEME:"did",METHOD:"hid",NAMESPACE:"testnet",DID_BASE_CONTEXT:"https://www.w3.org/ns/did/v1",DID_KEYAGREEMENT_CONTEXT:"https://ns.did.ai/suites/x25519-2020/v1",DID_BABYJUBJUBKEY2021:"https://raw.githubusercontent.com/hypersign-protocol/hypersign-contexts/main/BabyJubJubKey2021.jsonld",BABYJUBJUBSIGNATURE:"https://raw.githubusercontent.com/hypersign-protocol/hypersign-contexts/main/BJJSignature2021.jsonld",VERIFICATION_METHOD_TYPE:"BabyJubJubKey2021",BLOCKCHAINACCOUNTID_CONTEXT:"https://w3c.github.io/vc-data-integrity/vocab/security/vocabulary.jsonld",SIGNATURE_TYPE:r.ProofTypes.BJJSignature2021},(i.CAIP_10_PREFIX||(i.CAIP_10_PREFIX={})).eip155="eip155",i.DID={CONTROLLER_CONTEXT:"https://w3id.org/security/v2",SCHEME:"did",METHOD:"hid",NAMESPACE:"testnet",DID_BASE_CONTEXT:"https://www.w3.org/ns/did/v1",VERIFICATION_METHOD_TYPE:r.VerificationMethodTypes.Ed25519VerificationKey2020,BLOCKCHAINACCOUNTID_CONTEXT:"https://w3c.github.io/vc-data-integrity/vocab/security/vocabulary.jsonld"},Object.freeze(i.DID),i.VC={SCHEME:"vc",METHOD:"hid",NAMESPACE:"testnet",PREFIX:"vc:"+i.DID.METHOD+":"+i.DID.NAMESPACE+":",CREDENTAIL_SCHEMA_VALIDATOR_TYPE:"JsonSchemaValidator2018",CREDENTAIL_STATUS_TYPE:"HypersignCredentialStatus2023",CREDENTIAL_STATUS_CONTEXT:"https://raw.githubusercontent.com/hypersign-protocol/hypersign-contexts/main/CredentialStatus.jsonld",CONTEXT_HypersignCredentialStatus2023:"https://raw.githubusercontent.com/hypersign-protocol/hypersign-contexts/main/HypersignCredentialStatus2023.jsonld",CREDENTAIL_BASE_CONTEXT:"https://www.w3.org/2018/credentials/v1",CREDENTAIL_SECURITY_CONTEXT_V2:"https://w3id.org/security/v2",CREDENTIAIL_SECURITY_SUITE:"https://w3id.org/security/suites/ed25519-2020/v1",CREDENTAIL_ECDSA_SECURITY_SUITE:"https://w3id.org/security/suites/secp256k1recovery-2020/v2",PROOF_PURPOSE:r.VerificationMethodRelationships.assertionMethod,VERIFICATION_METHOD_TYPE:r.ProofTypes.Ed25519Signature2020,CRED_STATUS_TYPES:o,CRED_STATUS_REASON_TYPES:s},Object.freeze(i.VC),i.VP={PREFIX:"vp:",SCHEME:"vp",METHOD:"hid",NAMESPACE:"testnet"},Object.freeze(i.VP),i.SCHEMA={SCHEME:"sch",METHOD:"hid",NAMESPACE:"testnet",SCHEMA_JSON:"http://json-schema.org/draft-07/schema",SCHEMA_TYPE:"https://w3c-ccg.github.io/vc-json-schemas/v1/schema/1.0/schema.json",SIGNATURE_TYPE:r.ProofTypes.Ed25519Signature2020,PROOF_PURPOSE:r.VerificationMethodRelationships.assertionMethod,SCHEMA_CONTEXT:"https://raw.githubusercontent.com/hypersign-protocol/hypersign-contexts/main/CredentialSchema.jsonld"},Object.freeze(i.SCHEMA),i.KEY_HEADERS={MULTICODEC_ED25519_PUB_HEADER:new Uint8Array([237,1]),MULTICODEC_ED25519_PRIV_HEADER:new Uint8Array([128,38])},Object.freeze(i.KEY_HEADERS),i.GAS_PRICE="0.1",i.HID_DECIMAL=6,i.HID_DNOMINATION="uhid",i.HID_MIN_GAS="200000",i.HID_MIN_FEE="5000",i.GAS_FEE_API_URL=e=>`${e}/hypersign-protocol/hidnode/ssi/fixedfee`,i.GAS_FEE_METHODS={Register_Did:"register_did_fee",Update_Did:"update_did_fee",Deactivate_Did:"deactivate_did_fee",Register_Cred_Schema:"register_credential_schema_fee",Update_Cred_Schema:"update_credential_schema_fee",Register_Cred_Status:"register_credential_status_fee",Update_Cred_Status:"update_credential_status_fee"}},67051:function(e,i,t){var r=t(5966).lW,a=this&&this.__createBinding||(Object.create?function(e,i,t,r){void 0===r&&(r=t);var a=Object.getOwnPropertyDescriptor(i,t);a&&!("get"in a?!i.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return i[t]}}),Object.defineProperty(e,r,a)}:function(e,i,t,r){void 0===r&&(r=t),e[r]=i[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,i){Object.defineProperty(e,"default",{enumerable:!0,value:i})}:function(e,i){e.default=i}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var i={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&a(i,e,t);return o(i,e),i},n=this&&this.__awaiter||function(e,i,t,r){return new(t||(t=Promise))((function(a,o){function s(e){try{d(r.next(e))}catch(e){o(e)}}function n(e){try{d(r.throw(e))}catch(e){o(e)}}function d(e){var i;e.done?a(e.value):(i=e.value,i instanceof t?i:new t((function(e){e(i)}))).then(s,n)}d((r=r.apply(e,i||[])).next())}))},d=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(i,"__esModule",{value:!0});const c=d(t(55397)),l=t(55397),h=d(t(17571)),u=d(t(38307)),m=d(t(26021)),p=s(t(47592)),f=d(t(55397)),{AssertionProofPurpose:y}=f.default.purposes,g=t(22497),S=t(75259),v=d(t(14132)),D=t(55397),b=d(t(76706)),E=s(t(75259)),w=t(27943),I=t(34577),{Merklizer:P}=t(36117),C=(0,D.extendContextLoader)(v.default);i.default=class{constructor(e={}){const{namespace:i,offlineSigner:t,nodeRpcEndpoint:r,nodeRestEndpoint:a,entityApiSecretKey:o}=e;this.documentL=C,this.namespace=i&&""!=i?i:"";const s={offlineSigner:t,nodeRpcEndpoint:r||"MAIN",nodeRestEndpoint:a||""};this.credStatusRPC=new g.CredentialRPC(s),this.hsDid=new m.default(s),this.hsSchema=new u.default(s),o&&""!=o?(this.credentialApiService=new b.default(o),this.credStatusRPC=null):this.credentialApiService=null,this["@context"]=[],this.id="",this.type=[],this.issuer="",this.issuanceDate="",this.expirationDate="",this.credentialSubject={},this.credentialSchema={id:"",type:S.VC.CREDENTAIL_SCHEMA_VALIDATOR_TYPE},this.credentialStatus={id:"",type:S.VC.CREDENTAIL_STATUS_TYPE},this.proof={}}_jsonLdSign(e){return n(this,void 0,void 0,(function*(){const{credentialStatus:i,privateKeyMultibase:t,verificationMethodId:r}=e,a=yield w.BabyJubJubKeys2021.fromKeys({options:{id:r,controller:r},privateKeyMultibase:t,publicKeyMultibase:e.publicKeyMultibase}),o=new I.BabyJubJubSignature2021Suite({key:a,verificationMethod:r});return(yield f.default.sign(i,{suite:o,purpose:new y,documentLoader:v.default})).proof}))}_dateNow(e){return e?new Date(e).toISOString().slice(0,-5)+"Z":new Date((new Date).getTime()-1e5).toISOString().slice(0,-5)+"Z"}_getId(){return n(this,void 0,void 0,(function*(){const e=yield h.default.getUUID();let i;return i=this.namespace&&""!=this.namespace?`${S.VC.SCHEME}:${S.VC.METHOD}:${this.namespace}:${e}`:`${S.VC.SCHEME}:${S.VC.METHOD}:${e}`,i}))}_toTitleCase(e){return n(this,void 0,void 0,(function*(){return e.charAt(0).toUpperCase()+e.slice(1).toLowerCase()}))}init(){return n(this,void 0,void 0,(function*(){if(!this.credStatusRPC&&!this.credentialApiService)throw new Error("HID-SSI-SDK:: Error: HypersignVerifiableCredential class is not instantiated with Offlinesigner or have not been initilized with entityApiSecretKey");this.credStatusRPC&&(yield this.credStatusRPC.init()),this.credentialApiService&&(yield this.credentialApiService.auth())}))}generate(e){return n(this,void 0,void 0,(function*(){let i={};if(e.subjectDid&&e.subjectDidDocSigned)throw new Error("HID-SSI-SDK:: Error: Both subjectDid and subjectDidDoc cannot be passed");if(!this.credStatusRPC)throw new Error("HID-SSI-SDK:: Error: HypersignVerifiableCredential class is not instantiated with Offlinesigner or have not been initilized");const t=e.issuerDid,r=e.subjectDid;let a;const{didDocument:o}=yield this.hsDid.resolve({did:t});if(e.subjectDid)a=yield this.hsDid.resolve({did:e.subjectDid});else{if(!e.subjectDidDocSigned)throw new Error("HID-SSI-SDK:: Error: Could not resolve the subjectDid or subjectDidDoc");a={},a.didDocument=e.subjectDidDocSigned}const{didDocument:s}=a;if(!o)throw new Error("HID-SSI-SDK:: Error: Could not fetch issuer did doc, issuer did = "+t);if(!s)throw new Error("HID-SSI-SDK:: Error: Could not fetch subject did doc, subject did = "+r);if(e&&e.schemaContext&&e.type)try{const i=Array();i.push(S.VC.CREDENTAIL_BASE_CONTEXT),e.schemaContext.forEach((e=>{i.push(e)}));const t=e.issuerDid,r=e.subjectDid,a=e.expirationDate,o=e.fields,n={};return n["@context"]=i,n.id=yield this._getId(),n.type=[],n.type.push("VerifiableCredential"),e.type.forEach((e=>{n.type.push(e)})),n.issuer=t,n.issuanceDate=this._dateNow(new Date((new Date).getTime()-1e5).toISOString()),n.expirationDate=this._dateNow(a),n.credentialSubject=o,n.credentialSubject.id=r&&null!=r?r:s.id,n.credentialStatus={id:this.credStatusRPC.credentialRestEP+"/"+n.id,type:this.credentialStatus.type},n}catch(e){throw new Error("HID-SSI-SDK:: Error: Could not create credential, error = "+e)}else if(!e.schemaId)throw new Error("HID-SSI-SDK:: Error: schemaId is required when schemaContext and type not passed");try{i=yield this.hsSchema.resolve({schemaId:e.schemaId})}catch(i){throw new Error("HID-SSI-SDK:: Error: Could not resolve the schema from schemaId = "+e.schemaId)}const n={};n["@context"]=[S.VC.CREDENTAIL_BASE_CONTEXT,E.DID_BabyJubJubKey2021.DID_BABYJUBJUBKEY2021,E.DID_BabyJubJubKey2021.BABYJUBJUBSIGNATURE],n["@context"].push(S.VC.CONTEXT_HypersignCredentialStatus2023);const d=this.hsSchema.vcJsonSchema(i);n["@context"].push(d.$metadata.jsonLdContext),n.id=yield this._getId(),n.type=[],n.type.push("VerifiableCredential"),n.type.push(i.name),n.expirationDate=this._dateNow(e.expirationDate),n.issuanceDate=this._dateNow(),n.issuer=t,n.credentialSubject={};const c=new p.Validator(d,"2020-12",!0).validate({credentialSubject:Object.assign({},e.fields)});if(!c.valid)throw c.errors;return n.credentialSubject=e.fields,n.credentialSubject.id=r&&null!=r?r:s.id,n.credentialSchema={id:i.id,type:this.credentialSchema.type},n.credentialStatus={id:this.credStatusRPC.credentialRestEP+"/"+n.id,type:this.credentialStatus.type},n}))}issue(e){return n(this,void 0,void 0,(function*(){if(!e.verificationMethodId)throw new Error("HID-SSI-SDK:: Error: params.verificationMethodId is required to issue credential");if(!e.credential)throw new Error("HID-SSI-SDK:: Error: params.credential is required to issue credential");if(!e.privateKeyMultibase)throw new Error("HID-SSI-SDK:: Error: params.privateKeyMultibase is required to issue credential");if(!e.issuerDid)throw new Error("HID-SSI-SDK:: Error: params.issuerDid is required to issue credential");if(!this.credStatusRPC)throw new Error("HID-SSI-SDK:: Error: HypersignVerifiableCredential class is not instantiated with Offlinesigner or have not been initilized");null==e.registerCredential&&(e.registerCredential=!0);const{didDocument:i}=yield this.hsDid.resolve({did:e.issuerDid});if(null==i)throw new Error("HID-SSI-SDK:: Error: Could not resolve issuerDid = "+e.issuerDid);const t=e.verificationMethodId,a=i.verificationMethod.find((e=>e.id==t));if(!a)throw new Error("HID-SSI-SDK:: Error: Could not find verification method for id = "+e.verificationMethodId);const o=yield w.BabyJubJubKeys2021.fromKeys({privateKeyMultibase:e.privateKeyMultibase,publicKeyMultibase:a.publicKeyMultibase,options:{id:a.id,controller:a.controller}}),s=new I.BabyJubJubSignature2021Suite({verificationMethod:t,key:o}),n=yield P.merklizeJSONLD(JSON.stringify(e.credential),{documentLoader:C});let d=yield n.mt.root();d=r.from(d.bytes).toString("hex");const h={"@context":[E.VC.CREDENTIAL_STATUS_CONTEXT],id:e.credential.id,issuer:e.credential.issuer,issuanceDate:e.credential.issuanceDate,remarks:"Credential is active",credentialMerkleRootHash:d},u=yield this._jsonLdSign({credentialStatus:h,privateKeyMultibase:e.privateKeyMultibase,verificationMethodId:e.verificationMethodId,publicKeyMultibase:a.publicKeyMultibase}),{didDocument:m}=yield this.hsDid.resolve({did:e.credential.issuer});if(null==m)throw new Error("Could not resolve issuerDid = "+e.credential.issuer);if(!m.controller.includes(e.issuerDid))throw new Error(e.issuerDid+" is not a controller of "+e.credential.issuer);const p=yield c.default.sign(e.credential,{purpose:new l.purposes.AssertionProofPurpose({controller:{"@context":["https://www.w3.org/ns/did/v1"],id:m.id,assertionMethod:m.assertionMethod}}),suite:s,documentLoader:C});let f;if(e.registerCredential){if(f=yield this.credStatusRPC.registerCredentialStatus(h,u),!f||0!=f.code)throw new Error("HID-SSI-SDK:: Error while issuing the credential error = "+f.rawLog);return{signedCredential:p,credentialStatus:h,credentialStatusProof:u,credentialStatusRegistrationResult:f}}return{signedCredential:p,credentialStatus:h,credentialStatusProof:u}}))}verify(e){return n(this,void 0,void 0,(function*(){if(!e.credential)throw new Error("HID-SSI-SDK:: params.credential is required to verify credential");if(!e.credential.proof)throw new Error("HID-SSI-SDK:: params.credential.proof is required to verify credential");if(!e.verificationMethodId)throw new Error("HID-SSI-SDK:: Error: params.verificationMethodId is required to verify credential");if(!e.issuerDid&&!e.issuerDidDocument)throw new Error("HID-SSI-SDK:: Error: params.issuerDid or params.issuerDidDocument is required to verify credential");let i;if(e.issuerDid){const{didDocument:t}=yield this.hsDid.resolve({did:e.issuerDid});i=t}else i=e.issuerDidDocument;const t=i,r=e.verificationMethodId,a=t.verificationMethod.find((e=>e.id==r)),o=yield w.BabyJubJubKeys2021.fromKeys({publicKeyMultibase:a.publicKeyMultibase,options:{id:a.id,controller:a.controller}}),s=new I.BabyJubJubSignature2021Suite({verificationMethod:r,key:o}),n=yield c.default.verify(e.credential,{purpose:new l.purposes.AssertionProofPurpose({controller:{"@context":["https://www.w3.org/ns/did/v1"],id:i.id,assertionMethod:i.assertionMethod}}),suite:s,documentLoader:C}),d=yield this.checkCredentialStatus({credentialId:e.credential.id});return n.statusResult=d,n}))}resolveCredentialStatus(e){return n(this,void 0,void 0,(function*(){if(!e||!e.credentialId)throw new Error("HID-SSI-SDK:: Error: params.credentialId is required to resolve credential status");let i={};if(!this.credStatusRPC)throw new Error("HID-SSI-SDK:: Error: HypersignVerifiableCred is not instantiated with Offlinesigner or not initialized");return i=yield this.credStatusRPC.resolveCredentialStatus(e.credentialId),Object.assign(Object.assign({},i.credentialStatusDocument),{proof:i.credentialStatusProof})}))}updateCredentialStatus(e){var i;return n(this,void 0,void 0,(function*(){if(!e.verificationMethodId)throw new Error("HID-SSI-SDK:: Error: params.verificationMethodId is required to update credential status");if(!e.credentialStatus)throw new Error("HID-SSI-SDK:: Error: params.credentialStatus is required to update credential status");if(!e.privateKeyMultibase)throw new Error("HID-SSI-SDK:: Error: params.privateKeyMultibase is required to update credential status");if(!e.issuerDid)throw new Error("HID-SSI-SDK:: Error: params.issuerDid is required to update credential status");if(!e.status)throw new Error("HID-SSI-SDK:: Error: params.status is required to update credential status");if(!this.credStatusRPC)throw new Error("HID-SSI-SDK:: Error: HypersignVerifiableCredential class is not instantiated with Offlinesigner or have not been initilized");const{didDocument:t}=yield this.hsDid.resolve({did:e.issuerDid});if(!t)throw new Error("Could not resolve issuerDid = "+e.issuerDid);const r=e.verificationMethodId,a=t.verificationMethod.find((e=>e.id==r)),o=yield this._toTitleCase(e.status);if(!Object.values(S.CredentialStatusEnums).includes(o))throw new Error("HID-SSI-SDK:: Error: params.status is invalid");const s=e.credentialStatus,n={"@context":[E.VC.CREDENTIAL_STATUS_CONTEXT,E.DID_BabyJubJubKey2021.DID_BABYJUBJUBKEY2021],id:s.id,remarks:null!==(i=e.statusReason)&&void 0!==i?i:S.VC.CRED_STATUS_REASON_TYPES[e.status],issuer:e.credentialStatus.issuer,issuanceDate:e.credentialStatus.issuanceDate,credentialMerkleRootHash:e.credentialStatus.credentialMerkleRootHash};o===S.VC.CRED_STATUS_TYPES.REVOKED?n.revoked=!0:o===S.VC.CRED_STATUS_TYPES.SUSPENDED&&(n.suspended=!0);const d=yield this._jsonLdSign({credentialStatus:n,privateKeyMultibase:e.privateKeyMultibase,verificationMethodId:e.verificationMethodId,publicKeyMultibase:a.publicKeyMultibase}),{didDocument:c}=yield this.hsDid.resolve({did:e.credentialStatus.issuer}),l=c.controller,h=e.verificationMethodId.split("#")[0];if(!l.includes(h))throw new Error("HID-SSI-SDK:: Error: params.verificationMethodId does not belong to issuerDid");const{didDocument:u}=yield this.hsDid.resolve({did:h});if(!u)throw new Error("HID-SSI-SDK:: Error: params.verificationMethodId does not belong to issuerDid");const m=yield this.credStatusRPC.updateCredentialStatus(n,d);if(!m||0!=m.code)throw new Error("HID-SSI-SDK:: Error while revoking the credential error = "+m.rawLog);return m}))}checkCredentialStatus(e){var i,t;return n(this,void 0,void 0,(function*(){if(!e||!e.credentialId)throw new Error("HID-SSI-SDK:: Error: params.credentialId is required to resolve credential status");const{credentialId:r}=e;let a={};if(!this.credStatusRPC)throw new Error("HID-SSI-SDK:: Error: HypersignVerifiableCred is not instantiated with Offlinesigner");if(a=yield this.credStatusRPC.resolveCredentialStatus(r),!a)throw new Error("HID-SSI-SDK:: Error: while checking credential status of credentialID "+r);const{remarks:o}=a.credentialStatusDocument;let s;return(null===(i=a.credentialStatusDocument)||void 0===i?void 0:i.revoked)||(null===(t=a.credentialStatusDocument)||void 0===t?void 0:t.suspended)||(s=S.VC.CRED_STATUS_TYPES.LIVE),s!=S.VC.CRED_STATUS_TYPES.LIVE?(console.log("WARN: Credential status is  not LIVE, currentStatus "+s),console.log("WARN: Status reason is "+o),{verified:!1}):{verified:!0}}))}registerCredentialStatus(e){return n(this,void 0,void 0,(function*(){const{credentialStatus:i,credentialStatusProof:t}=e;if(!i||!t)throw new Error("HID-SSI-SDK:: Error: credentialStatus and credentialStatusProof are required to register credential status");if(!this.credStatusRPC&&!this.credentialApiService)throw new Error("HID-SSI-SDK:: Error: HypersignVerifiableCredential class is not instantiated with Offlinesigner or have not been initilized with entityApiSecret");let r={};if(this.credStatusRPC){const e=yield this.credStatusRPC.registerCredentialStatus(i,t);if(!e||0!=e.code)throw new Error("HID-SSI-SDK:: Error while issuing the credential error = "+e.rawLog);r.transactionHash=e.transactionHash}else this.credentialApiService&&(r=yield this.credentialApiService.registerCredentialStatus({credentialStatus:i,credentialStatusProof:t,namespace:this.namespace}));return r}))}generateRegisterCredentialStatusTxnMessage(e,i){return n(this,void 0,void 0,(function*(){if(!e||!i)throw new Error("HID-SSI-SDK:: Error: credentialStatus and proof are required to register credential status");if(!this.credStatusRPC)throw new Error("HID-SSI-SDK:: Error: HypersignVerifiableCredential class is not instantiated with Offlinesigner or have not been initilized");return yield this.credStatusRPC.generateCredentialStatusTxnMessage(e,i)}))}registerCredentialStatusTxnBulk(e){return n(this,void 0,void 0,(function*(){if(!e||e.length<=0)throw new Error("HID-SSI-SDK:: Error: txnMessage is required to register credential status");if(!this.credStatusRPC)throw new Error("HID-SSI-SDK:: Error: HypersignVerifiableCredential class is not instantiated with Offlinesigner or have not been initilized");const i=yield this.credStatusRPC.registerCredentialStatusBulk(e);if(!i||0!=i.code)throw new Error("HID-SSI-SDK:: Error while issuing the credential error = "+i.rawLog);return i}))}generateSeletiveDisclosure(e){var i;return n(this,void 0,void 0,(function*(){if(!e.verifiableCredential)throw new Error("HID-SSI-SDK:: verifiableCredential is required");if(!e.frame)throw new Error("HID-SSI-SDK:: frame is required");if(!e.verificationMethodId)throw new Error("HID-SSI-SDK:: verificationMethodId is required");if(!e.issuerDid)throw new Error("HID-SSI-SDK:: issuerDid is required");e.frame["@context"]=e.verifiableCredential["@context"];const{didDocument:t}=yield this.hsDid.resolve({did:e.issuerDid}),r=null===(i=t.verificationMethod)||void 0===i?void 0:i.find((i=>i.id==e.verificationMethodId)),a=w.BabyJubJubKeys2021.fromKeys({publicKeyMultibase:null==r?void 0:r.publicKeyMultibase,options:{id:e.verificationMethodId,controller:e.issuerDid}});if(1==!(yield this.verify({credential:e.verifiableCredential,issuerDid:e.issuerDid,verificationMethodId:e.verificationMethodId})).verified)throw new Error("proofDocument cannot be verified");return yield(0,I.deriveProof)(e.verifiableCredential,e.frame,{suite:a,documentLoader:C})}))}}},22497:function(e,i,t){var r=this&&this.__createBinding||(Object.create?function(e,i,t,r){void 0===r&&(r=t);var a=Object.getOwnPropertyDescriptor(i,t);a&&!("get"in a?!i.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return i[t]}}),Object.defineProperty(e,r,a)}:function(e,i,t,r){void 0===r&&(r=t),e[r]=i[t]}),a=this&&this.__setModuleDefault||(Object.create?function(e,i){Object.defineProperty(e,"default",{enumerable:!0,value:i})}:function(e,i){e.default=i}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var i={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(i,e,t);return a(i,e),i},s=this&&this.__awaiter||function(e,i,t,r){return new(t||(t=Promise))((function(a,o){function s(e){try{d(r.next(e))}catch(e){o(e)}}function n(e){try{d(r.throw(e))}catch(e){o(e)}}function d(e){var i;e.done?a(e.value):(i=e.value,i instanceof t?i:new t((function(e){e(i)}))).then(s,n)}d((r=r.apply(e,i||[])).next())}))},n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(i,"__esModule",{value:!0}),i.CredentialRPC=void 0;const d=t(75259),c=o(t(13020)),l=n(t(83784)),h=t(63647),u=n(t(17571)),m=o(t(75259));i.CredentialRPC=class{constructor({offlineSigner:e,nodeRpcEndpoint:i,nodeRestEndpoint:t}){this.hidClient=e?new h.HIDClient(e,i,t):null,this.nodeRestEp=t,this.credentialRestEP=(h.HIDClient.hidNodeRestEndpoint?h.HIDClient.hidNodeRestEndpoint:t)+d.HYPERSIGN_NETWORK_CREDENTIALSTATUS_PATH}init(){return s(this,void 0,void 0,(function*(){if(!this.hidClient)throw new Error("HID-SSI-SDK:: Error: CredentialRPC class is not initialise with offlinesigner");yield this.hidClient.init()}))}registerCredentialStatus(e,i){return s(this,void 0,void 0,(function*(){if(!e)throw new Error("CredentialStatus must be passed as a param while registerting credential status");if(!i)throw new Error("Proof must be passed as a param while registering crdential status");if(!this.hidClient)throw new Error("HID-SSI-SDK:: Error: CredentialRPC class is not initialise with offlinesigner");const t={typeUrl:`${d.HID_COSMOS_MODULE}.${d.HIDRpcEnums.MsgRegisterCredentialStatus}`,value:c[d.HIDRpcEnums.MsgRegisterCredentialStatus].fromPartial({credentialStatusDocument:e,credentialStatusProof:i,txAuthor:h.HIDClient.getHidWalletAddress()})},r={amount:[{denom:"uhid",amount:yield u.default.fetchFee(m.GAS_FEE_METHODS.Register_Cred_Status,this.nodeRestEp)}],gas:"200000"},a=h.HIDClient.getHidClient(),o=yield a.signAndBroadcast(h.HIDClient.getHidWalletAddress(),[t],r);if(0!==o.code)throw new Error(`${o.rawLog}`);return o}))}generateCredentialStatusTxnMessage(e,i){return s(this,void 0,void 0,(function*(){if(!e)throw new Error("CredentialStatus must be passed as a param while registerting credential status");if(!i)throw new Error("Proof must be passed as a param while registering crdential status");return{typeUrl:`${d.HID_COSMOS_MODULE}.${d.HIDRpcEnums.MsgRegisterCredentialStatus}`,value:c[d.HIDRpcEnums.MsgRegisterCredentialStatus].fromPartial({credentialStatusDocument:e,credentialStatusProof:i,txAuthor:h.HIDClient.getHidWalletAddress()})}}))}registerCredentialStatusBulk(e){return s(this,void 0,void 0,(function*(){if(!this.hidClient)throw new Error("HID-SSI-SDK:: Error: CredentialRPC class is not initialise with offlinesigner");const i={amount:[{denom:"uhid",amount:(e.length*parseInt(yield u.default.fetchFee(m.GAS_FEE_METHODS.Register_Cred_Status,this.nodeRestEp))).toString()}],gas:"200000"},t=h.HIDClient.getHidClient(),r=yield t.signAndBroadcast(h.HIDClient.getHidWalletAddress(),e,i);if(0!==r.code)throw new Error(`${r.rawLog}`);return r}))}resolveCredentialStatus(e){return s(this,void 0,void 0,(function*(){e+=":";const i=`${this.credentialRestEP}/${e}`;let t;try{if(t=yield l.default.get(i),!t.data)throw new Error("Could not resolve credential status of credentialId "+e);const r=t.data.credentialStatus;if(!r||!r.credentialStatusDocument||!r.credentialStatusProof)throw new Error("No credential status found. Probably invalid credentialId");return r}catch(e){const i={claim:null,issuer:"",issuanceDate:"",expirationDate:"",credentialHash:"",proof:null};if(!i||!i.credentialStatusDocument||!i.credentialStatusProof)throw new Error("No credential status found. Probably invalid credentialId");return i}}))}updateCredentialStatus(e,i){return s(this,void 0,void 0,(function*(){if(!e)throw new Error("CredentialStatus must be passed as a param while registerting credential status");if(!i)throw new Error("Proof must be passed as a param while registering crdential status");if(!this.hidClient)throw new Error("HID-SSI-SDK:: Error: CredentialRPC class is not initialise with offlinesigner");const t={typeUrl:`${d.HID_COSMOS_MODULE}.${d.HIDRpcEnums.MsgUpdateCredentialStatus}`,value:c[d.HIDRpcEnums.MsgUpdateCredentialStatus].fromPartial({credentialStatusDocument:e,credentialStatusProof:i,txAuthor:h.HIDClient.getHidWalletAddress()})},r={amount:[{denom:"uhid",amount:yield u.default.fetchFee(m.GAS_FEE_METHODS.Update_Cred_Status,this.nodeRestEp)}],gas:"200000"},a=h.HIDClient.getHidClient(),o=yield a.signAndBroadcast(h.HIDClient.getHidWalletAddress(),[t],r);if(0!==o.code)throw new Error(`${o.rawLog}`);return o}))}}},94733:function(e,i,t){var r=t(5966).lW,a=this&&this.__createBinding||(Object.create?function(e,i,t,r){void 0===r&&(r=t);var a=Object.getOwnPropertyDescriptor(i,t);a&&!("get"in a?!i.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return i[t]}}),Object.defineProperty(e,r,a)}:function(e,i,t,r){void 0===r&&(r=t),e[r]=i[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,i){Object.defineProperty(e,"default",{enumerable:!0,value:i})}:function(e,i){e.default=i}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var i={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&a(i,e,t);return o(i,e),i},n=this&&this.__awaiter||function(e,i,t,r){return new(t||(t=Promise))((function(a,o){function s(e){try{d(r.next(e))}catch(e){o(e)}}function n(e){try{d(r.throw(e))}catch(e){o(e)}}function d(e){var i;e.done?a(e.value):(i=e.value,i instanceof t?i:new t((function(e){e(i)}))).then(s,n)}d((r=r.apply(e,i||[])).next())}))},d=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(i,"__esModule",{value:!0});const c=d(t(55397)),l=t(55397),h=d(t(17571)),u=d(t(38307)),m=d(t(26021)),p=s(t(47592)),f=t(25023),y=t(54807),g=d(t(55397)),{AssertionProofPurpose:S}=g.default.purposes,v=t(22497),D=t(75259),b=d(t(14132)),E=t(97654),w=t(55397),I=d(t(76706)),P=s(t(75259)),C=d(t(67051)),{Merklizer:A}=t(36117),M=(0,w.extendContextLoader)(b.default);i.default=class{constructor(e={}){this._checkIfAllRequiredPropsAreSent=(e,i)=>!i.some((i=>-1===e.indexOf(i))),this._getCredentialSubject=(e,i)=>{const t={},r=Object.keys(i);e.properties&&(e.propertiesParsed=JSON.parse(e.properties));const a=Object.keys(e.propertiesParsed);let o=[];if(e.additionalProperties)o=r;else{if(r.length>a.length||!this._checkIfAllRequiredPropsAreSent(a,r))throw new Error(`Only ${JSON.stringify(a)} attributes are possible. additionalProperties is false in the schema`);o=a}const s=Object.values(e.required);if(!this._checkIfAllRequiredPropsAreSent(r,s))throw new Error(`${JSON.stringify(s)} are required properties`);return o.forEach((e=>{t[e]=i[e]})),t};const{namespace:i,offlineSigner:t,nodeRpcEndpoint:r,nodeRestEndpoint:a,entityApiSecretKey:o}=e;this.namespace=i&&""!=i?i:"";const s={offlineSigner:t,nodeRpcEndpoint:r||"MAIN",nodeRestEndpoint:a||""};this.credStatusRPC=new v.CredentialRPC(s),this.hsDid=new m.default(s),this.hsSchema=new u.default(s),o&&""!=o?(this.credentialApiService=new I.default(o),this.credStatusRPC=null):this.credentialApiService=null,this["@context"]=[],this.id="",this.type=[],this.issuer="",this.issuanceDate="",this.expirationDate="",this.credentialSubject={},this.credentialSchema={id:"",type:D.VC.CREDENTAIL_SCHEMA_VALIDATOR_TYPE},this.credentialStatus={id:"",type:D.VC.CREDENTAIL_STATUS_TYPE},this.proof={},this.bjjVC=new C.default(e)}_jsonLdSign(e){return n(this,void 0,void 0,(function*(){const{credentialStatus:i,privateKeyMultibase:t,verificationMethodId:r}=e,a=yield f.Ed25519VerificationKey2020.from({id:r,privateKeyMultibase:t,publicKeyMultibase:e.publicKeyMultibase}),o=new y.Ed25519Signature2020({key:a});return(yield g.default.sign(i,{suite:o,purpose:new S,documentLoader:b.default})).proof}))}_dateNow(e){return e?new Date(e).toISOString().slice(0,-5)+"Z":new Date((new Date).getTime()-1e5).toISOString().slice(0,-5)+"Z"}_getId(){return n(this,void 0,void 0,(function*(){const e=yield h.default.getUUID();let i;return i=this.namespace&&""!=this.namespace?`${D.VC.SCHEME}:${D.VC.METHOD}:${this.namespace}:${e}`:`${D.VC.SCHEME}:${D.VC.METHOD}:${e}`,i}))}_toTitleCase(e){return n(this,void 0,void 0,(function*(){return e.charAt(0).toUpperCase()+e.slice(1).toLowerCase()}))}init(){return n(this,void 0,void 0,(function*(){if(!this.credStatusRPC&&!this.credentialApiService)throw new Error("HID-SSI-SDK:: Error: HypersignVerifiableCredential class is not instantiated with Offlinesigner or have not been initilized with entityApiSecretKey");this.credStatusRPC&&(yield this.credStatusRPC.init()),this.credentialApiService&&(yield this.credentialApiService.auth())}))}generate(e){return n(this,void 0,void 0,(function*(){let i={};if(e.subjectDid&&e.subjectDidDocSigned)throw new Error("HID-SSI-SDK:: Error: Both subjectDid and subjectDidDoc cannot be passed");if(!this.credStatusRPC)throw new Error("HID-SSI-SDK:: Error: HypersignVerifiableCredential class is not instantiated with Offlinesigner or have not been initilized");const t=e.issuerDid,r=e.subjectDid;let a;const{didDocument:o}=yield this.hsDid.resolve({did:t});if(e.subjectDid)a=yield this.hsDid.resolve({did:e.subjectDid});else{if(!e.subjectDidDocSigned)throw new Error("HID-SSI-SDK:: Error: Could not resolve the subjectDid or subjectDidDoc");a={},a.didDocument=e.subjectDidDocSigned}const{didDocument:s}=a;if(!o)throw new Error("HID-SSI-SDK:: Error: Could not fetch issuer did doc, issuer did = "+t);if(!s)throw new Error("HID-SSI-SDK:: Error: Could not fetch subject did doc, subject did = "+r);if(e&&e.schemaContext&&e.type)try{const i=Array();i.push(D.VC.CREDENTAIL_BASE_CONTEXT),e.schemaContext.forEach((e=>{i.push(e)}));const t=e.issuerDid,r=e.subjectDid,a=e.expirationDate,o=e.fields,n={};return n["@context"]=i,n.id=yield this._getId(),n.type=[],n.type.push("VerifiableCredential"),e.type.forEach((e=>{n.type.push(e)})),n.issuer=t,n.issuanceDate=this._dateNow(new Date((new Date).getTime()-1e5).toISOString()),n.expirationDate=this._dateNow(a),n.credentialSubject=o,n.credentialSubject.id=r&&null!=r?r:s.id,n.credentialStatus={id:this.credStatusRPC.credentialRestEP+"/"+n.id,type:this.credentialStatus.type},n}catch(e){throw new Error("HID-SSI-SDK:: Error: Could not create credential, error = "+e)}else if(!e.schemaId)throw new Error("HID-SSI-SDK:: Error: schemaId is required when schemaContext and type not passed");try{i=yield this.hsSchema.resolve({schemaId:e.schemaId})}catch(i){throw new Error("HID-SSI-SDK:: Error: Could not resolve the schema from schemaId = "+e.schemaId)}const n={};n["@context"]=[D.VC.CREDENTAIL_BASE_CONTEXT],n["@context"].push(D.VC.CONTEXT_HypersignCredentialStatus2023);const d=this.hsSchema.vcJsonSchema(i);n["@context"].push(d.$metadata.jsonLdContext),n.id=yield this._getId(),n.type=[],n.type.push("VerifiableCredential"),n.type.push(i.name),n.expirationDate=this._dateNow(e.expirationDate),n.issuanceDate=this._dateNow(),n.issuer=t,n.credentialSubject={};const c=new p.Validator(d,"2020-12",!0).validate({credentialSubject:Object.assign({},e.fields)});if(!c.valid)throw c.errors;return n.credentialSubject=e.fields,n.credentialSubject.id=r&&null!=r?r:s.id,n.credentialSchema={id:i.id,type:this.credentialSchema.type},n.credentialStatus={id:this.credStatusRPC.credentialRestEP+"/"+n.id,type:this.credentialStatus.type},n}))}issue(e){return n(this,void 0,void 0,(function*(){if(!e.verificationMethodId)throw new Error("HID-SSI-SDK:: Error: params.verificationMethodId is required to issue credential");if(!e.credential)throw new Error("HID-SSI-SDK:: Error: params.credential is required to issue credential");if(!e.privateKeyMultibase)throw new Error("HID-SSI-SDK:: Error: params.privateKeyMultibase is required to issue credential");if(!e.issuerDid)throw new Error("HID-SSI-SDK:: Error: params.issuerDid is required to issue credential");if(!this.credStatusRPC)throw new Error("HID-SSI-SDK:: Error: HypersignVerifiableCredential class is not instantiated with Offlinesigner or have not been initilized");null==e.registerCredential&&(e.registerCredential=!0);const{didDocument:i}=yield this.hsDid.resolve({did:e.issuerDid});if(null==i)throw new Error("HID-SSI-SDK:: Error: Could not resolve issuerDid = "+e.issuerDid);const t=e.verificationMethodId,a=i.verificationMethod.find((e=>e.id==t));if(!a)throw new Error("HID-SSI-SDK:: Error: Could not find verification method for id = "+e.verificationMethodId);const o=yield f.Ed25519VerificationKey2020.from(Object.assign({privateKeyMultibase:e.privateKeyMultibase},a)),s=new y.Ed25519Signature2020({verificationMethod:t,key:o}),n=yield A.merklizeJSONLD(JSON.stringify(e.credential),{documentLoader:M});let d=yield n.mt.root();d=r.from(d.bytes).toString("hex");const h={"@context":[P.VC.CREDENTIAL_STATUS_CONTEXT,P.DID_Ed25519VerificationKey2020.DID_Ed25519_CONTEXT_2020],id:e.credential.id,issuer:e.credential.issuer,issuanceDate:e.credential.issuanceDate,remarks:"Credential is active",credentialMerkleRootHash:d},u=yield this._jsonLdSign({credentialStatus:h,privateKeyMultibase:e.privateKeyMultibase,verificationMethodId:e.verificationMethodId,publicKeyMultibase:a.publicKeyMultibase}),{didDocument:m}=yield this.hsDid.resolve({did:e.credential.issuer});if(null==m)throw new Error("Could not resolve issuerDid = "+e.credential.issuer);if(!m.controller.includes(e.issuerDid))throw new Error(e.issuerDid+" is not a controller of "+e.credential.issuer);const p=yield c.default.sign(e.credential,{purpose:new l.purposes.AssertionProofPurpose({controller:{"@context":["https://www.w3.org/ns/did/v1"],id:m.id,assertionMethod:m.assertionMethod}}),suite:s,documentLoader:M});let g;if(e.registerCredential){if(g=yield this.credStatusRPC.registerCredentialStatus(h,u),!g||0!=g.code)throw new Error("HID-SSI-SDK:: Error while issuing the credential error = "+g.rawLog);return{signedCredential:p,credentialStatus:h,credentialStatusProof:u,credentialStatusRegistrationResult:g}}return{signedCredential:p,credentialStatus:h,credentialStatusProof:u}}))}verify(e){return n(this,void 0,void 0,(function*(){if(!e.credential)throw new Error("HID-SSI-SDK:: params.credential is required to verify credential");if(!e.credential.proof)throw new Error("HID-SSI-SDK:: params.credential.proof is required to verify credential");if(!e.verificationMethodId)throw new Error("HID-SSI-SDK:: Error: params.verificationMethodId is required to verify credential");if(!e.issuerDid)throw new Error("HID-SSI-SDK:: Error: params.issuerDid is required to verify credential");const{didDocument:i}=yield this.hsDid.resolve({did:e.issuerDid}),t=i,r=e.verificationMethodId,a=t.verificationMethod.find((e=>e.id==r)),o=(D.DID.CONTROLLER_CONTEXT,t.id,t.assertionMethod,yield f.Ed25519VerificationKey2020.from(Object.assign({privateKeyMultibase:""},a))),s=new y.Ed25519Signature2020({verificationMethod:r,key:o}),n=yield c.default.verify(e.credential,{purpose:new l.purposes.AssertionProofPurpose({controller:{"@context":["https://www.w3.org/ns/did/v1"],id:i.id,assertionMethod:i.assertionMethod}}),suite:s,documentLoader:M}),d=yield this.checkCredentialStatus({credentialId:e.credential.id});return n.statusResult=d,n}))}resolveCredentialStatus(e){return n(this,void 0,void 0,(function*(){if(!e||!e.credentialId)throw new Error("HID-SSI-SDK:: Error: params.credentialId is required to resolve credential status");let i={};if(!this.credStatusRPC)throw new Error("HID-SSI-SDK:: Error: HypersignVerifiableCred is not instantiated with Offlinesigner or not initialized");return i=yield this.credStatusRPC.resolveCredentialStatus(e.credentialId),Object.assign(Object.assign({},i.credentialStatusDocument),{proof:i.credentialStatusProof})}))}updateCredentialStatus(e){var i;return n(this,void 0,void 0,(function*(){if(!e.verificationMethodId)throw new Error("HID-SSI-SDK:: Error: params.verificationMethodId is required to update credential status");if(!e.credentialStatus)throw new Error("HID-SSI-SDK:: Error: params.credentialStatus is required to update credential status");if(!e.privateKeyMultibase)throw new Error("HID-SSI-SDK:: Error: params.privateKeyMultibase is required to update credential status");if(!e.issuerDid)throw new Error("HID-SSI-SDK:: Error: params.issuerDid is required to update credential status");if(!e.status)throw new Error("HID-SSI-SDK:: Error: params.status is required to update credential status");if(!this.credStatusRPC)throw new Error("HID-SSI-SDK:: Error: HypersignVerifiableCredential class is not instantiated with Offlinesigner or have not been initilized");const{didDocument:t}=yield this.hsDid.resolve({did:e.issuerDid});if(!t)throw new Error("Could not resolve issuerDid = "+e.issuerDid);const r=e.verificationMethodId,a=t.verificationMethod.find((e=>e.id==r)),o=yield f.Ed25519VerificationKey2020.from(Object.assign({privateKeyMultibase:e.privateKeyMultibase},a)),s=(new y.Ed25519Signature2020({verificationMethod:r,key:o}),yield this._toTitleCase(e.status));if(!Object.values(D.CredentialStatusEnums).includes(s))throw new Error("HID-SSI-SDK:: Error: params.status is invalid");const n=e.credentialStatus,d={"@context":[P.VC.CREDENTIAL_STATUS_CONTEXT,P.DID_Ed25519VerificationKey2020.DID_Ed25519_CONTEXT_2020],id:n.id,remarks:null!==(i=e.statusReason)&&void 0!==i?i:D.VC.CRED_STATUS_REASON_TYPES[e.status],issuer:e.credentialStatus.issuer,issuanceDate:e.credentialStatus.issuanceDate,credentialMerkleRootHash:e.credentialStatus.credentialMerkleRootHash};s===D.VC.CRED_STATUS_TYPES.REVOKED?d.revoked=!0:s===D.VC.CRED_STATUS_TYPES.SUSPENDED&&(d.suspended=!0);const c=yield this._jsonLdSign({credentialStatus:d,privateKeyMultibase:e.privateKeyMultibase,verificationMethodId:e.verificationMethodId,publicKeyMultibase:a.publicKeyMultibase}),{didDocument:l}=yield this.hsDid.resolve({did:e.credentialStatus.issuer}),h=l.controller,u=e.verificationMethodId.split("#")[0];if(!h.includes(u))throw new Error("HID-SSI-SDK:: Error: params.verificationMethodId does not belong to issuerDid");const{didDocument:m}=yield this.hsDid.resolve({did:u});if(!m)throw new Error("HID-SSI-SDK:: Error: params.verificationMethodId does not belong to issuerDid");const p=yield this.credStatusRPC.updateCredentialStatus(d,c);if(!p||0!=p.code)throw new Error("HID-SSI-SDK:: Error while revoking the credential error = "+p.rawLog);return p}))}checkCredentialStatus(e){var i,t;return n(this,void 0,void 0,(function*(){if(!e||!e.credentialId)throw new Error("HID-SSI-SDK:: Error: params.credentialId is required to resolve credential status");const{credentialId:r}=e;let a={};if(!this.credStatusRPC)throw new Error("HID-SSI-SDK:: Error: HypersignVerifiableCred is not instantiated with Offlinesigner");if(a=yield this.credStatusRPC.resolveCredentialStatus(r),!a)throw new Error("HID-SSI-SDK:: Error: while checking credential status of credentialID "+r);const{remarks:o}=a.credentialStatusDocument;let s;return(null===(i=a.credentialStatusDocument)||void 0===i?void 0:i.revoked)||(null===(t=a.credentialStatusDocument)||void 0===t?void 0:t.suspended)||(s=D.VC.CRED_STATUS_TYPES.LIVE),s!=D.VC.CRED_STATUS_TYPES.LIVE?(console.log("WARN: Credential status is  not LIVE, currentStatus "+s),console.log("WARN: Status reason is "+o),{verified:!1}):{verified:!0}}))}registerCredentialStatus(e){return n(this,void 0,void 0,(function*(){const{credentialStatus:i,credentialStatusProof:t}=e;if(!i||!t)throw new Error("HID-SSI-SDK:: Error: credentialStatus and credentialStatusProof are required to register credential status");if(!this.credStatusRPC&&!this.credentialApiService)throw new Error("HID-SSI-SDK:: Error: HypersignVerifiableCredential class is not instantiated with Offlinesigner or have not been initilized with entityApiSecret");let r={};if(this.credStatusRPC){const e=yield this.credStatusRPC.registerCredentialStatus(i,t);if(!e||0!=e.code)throw new Error("HID-SSI-SDK:: Error while issuing the credential error = "+e.rawLog);r.transactionHash=e.transactionHash}else this.credentialApiService&&(r=yield this.credentialApiService.registerCredentialStatus({credentialStatus:i,credentialStatusProof:t,namespace:this.namespace}));return r}))}generateRegisterCredentialStatusTxnMessage(e,i){return n(this,void 0,void 0,(function*(){if(!e||!i)throw new Error("HID-SSI-SDK:: Error: credentialStatus and proof are required to register credential status");if(!this.credStatusRPC)throw new Error("HID-SSI-SDK:: Error: HypersignVerifiableCredential class is not instantiated with Offlinesigner or have not been initilized");return yield this.credStatusRPC.generateCredentialStatusTxnMessage(e,i)}))}registerCredentialStatusTxnBulk(e){return n(this,void 0,void 0,(function*(){if(!e||e.length<=0)throw new Error("HID-SSI-SDK:: Error: txnMessage is required to register credential status");if(!this.credStatusRPC)throw new Error("HID-SSI-SDK:: Error: HypersignVerifiableCredential class is not instantiated with Offlinesigner or have not been initilized");const i=yield this.credStatusRPC.registerCredentialStatusBulk(e);if(!i||0!=i.code)throw new Error("HID-SSI-SDK:: Error while issuing the credential error = "+i.rawLog);return i}))}issueByClientSpec(e){return n(this,void 0,void 0,(function*(){if(!e.verificationMethodId)throw new Error("HID-SSI-SDK:: Error: params.verificationMethodId is required to issue credential");if(!e.issuerDid)throw new Error("HID-SSI-SDK:: Error: params.issuerDid is required to issue credential");if(!e.credential)throw new Error("HID-SSI-SDK:: Error: params.credential is required to issue credential");if(!this.credStatusRPC)throw new Error("HID-SSI-SDK:: Error: HypersignVerifiableCredential class is not instantiated with Offlinesigner or have not been initilized");if(!e.web3Obj&&!e.privateKey)throw new Error("HID-SSI-SDK:: Error: prams.web3Obj or prams.privateKey should be passed");null==e.type&&(e.type="Document"),null==e.registerCredential&&(e.registerCredential=!0);const{didDocument:i}=yield this.hsDid.resolve({did:e.issuerDid});if(null==i)throw new Error("HID-SSI-SDK:: Error: Could not resolve issuerDid = "+e.issuerDid);const t=e.verificationMethodId;if(!i.verificationMethod.find((e=>e.id==t)))throw new Error("HID-SSI-SDK:: Error: Could not find verification method for id = "+e.verificationMethodId);let r;e.privateKey?(r=new E.EthereumEip712Signature2021({}),yield r.fromPrivateKey(e.privateKey)):r=new E.EthereumEip712Signature2021({},e.web3Obj);const a=yield r.createProof({document:e.credential,purpose:new l.purposes.AssertionProofPurpose({controller:{"@context":["https://w3id.org/security/v2"],id:i.id,assertionMethod:[e.verificationMethodId]}}),verificationMethod:e.verificationMethodId,primaryType:e.type,date:(new Date).toISOString(),domain:e.domain?{name:e.domain}:void 0,documentLoader:M});e.credential.proof=a;const o=e.credential,{didDocument:s}=yield this.hsDid.resolve({did:e.credential.issuer});if(null==s)throw new Error("Could not resolve issuerDid = "+e.credential.issuer);if(!s.controller.includes(e.issuerDid))throw new Error(e.issuerDid+" is not a controller of "+e.credential.issuer);return e.registerCredential?new Error("HID-SSI-SDK:: Error: registerCredential is not implemented"):{signedCredential:o}}))}verifyByClientSpec(e){return n(this,void 0,void 0,(function*(){if(!e.credential)throw new Error("HID-SSI-SDK:: params.credential is required to verify credential");if(!e.credential.proof)throw new Error("HID-SSI-SDK:: params.credential.proof is required to verify credential");if(!e.verificationMethodId)throw new Error("HID-SSI-SDK:: Error: params.verificationMethodId is required to verify credential");if(!e.issuerDid)throw new Error("HID-SSI-SDK:: Error: params.issuerDid is required to verify credential");const{didDocument:i}=yield this.hsDid.resolve({did:e.issuerDid});if(null==i)throw new Error("HID-SSI-SDK:: Error: Could not resolve issuerDid = "+e.issuerDid);const t=new E.EthereumEip712Signature2021({}),{proof:r}=e.credential;return yield t.verifyProof({proof:r,document:e.credential,types:r.eip712.types,domain:r.eip712.domain,purpose:new l.purposes.AssertionProofPurpose({controller:{"@context":["https://w3id.org/security/v2"],id:i.id,assertionMethod:[e.verificationMethodId]}}),documentLoader:M})}))}}},49279:(e,i)=>{var t;Object.defineProperty(i,"__esModule",{value:!0}),i.IClientSpec=void 0,(t=i.IClientSpec||(i.IClientSpec={}))["eth-personalSign"]="eth-personalSign",t["cosmos-ADR036"]="cosmos-ADR036"},41027:function(e,i,t){var r=this&&this.__createBinding||(Object.create?function(e,i,t,r){void 0===r&&(r=t);var a=Object.getOwnPropertyDescriptor(i,t);a&&!("get"in a?!i.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return i[t]}}),Object.defineProperty(e,r,a)}:function(e,i,t,r){void 0===r&&(r=t),e[r]=i[t]}),a=this&&this.__setModuleDefault||(Object.create?function(e,i){Object.defineProperty(e,"default",{enumerable:!0,value:i})}:function(e,i){e.default=i}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var i={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(i,e,t);return a(i,e),i},s=this&&this.__awaiter||function(e,i,t,r){return new(t||(t=Promise))((function(a,o){function s(e){try{d(r.next(e))}catch(e){o(e)}}function n(e){try{d(r.throw(e))}catch(e){o(e)}}function d(e){var i;e.done?a(e.value):(i=e.value,i instanceof t?i:new t((function(e){e(i)}))).then(s,n)}d((r=r.apply(e,i||[])).next())}))},n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(i,"__esModule",{value:!0});const d=o(t(75259)),c=n(t(55397)),{AssertionProofPurpose:l}=c.default.purposes,h=t(92580),u=n(t(17571)),m=t(27943),p=t(34577),f=n(t(93572)),y=n(t(80903)),g=t(593),S=n(t(14132)),v=c.default.extendContextLoader(S.default);class D{constructor(e,i,t,r,a){let o;switch(r){case g.VerificationMethodTypes.Ed25519VerificationKey2020:{this["@context"]=[d["DID_"+r].DID_BASE_CONTEXT,d["DID_"+r].DID_BABYJUBJUBKEY2021],this.id=t,this.controller=[this.id],this.alsoKnownAs=[this.id],o={id:this.id+"#key-1",type:d["DID_"+r].VERIFICATION_METHOD_TYPE,controller:this.id,publicKeyMultibase:e};const i=o;this.verificationMethod=[i],this.authentication=[],this.assertionMethod=[],this.keyAgreement=[],this.capabilityInvocation=[],this.capabilityDelegation=[],null==a||a.forEach((e=>{const t=i.id;this[e]=[t]})),this.service=[];break}case g.VerificationMethodTypes.EcdsaSecp256k1RecoveryMethod2020:{this["@context"]=[d["DID_"+r].DID_BASE_CONTEXT,d["DID_"+r].SECP256K12020_RECOVERY_CONTEXT],this.id=t,this.controller=[this.id],this.alsoKnownAs=[this.id],o={id:this.id+"#key-1",type:d["DID_"+r].VERIFICATION_METHOD_TYPE,controller:this.id,blockchainAccountId:i};const e=o;this.verificationMethod=[e],this.authentication=[],this.assertionMethod=[],this.keyAgreement=[],this.capabilityInvocation=[],this.capabilityDelegation=[],null==a||a.forEach((i=>{const t=e.id;this[i]=[t]})),this.service=[];break}case g.VerificationMethodTypes.EcdsaSecp256k1VerificationKey2019:{this["@context"]=[d["DID_"+r].DID_BASE_CONTEXT,d["DID_"+r].SECP256K12020_VERIFICATION_CONTEXT],this.id=t,this.controller=[this.id],this.alsoKnownAs=[this.id],o={id:this.id+"#key-1",type:d["DID_"+r].VERIFICATION_METHOD_TYPE,controller:this.id,publicKeyMultibase:e,blockchainAccountId:i};const s=o;this.verificationMethod=[s],this.authentication=[],this.assertionMethod=[],this.keyAgreement=[],this.capabilityInvocation=[],this.capabilityDelegation=[],null==a||a.forEach((e=>{const i=s.id;this[e]=[i]})),this.service=[];break}case g.VerificationMethodTypes.BabyJubJubKey2021:{this["@context"]=[d["DID_"+r].DID_BASE_CONTEXT,d["DID_"+r].DID_BABYJUBJUBKEY2021],this.id=t,this.controller=[this.id],o={id:this.id+"#key-1",type:d["DID_"+r].VERIFICATION_METHOD_TYPE,controller:this.id,publicKeyMultibase:e};const i=o;this.verificationMethod=[i],this.authentication=[o.id],this.assertionMethod=[o.id],this.keyAgreement=[],this.capabilityInvocation=[],this.capabilityDelegation=[],null==a||a.forEach((e=>{const t=i.id;this[e]=[t]})),this.service=[];break}default:throw new Error("Invalid")}}}i.default=class{constructor(e={}){this._getId=e=>{if(e&&e.length<32)throw new Error("HID-SSI-SDK:: Error: methodSpecificId should be of minimum size 32");let i="";return i=this.namespace&&""!=this.namespace?`${d.DID.SCHEME}:${d.DID.METHOD}:${this.namespace}:${e}`:`${d.DID.SCHEME}:${d.DID.METHOD}:${e}`,i},this._isValidMultibaseBase58String=e=>/^z([1-9A-HJ-NP-Za-km-z]+)$/.test(e);const{offlineSigner:i,namespace:t,nodeRpcEndpoint:r,nodeRestEndpoint:a,entityApiSecretKey:o}=e,s={offlineSigner:i,nodeRpcEndpoint:r||"MAIN",nodeRestEndpoint:a||""};this.didrpc=new h.DIDRpc(s),o&&""!=o?(this.didAPIService=new y.default(o),this.didrpc=null):this.didAPIService=null,this.namespace=t||""}sign(e){throw new Error("Method not implemented.")}verify(e){throw new Error("Method not implemented.")}addVerificationMethod(e){throw new Error("Method not implemented.")}createByClientSpec(e){throw new Error("Method not implemented.")}registerByClientSpec(e){throw new Error("Method not implemented.")}updateByClientSpec(e){throw new Error("Method not implemented.")}deactivateByClientSpec(e){throw new Error("Method not implemented.")}signAndRegisterByClientSpec(e){throw new Error("Method not implemented.")}signByClientSpec(e){throw new Error("Method not implemented.")}_getDateTime(){return new Date((new Date).getTime()-1e5).toISOString().slice(0,-5)+"Z"}_jsonLdSign(e){var i;return s(this,void 0,void 0,(function*(){const{didDocument:t,privateKeyMultibase:r,verificationMethodId:a}=e,o=a+"assertionMethod",s=null===(i=t.assertionMethod)||void 0===i?void 0:i.find((e=>e.id===o)),n=null==s?void 0:s.publicKeyMultibase,d=m.BabyJubJubKeys2021.fromKeys({options:{id:o,controller:o},privateKeyMultibase:r,publicKeyMultibase:n}),h=new p.BabyJubJubSignature2021Suite({key:d});return(yield c.default.sign(t,{suite:h,purpose:new l,documentLoader:v})).proof}))}_filterVerificationRelationships(e){let i=[g.VerificationMethodRelationships.assertionMethod,g.VerificationMethodRelationships.authentication];if(e&&e.length>0){const t=new Set(i),r=new Set(e);i=Array.from(t).filter((e=>r.has(e)))}return i}_getBlockChainAccountID(e,i){try{const t=(new f.default).utils.hexToNumber(e);return d.CAIP_10_PREFIX.eip155+":"+t+":"+i}catch(e){throw new Error("HID-SSI-SDK:: Error: unsupported chain Id")}}init(){return s(this,void 0,void 0,(function*(){if(!this.didrpc&&!this.didAPIService)throw new Error("HID-SSI-SDK:: Error:  HypersignDID class is not instantiated with Offlinesigner or have not been initilized with entityApiSecretKey");this.didrpc&&(yield this.didrpc.init()),this.didAPIService&&(yield this.didAPIService.auth())}))}generateKeys(e){return s(this,void 0,void 0,(function*(){let i;return i=e&&e.mnemonic&&e.controller?yield m.BabyJubJubKeys2021.from(e.mnemonic,{id:e.controller}):e&&e.controller?yield m.BabyJubJubKeys2021.generate({id:e.controller}):e&&e.mnemonic?yield m.BabyJubJubKeys2021.from(e.mnemonic):yield m.BabyJubJubKeys2021.generate(),Object.assign({},i)}))}generate(e){return s(this,void 0,void 0,(function*(){let i=[];if(e.verificationRelationships&&e.verificationRelationships.length>0){if(e.verificationRelationships.includes(g.VerificationMethodRelationships.keyAgreement))throw new Error("HID-SSI-SDK:: Error: keyAgreement is not allowed in verificationRelationships");i=this._filterVerificationRelationships(e.verificationRelationships)}else i=this._filterVerificationRelationships([]);if(!e.publicKeyMultibase)throw new Error("HID-SSI-SDK:: Error: params.publicKeyMultibase is required to generate new did didoc");const t=e.publicKeyMultibase,r=t;let a;a=e.methodSpecificId?this._getId(e.methodSpecificId):this._getId(r);const o=new D(t,"",a,g.VerificationMethodTypes.BabyJubJubKey2021,i);return u.default.jsonToLdConvertor(Object.assign({},o))}))}prepareDidDocument(e){const i={};return Object.assign(i,e),e.assertionMethod&&e.assertionMethod.map((t=>{var r;null===(r=e.verificationMethod)||void 0===r||r.find((e=>{e.id===t&&(i.assertionMethod=[{id:e.id+"assertionMethod",type:e.type,publicKeyMultibase:e.publicKeyMultibase}])}))})),e.authentication&&e.authentication.map((t=>{var r;null===(r=e.verificationMethod)||void 0===r||r.find((e=>{e.id===t&&(i.authentication=[{id:e.id+"authentication",type:e.type,publicKeyMultibase:e.publicKeyMultibase}])}))})),i.capabilityDelegation=[],i.capabilityInvocation=[],i.keyAgreement=[],delete i.verificationMethod,i}register(e){return s(this,void 0,void 0,(function*(){const i={};if(!e.didDocument||0===Object.keys(e.didDocument).length)throw new Error("HID-SSI-SDK:: Error: params.didDocString is required to register a did");if(!this.didrpc&&!this.didAPIService)throw new Error('HID-SSI-SDK:: Error: HypersignDID class is not instantiated with "Offlinesigner" or have not been initilized with "EntityAPISecreKey"');let{didDocument:t}=e;const r=t,a=[];if(e.signData){if(e.signData.length<1)throw new Error("HID-SSI-SDK:: Error: params.signInfos must be a non empty array");for(const i in e.signData){if(!e.signData[i].verificationMethodId)throw new Error(`HID-SSI-SDK:: Error: params.signData[${i}].verificationMethodId is required to register a did`);if(!e.signData[i].privateKeyMultibase)throw new Error(`HID-SSI-SDK:: Error: params.signData[${i}].privateKeyMultibase is required to register a did`);if(!e.signData[i].type)throw new Error(`HID-SSI-SDK:: Error: params.signData[${i}].type is required to register a did`);const{type:r,privateKeyMultibase:o,verificationMethodId:s}=e.signData[i];let n;if(r!==g.VerificationMethodTypes.X25519KeyAgreementKey2020&&r!==g.VerificationMethodTypes.X25519KeyAgreementKeyEIP5630){let e;if(!t["@context"])throw new Error("HID-SSI-SDK:: Error: didDocument is not in Ld-json format");{t=u.default.removeEmptyString(t);const i=yield this._jsonLdSign({didDocument:t,privateKeyMultibase:o,verificationMethodId:s});e=i.proofValue,n=i.created}a.push({type:d.DID_BabyJubJubKey2021.SIGNATURE_TYPE,created:null!=n?n:this._getDateTime(),verificationMethod:s,proofPurpose:g.VerificationMethodRelationships.assertionMethod,proofValue:e}),delete t.proof}}}else{if(!e.privateKeyMultibase)throw new Error("HID-SSI-SDK:: Error: params.privateKeyMultibase is required to register a did");if(!e.verificationMethodId)throw new Error("HID-SSI-SDK:: Error: params.verificationMethodId is required to register a did");const{privateKeyMultibase:i,verificationMethodId:r}=e;let o,s;if(!t["@context"])throw new Error("HID-SSI-SDK:: Error: didDocument is not in Ld-json format");{t=u.default.removeEmptyString(t);const e=this.prepareDidDocument(t),a=yield this._jsonLdSign({didDocument:e,privateKeyMultibase:i,verificationMethodId:r});o=a.proofValue,s=a.created}a.push({type:d.DID_BabyJubJubKey2021.SIGNATURE_TYPE,created:null!=s?s:this._getDateTime(),verificationMethod:r,proofPurpose:g.VerificationMethodRelationships.assertionMethod,proofValue:o})}if(this.didrpc){const t=yield this.didrpc.registerDID(r,a);if(0!==t.code)throw new Error(t.rawLog);i.didDocument=e.didDocument,i.transactionHash=t.transactionHash}else if(this.didAPIService){const e=a,r=yield this.didAPIService.registerDid({didDocument:t,signInfos:e});i.didDocument=t,i.transactionHash=r.transactionHash}return i}))}createSignInfos(e){return s(this,void 0,void 0,(function*(){if(!e.didDocument||0===Object.keys(e.didDocument).length)throw new Error("HID-SSI-SDK:: Error: params.didDocument is required to create signature of a did");if(!e.privateKeyMultibase)throw new Error("HID-SSI-SDK:: Error: params.privateKeyMultibase is required to create signature of a did");if(!e.verificationMethodId)throw new Error("HID-SSI-SDK:: Error: params.verificationMethodId is required to create signature of a did");let{didDocument:i}=e;const t=[],{privateKeyMultibase:r,verificationMethodId:a}=e;let o,s;if(!i["@context"])throw new Error("HID-SSI-SDK:: Error: didDocument is not in Ld-json format");{i=u.default.removeEmptyString(i);const e=yield this._jsonLdSign({didDocument:i,privateKeyMultibase:r,verificationMethodId:a});o=e.proofValue,s=e.created}return t.push({signature:o,verification_method_id:a,created:s,clientSpec:void 0}),t}))}resolve(e){return s(this,void 0,void 0,(function*(){let i={};if(!e.did)throw new Error("HID-SSI-SDK:: Error: params.did is required to resolve a did");return this.didrpc?i=yield this.didrpc.resolveDID(e.did):this.didAPIService&&(i=yield this.didAPIService.resolveDid({did:e.did})),{didDocument:u.default.jsonToLdConvertor(i.didDocument),didDocumentMetadata:i.didDocumentMetadata}}))}update(e){var i;return s(this,void 0,void 0,(function*(){const t={};if(!e.didDocument)throw new Error("HID-SSI-SDK:: Error: params.didDocument is required to update a did");if(!e.privateKeyMultibase)throw new Error("HID-SSI-SDK:: Error: params.privateKeyMultibase is required to update a did");if(!e.verificationMethodId)throw new Error("HID-SSI-SDK:: Error: params.verificationMethodId is required to update a did");if(!e.versionId)throw new Error("HID-SSI-SDK:: Error: params.versionId is required to update a did");if(!this.didrpc&&!this.didAPIService)throw new Error('HID-SSI-SDK:: Error: HypersignDID class is not instantiated with "Offlinesigner" or have not been initilized with "EntityAPISecreKey"');const{didDocument:r,privateKeyMultibase:a,verificationMethodId:o,versionId:s}=e,n=this.prepareDidDocument(r),c=yield this._jsonLdSign({didDocument:n,privateKeyMultibase:a,verificationMethodId:o}),l=[{type:d.DID_BabyJubJubKey2021.SIGNATURE_TYPE,created:null!==(i=c.created)&&void 0!==i?i:this._getDateTime(),verificationMethod:o,proofPurpose:g.VerificationMethodRelationships.assertionMethod,proofValue:c.proofValue}];if(this.didrpc){const e=yield this.didrpc.updateDID(r,l,s);t.transactionHash=e.transactionHash}else if(this.didAPIService){const e=l,i=yield this.didAPIService.updateDid({didDocument:r,signInfos:e,deactivate:!1});t.transactionHash=i.transactionHash}return t}))}deactivate(e){var i;return s(this,void 0,void 0,(function*(){const t={};if(!e.didDocument)throw new Error("HID-SSI-SDK:: Error: params.didDocument is required to deactivate a did");if(!e.privateKeyMultibase)throw new Error("HID-SSI-SDK:: Error: params.privateKeyMultibase is required to deactivate a did");if(!e.verificationMethodId)throw new Error("HID-SSI-SDK:: Error: params.verificationMethodId is required to deactivate a did");if(!e.versionId)throw new Error("HID-SSI-SDK:: Error: params.versionId is required to deactivate a did");if(!this.didrpc&&!this.didAPIService)throw new Error('HID-SSI-SDK:: Error: HypersignDID class is not instantiated with "Offlinesigner" or have not been initilized with "EntityAPISecreKey"');const{didDocument:r,privateKeyMultibase:a,verificationMethodId:o,versionId:s}=e,n=this.prepareDidDocument(r),c=yield this._jsonLdSign({didDocument:n,privateKeyMultibase:a,verificationMethodId:o}),l=[{type:d.DID_BabyJubJubKey2021.SIGNATURE_TYPE,created:null!==(i=c.created)&&void 0!==i?i:this._getDateTime(),verificationMethod:o,proofPurpose:g.VerificationMethodRelationships.assertionMethod,proofValue:c.proofValue}];if(this.didrpc){const e=yield this.didrpc.deactivateDID(r.id,l,s);t.transactionHash=e.transactionHash}else if(this.didAPIService){const e=l,i=yield this.didAPIService.updateDid({didDocument:r,signInfos:e,deactivate:!0});t.transactionHash=i.transactionHash}return t}))}}},26021:function(e,i,t){var r=t(5966).lW,a=this&&this.__createBinding||(Object.create?function(e,i,t,r){void 0===r&&(r=t);var a=Object.getOwnPropertyDescriptor(i,t);a&&!("get"in a?!i.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return i[t]}}),Object.defineProperty(e,r,a)}:function(e,i,t,r){void 0===r&&(r=t),e[r]=i[t]}),o=this&&this.__setModuleDefault||(Object.create?function(e,i){Object.defineProperty(e,"default",{enumerable:!0,value:i})}:function(e,i){e.default=i}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var i={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&a(i,e,t);return o(i,e),i},n=this&&this.__awaiter||function(e,i,t,r){return new(t||(t=Promise))((function(a,o){function s(e){try{d(r.next(e))}catch(e){o(e)}}function n(e){try{d(r.throw(e))}catch(e){o(e)}}function d(e){var i;e.done?a(e.value):(i=e.value,i instanceof t?i:new t((function(e){e(i)}))).then(s,n)}d((r=r.apply(e,i||[])).next())}))},d=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(i,"__esModule",{value:!0});const c=s(t(75259)),l=d(t(55397)),{AuthenticationProofPurpose:h,AssertionProofPurpose:u}=l.default.purposes,m=t(92580),p=d(t(17571)),f=t(25023),y=t(54807),g=d(t(93572)),S=d(t(80903)),v=d(t(33091)),D=d(t(67886)),b=t(49279),E=t(593),w=d(t(14132)),I=t(81907),P=d(t(41027)),C=l.default.extendContextLoader(w.default);class A{constructor(e,i,t,r,a){let o;switch(r){case E.VerificationMethodTypes.Ed25519VerificationKey2020:{this["@context"]=[c["DID_"+r].DID_BASE_CONTEXT,c.VC.CREDENTIAIL_SECURITY_SUITE],this.id=t,this.controller=[this.id],this.alsoKnownAs=[this.id],o={id:this.id+"#key-1",type:c["DID_"+r].VERIFICATION_METHOD_TYPE,controller:this.id,publicKeyMultibase:e};const i=o;this.verificationMethod=[i],this.authentication=[],this.assertionMethod=[],this.keyAgreement=[],this.capabilityInvocation=[],this.capabilityDelegation=[],null==a||a.forEach((e=>{const t=i.id;this[e]=[t]})),this.service=[];break}case E.VerificationMethodTypes.EcdsaSecp256k1RecoveryMethod2020:{this["@context"]=[c["DID_"+r].DID_BASE_CONTEXT,c["DID_"+r].SECP256K12020_RECOVERY_CONTEXT],this.id=t,this.controller=[this.id],this.alsoKnownAs=[this.id],o={id:this.id+"#key-1",type:c["DID_"+r].VERIFICATION_METHOD_TYPE,controller:this.id,blockchainAccountId:i};const e=o;this.verificationMethod=[e],this.authentication=[],this.assertionMethod=[],this.keyAgreement=[],this.capabilityInvocation=[],this.capabilityDelegation=[],null==a||a.forEach((i=>{const t=e.id;this[i]=[t]})),this.service=[];break}case E.VerificationMethodTypes.EcdsaSecp256k1VerificationKey2019:{this["@context"]=[c["DID_"+r].DID_BASE_CONTEXT,c["DID_"+r].SECP256K12020_VERIFICATION_CONTEXT],this.id=t,this.controller=[this.id],this.alsoKnownAs=[this.id],o={id:this.id+"#key-1",type:c["DID_"+r].VERIFICATION_METHOD_TYPE,controller:this.id,publicKeyMultibase:e,blockchainAccountId:i};const s=o;this.verificationMethod=[s],this.authentication=[],this.assertionMethod=[],this.keyAgreement=[],this.capabilityInvocation=[],this.capabilityDelegation=[],null==a||a.forEach((e=>{const i=s.id;this[e]=[i]})),this.service=[];break}default:throw new Error("Invalid")}}}i.default=class{constructor(e={}){this._getId=e=>{if(e&&e.length<32)throw new Error("HID-SSI-SDK:: Error: methodSpecificId should be of minimum size 32");let i="";return i=this.namespace&&""!=this.namespace?`${c.DID.SCHEME}:${c.DID.METHOD}:${this.namespace}:${e}`:`${c.DID.SCHEME}:${c.DID.METHOD}:${e}`,i},this._isValidMultibaseBase58String=e=>/^z([1-9A-HJ-NP-Za-km-z]+)$/.test(e);const{offlineSigner:i,namespace:t,nodeRpcEndpoint:r,nodeRestEndpoint:a,entityApiSecretKey:o}=e,s={offlineSigner:i,nodeRpcEndpoint:r||"MAIN",nodeRestEndpoint:a||""};this.didrpc=new m.DIDRpc(s),o&&""!=o?(this.didAPIService=new S.default(o),this.didrpc=null):this.didAPIService=null,this.namespace=t||"",this.bjjDID=new P.default(e)}_getDateTime(){return new Date((new Date).getTime()-1e5).toISOString().slice(0,-5)+"Z"}_jsonLdSign(e){var i;return n(this,void 0,void 0,(function*(){const{didDocument:t,privateKeyMultibase:r,verificationMethodId:a}=e,o=a,s=null===(i=t.verificationMethod)||void 0===i?void 0:i.find((e=>e.id===o)),n=null==s?void 0:s.publicKeyMultibase,d=yield f.Ed25519VerificationKey2020.from({id:o,privateKeyMultibase:r,publicKeyMultibase:n}),c=new y.Ed25519Signature2020({key:d});return(yield l.default.sign(t,{suite:c,purpose:new u,documentLoader:C})).proof}))}_jsonLdNormalize(e){return n(this,void 0,void 0,(function*(){const i=e.doc;return yield v.default.normalize(i,{format:"application/n-quads",algorithm:"URDNA2015"})}))}_concat(e,i){const t=new Uint8Array(e.length+i.length);return t.set(e,0),t.set(i,e.length),t}_filterVerificationRelationships(e){let i=[E.VerificationMethodRelationships.assertionMethod,E.VerificationMethodRelationships.authentication,E.VerificationMethodRelationships.capabilityDelegation,E.VerificationMethodRelationships.capabilityInvocation];if(e&&e.length>0){const t=new Set(i),r=new Set(e);i=Array.from(t).filter((e=>r.has(e)))}return i}_getBlockChainAccountID(e,i){try{const t=(new g.default).utils.hexToNumber(e);return c.CAIP_10_PREFIX.eip155+":"+t+":"+i}catch(e){throw new Error("HID-SSI-SDK:: Error: unsupported chain Id")}}init(){return n(this,void 0,void 0,(function*(){if(!this.didrpc&&!this.didAPIService)throw new Error("HID-SSI-SDK:: Error:  HypersignDID class is not instantiated with Offlinesigner or have not been initilized with entityApiSecretKey");this.didrpc&&(yield this.didrpc.init()),this.didAPIService&&(yield this.didAPIService.auth())}))}generateKeys(e){return n(this,void 0,void 0,(function*(){let i;if(e&&e.seed&&e.controller){const t=e.seed instanceof Uint8Array?e.seed:new Uint8Array(r.from(e.seed));i=yield f.Ed25519VerificationKey2020.generate({seed:t,id:e.controller})}else if(e&&e.controller)i=yield f.Ed25519VerificationKey2020.generate({id:e.controller});else if(e&&e.seed){const t=e.seed instanceof Uint8Array?e.seed:new Uint8Array(r.from(e.seed));i=yield f.Ed25519VerificationKey2020.generate({seed:t})}else i=yield f.Ed25519VerificationKey2020.generate();const t=yield i.export({publicKey:!0,privateKey:!0});return Object.assign({},t)}))}generate(e){return n(this,void 0,void 0,(function*(){let i=[];if(e.verificationRelationships&&e.verificationRelationships.length>0){if(e.verificationRelationships.includes(E.VerificationMethodRelationships.keyAgreement))throw new Error("HID-SSI-SDK:: Error: keyAgreement is not allowed in verificationRelationships");i=this._filterVerificationRelationships(e.verificationRelationships)}else i=this._filterVerificationRelationships([]);if(!e.publicKeyMultibase)throw new Error("HID-SSI-SDK:: Error: params.publicKeyMultibase is required to generate new did didoc");const t=e.publicKeyMultibase,r=t;let a;a=e.methodSpecificId?this._getId(e.methodSpecificId):this._getId(r);const o=new A(t,"",a,E.VerificationMethodTypes.Ed25519VerificationKey2020,i);return p.default.jsonToLdConvertor(Object.assign({},o))}))}register(e){return n(this,void 0,void 0,(function*(){const i={};if(!e.didDocument||0===Object.keys(e.didDocument).length)throw new Error("HID-SSI-SDK:: Error: params.didDocString is required to register a did");if(!this.didrpc&&!this.didAPIService)throw new Error('HID-SSI-SDK:: Error: HypersignDID class is not instantiated with "Offlinesigner" or have not been initilized with "EntityAPISecreKey"');let{didDocument:t}=e;const r=t,a=[];if(e.signData){if(e.signData.length<1)throw new Error("HID-SSI-SDK:: Error: params.signInfos must be a non empty array");for(const i in e.signData){if(!e.signData[i].verificationMethodId)throw new Error(`HID-SSI-SDK:: Error: params.signData[${i}].verificationMethodId is required to register a did`);if(!e.signData[i].privateKeyMultibase)throw new Error(`HID-SSI-SDK:: Error: params.signData[${i}].privateKeyMultibase is required to register a did`);if(!e.signData[i].type)throw new Error(`HID-SSI-SDK:: Error: params.signData[${i}].type is required to register a did`);const{type:r,privateKeyMultibase:o,verificationMethodId:s}=e.signData[i];let n;if(r!==E.VerificationMethodTypes.X25519KeyAgreementKey2020&&r!==E.VerificationMethodTypes.X25519KeyAgreementKeyEIP5630){let e;if(!t["@context"])throw new Error("HID-SSI-SDK:: Error: didDocument is not in Ld-json format");{t=p.default.removeEmptyString(t);const i=yield this._jsonLdSign({didDocument:t,privateKeyMultibase:o,verificationMethodId:s});e=i.proofValue,n=i.created}a.push({type:c.DID_Ed25519VerificationKey2020.SIGNATURE_TYPE,created:null!=n?n:this._getDateTime(),verificationMethod:s,proofPurpose:E.VerificationMethodRelationships.assertionMethod,proofValue:e}),delete t.proof}}}else{if(!e.privateKeyMultibase)throw new Error("HID-SSI-SDK:: Error: params.privateKeyMultibase is required to register a did");if(!e.verificationMethodId)throw new Error("HID-SSI-SDK:: Error: params.verificationMethodId is required to register a did");const{privateKeyMultibase:i,verificationMethodId:r}=e;let o,s;if(!t["@context"])throw new Error("HID-SSI-SDK:: Error: didDocument is not in Ld-json format");{t=p.default.removeEmptyString(t);const e=yield this._jsonLdSign({didDocument:t,privateKeyMultibase:i,verificationMethodId:r});o=e.proofValue,s=e.created}a.push({type:c.DID_Ed25519VerificationKey2020.SIGNATURE_TYPE,created:null!=s?s:this._getDateTime(),verificationMethod:r,proofPurpose:E.VerificationMethodRelationships.assertionMethod,proofValue:o})}if(this.didrpc){const t=yield this.didrpc.registerDID(r,a);i.didDocument=e.didDocument,i.transactionHash=t.transactionHash}else if(this.didAPIService){const e=a,r=yield this.didAPIService.registerDid({didDocument:t,signInfos:e});i.didDocument=t,i.transactionHash=r.transactionHash}return i}))}createSignInfos(e){return n(this,void 0,void 0,(function*(){if(!e.didDocument||0===Object.keys(e.didDocument).length)throw new Error("HID-SSI-SDK:: Error: params.didDocument is required to create signature of a did");if(!e.privateKeyMultibase)throw new Error("HID-SSI-SDK:: Error: params.privateKeyMultibase is required to create signature of a did");if(!e.verificationMethodId)throw new Error("HID-SSI-SDK:: Error: params.verificationMethodId is required to create signature of a did");let{didDocument:i}=e;const t=[],{privateKeyMultibase:r,verificationMethodId:a}=e;let o,s;if(!i["@context"])throw new Error("HID-SSI-SDK:: Error: didDocument is not in Ld-json format");{i=p.default.removeEmptyString(i);const e=yield this._jsonLdSign({didDocument:i,privateKeyMultibase:r,verificationMethodId:a});o=e.proofValue,s=e.created}return t.push({signature:o,verification_method_id:a,created:s,clientSpec:void 0}),t}))}resolve(e){return n(this,void 0,void 0,(function*(){let i={};if(!e.did)throw new Error("HID-SSI-SDK:: Error: params.did is required to resolve a did");return this.didrpc?i=yield this.didrpc.resolveDID(e.did):this.didAPIService&&(i=yield this.didAPIService.resolveDid({did:e.did})),{didDocument:p.default.jsonToLdConvertor(i.didDocument),didDocumentMetadata:i.didDocumentMetadata}}))}update(e){var i;return n(this,void 0,void 0,(function*(){const t={};if(!e.didDocument)throw new Error("HID-SSI-SDK:: Error: params.didDocument is required to update a did");if(!e.privateKeyMultibase)throw new Error("HID-SSI-SDK:: Error: params.privateKeyMultibase is required to update a did");if(!e.verificationMethodId)throw new Error("HID-SSI-SDK:: Error: params.verificationMethodId is required to update a did");if(!e.versionId)throw new Error("HID-SSI-SDK:: Error: params.versionId is required to update a did");if(!this.didrpc&&!this.didAPIService)throw new Error('HID-SSI-SDK:: Error: HypersignDID class is not instantiated with "Offlinesigner" or have not been initilized with "EntityAPISecreKey"');const{didDocument:r,privateKeyMultibase:a,verificationMethodId:o,versionId:s}=e,n=yield this._jsonLdSign({didDocument:r,privateKeyMultibase:a,verificationMethodId:o}),d=[{type:c.DID_Ed25519VerificationKey2020.SIGNATURE_TYPE,created:null!==(i=n.created)&&void 0!==i?i:this._getDateTime(),verificationMethod:o,proofPurpose:E.VerificationMethodRelationships.assertionMethod,proofValue:n.proofValue}];if(this.didrpc){const e=yield this.didrpc.updateDID(r,d,s);t.transactionHash=e.transactionHash}else if(this.didAPIService){const e=d,i=yield this.didAPIService.updateDid({didDocument:r,signInfos:e,deactivate:!1});t.transactionHash=i.transactionHash}return t}))}deactivate(e){var i;return n(this,void 0,void 0,(function*(){const t={};if(!e.didDocument)throw new Error("HID-SSI-SDK:: Error: params.didDocument is required to deactivate a did");if(!e.privateKeyMultibase)throw new Error("HID-SSI-SDK:: Error: params.privateKeyMultibase is required to deactivate a did");if(!e.verificationMethodId)throw new Error("HID-SSI-SDK:: Error: params.verificationMethodId is required to deactivate a did");if(!e.versionId)throw new Error("HID-SSI-SDK:: Error: params.versionId is required to deactivate a did");if(!this.didrpc&&!this.didAPIService)throw new Error('HID-SSI-SDK:: Error: HypersignDID class is not instantiated with "Offlinesigner" or have not been initilized with "EntityAPISecreKey"');const{didDocument:r,privateKeyMultibase:a,verificationMethodId:o,versionId:s}=e,n=yield this._jsonLdSign({didDocument:r,privateKeyMultibase:a,verificationMethodId:o}),d=[{type:c.DID_Ed25519VerificationKey2020.SIGNATURE_TYPE,created:null!==(i=n.created)&&void 0!==i?i:this._getDateTime(),verificationMethod:o,proofPurpose:E.VerificationMethodRelationships.assertionMethod,proofValue:n.proofValue}];if(this.didrpc){const e=yield this.didrpc.deactivateDID(r.id,d,s);t.transactionHash=e.transactionHash}else if(this.didAPIService){const e=d,i=yield this.didAPIService.updateDid({didDocument:r,signInfos:e,deactivate:!0});t.transactionHash=i.transactionHash}return t}))}sign(e){return n(this,void 0,void 0,(function*(){const{privateKeyMultibase:i,challenge:t,domain:r,did:a,didDocument:o,verificationMethodId:s}=e;let n;if(!i)throw new Error("HID-SSI-SDK:: Error: params.privateKey is required to sign a did");if(!t)throw new Error("HID-SSI-SDK:: Error: params.challenge is required to sign a did");if(!r)throw new Error("HID-SSI-SDK:: Error: params.domain is required to sign a did");try{if(a&&this.didrpc)n=yield this.didrpc.resolveDID(a);else{if(!o)throw new Error("HID-SSI-SDK:: Error: params.did or params.didDocument is required to sign a did");n={},n.didDocument=o}}catch(e){throw new Error(`HID-SSI-SDK:: Error: could not resolve did ${a}`)}const d=s,u=n.didDocument.verificationMethod.find((e=>e.id===d));if(!u)throw new Error("HID-SSI-SDK:: Error: Incorrect verification method id");const m=u.publicKeyMultibase,p=yield f.Ed25519VerificationKey2020.from({id:d,privateKeyMultibase:i,publicKeyMultibase:m}),g=new y.Ed25519Signature2020({verificationMethod:d,key:p}),S=n.didDocument;return yield l.default.sign(S,{suite:g,purpose:new h({challenge:t,domain:r}),documentLoader:C,compactProof:c.compactProof})}))}verify(e){var i;return n(this,void 0,void 0,(function*(){const{didDocument:t,verificationMethodId:r,challenge:a,domain:o}=e;if(!t)throw new Error("HID-SSI-SDK:: Error: params.didDocument is required to verify a did");if(!t.proof)throw new Error("HID-SSI-SDK:: Error: params.didDocument.proof is not present in the signed did document");if(!r)throw new Error("HID-SSI-SDK:: Error: params.verificationMethodId is required to verify a did");if(!a)throw new Error("HID-SSI-SDK:: Error: params.challenge is required to verify a did");const s=t,n=r,d=null===(i=s.verificationMethod)||void 0===i?void 0:i.find((e=>e.id===n));if(!d)throw new Error("HID-SSI-SDK:: Error: could not find verification method for verificationMethodId: "+r+" in did document");const u=d.publicKeyMultibase,m=yield f.Ed25519VerificationKey2020.from({id:n,publicKeyMultibase:u}),p=new y.Ed25519Signature2020({key:m});p.date=new Date((new Date).getTime()-1e5).toISOString();const g={"@context":c.DID.CONTROLLER_CONTEXT,id:n,authentication:s.authentication},S=new h({controller:g,challenge:a,domain:o});return yield l.default.verify(s,{suite:p,purpose:S,documentLoader:C,compactProof:c.compactProof})}))}createByClientSpec(e){return n(this,void 0,void 0,(function*(){if("undefined"===this.window&&console.log("HID-SSI-SDK:: Warning:  Running in non browser mode"),!e.methodSpecificId)throw new Error("HID-SSI-SDK:: Error: params.methodSpecificId is required to create didoc");if(!e.chainId)throw new Error("HID-SSI-SDK:: Error: params.chainId is required to create didoc");if(!e.address)throw new Error("HID-SSI-SDK:: Error: params.address is required to create didoc");if(!e.clientSpec)throw new Error("HID-SSI-SDK:: Error:  params.clientSpec is required to create didoc");if(!(e.clientSpec in b.IClientSpec))throw new Error("HID-SSI-SDK:: Error:  params.clientSpec is invalid");let i,t=[];if(e.verificationRelationships&&e.verificationRelationships.length>0){if(e.verificationRelationships.includes(E.VerificationMethodRelationships.keyAgreement))throw new Error("HID-SSI-SDK:: Error: keyAgreement is not allowed in verificationRelationships");t=this._filterVerificationRelationships(e.verificationRelationships)}else t=this._filterVerificationRelationships([]);switch(e.clientSpec){case b.IClientSpec["eth-personalSign"]:{const r=this._getBlockChainAccountID(e.chainId,e.address),a=this._getId(e.methodSpecificId),o=new A("",r,a,E.VerificationMethodTypes.EcdsaSecp256k1RecoveryMethod2020,t);i=Object.assign({},o),delete i.service;break}case b.IClientSpec["cosmos-ADR036"]:{if(!e.publicKey)throw new Error("HID-SSI-SDK:: Error: params.publicKey is required to create didoc for "+E.VerificationMethodTypes.EcdsaSecp256k1VerificationKey2019);if(!this._isValidMultibaseBase58String(e.publicKey))throw new Error("HID-SSI-SDK:: Error: params.publicKey mustbe multibase encoded base58 string for "+E.VerificationMethodTypes.EcdsaSecp256k1VerificationKey2019);const r=e.publicKey,a=this._getId(e.methodSpecificId),o="cosmos:"+e.chainId+":"+e.address,s=new A(r,o,a,E.VerificationMethodTypes.EcdsaSecp256k1VerificationKey2019,t);i=Object.assign({},s);break}default:throw new Error("HID-SSI-SDK:: Error: params.clientSpec is invalid use object.generate() method")}return i}))}registerByClientSpec(e){return n(this,void 0,void 0,(function*(){const i={};if(!e.didDocument||0===Object.keys(e.didDocument).length)throw new Error("HID-SSI-SDK:: Error: params.didDocString is required to register a did");if(!this.didrpc&&!this.didAPIService)throw new Error('HID-SSI-SDK:: Error: HypersignDID class is not instantiated with "Offlinesigner" or have not been initilized with "EntityAPISecreKey"');if(!e.signInfos)throw new Error("HID-SSI-SDK:: Error: params.signInfos is required to register a did");if(e.signInfos.length<1)throw new Error("HID-SSI-SDK:: Error: params.signInfos must be a non empty array");if(!e.signInfos)throw new Error("HID-SSI-SDK:: Error: params.signInfos is required to register a did");if(e.signInfos.length<1)throw new Error("HID-SSI-SDK:: Error: params.signInfos must be a non empty array");for(const i in e.signInfos){if(!e.signInfos[i].verification_method_id)throw new Error(`HID-SSI-SDK:: Error: params.signInfos[${i}].verification_method_id is required to register a did`);const t=e.signInfos[i].clientSpec;if(t&&t.type&&!(t.type in b.IClientSpec))throw new Error("HID-SSI-SDK:: Error: params.signInfos[0].clientSpec is invalid");if(!e.signInfos[i].signature)throw new Error(`HID-SSI-SDK:: Error: params.signInfos[${i}].signature is required to register a did`)}const t=e.didDocument,{signInfos:r}=e;if(this.didrpc){const e=[];r.forEach((i=>{var t,r;let a,o;if((null===(t=i.clientSpec)||void 0===t?void 0:t.type)===b.IClientSpec["eth-personalSign"])a=c.DID_EcdsaSecp256k1RecoveryMethod2020.SIGNATURE_TYPE,o=I.ClientSpecType.CLIENT_SPEC_TYPE_ETH_PERSONAL_SIGN;else{if((null===(r=i.clientSpec)||void 0===r?void 0:r.type)!==b.IClientSpec["cosmos-ADR036"])throw new Error("Invalid clientSpec type");a=c.DID_EcdsaSecp256k1VerificationKey2019.SIGNATURE_TYPE,o=I.ClientSpecType.CLIENT_SPEC_TYPE_COSMOS_ADR036}const s={type:a,created:i.created,verificationMethod:i.verification_method_id,proofPurpose:E.VerificationMethodRelationships.assertionMethod,proofValue:i.signature,clientSpecType:o};e.push(s)}));const a=yield this.didrpc.registerDID(t,e);i.didDocument=t,i.transactionHash=a.transactionHash}else if(this.didAPIService){const e=r,a=yield this.didAPIService.registerDid({didDocument:t,signInfos:e});i.didDocument=t,i.transactionHash=a.transactionHash}return i}))}updateByClientSpec(e){return n(this,void 0,void 0,(function*(){const i={};if(!this.didrpc&&!this.didAPIService)throw new Error('HID-SSI-SDK:: Error: HypersignDID class is not instantiated with "Offlinesigner" or have not been initilized with "EntityAPISecreKey"');if(!e.didDocument)throw new Error("HID-SSI-SDK:: Error: params.didDocument is required to update a did");if(!e.signInfos)throw new Error("HID-SSI-SDK:: Error: params.signInfos is required to register a did");if(e.signInfos.length<1)throw new Error("HID-SSI-SDK:: Error: params.signInfos must be a non empty array");for(const i in e.signInfos){if(!e.signInfos[i].verification_method_id)throw new Error(`HID-SSI-SDK:: Error: params.signInfos[${i}].verification_method_id is required to register a did`);const t=e.signInfos[i].clientSpec;if(t&&t.type&&!(t.type in b.IClientSpec))throw new Error("HID-SSI-SDK:: Error: params.signInfos[0].clientSpec is invalid");if(!e.signInfos[i].signature)throw new Error(`HID-SSI-SDK:: Error: params.signInfos[${i}].signature is required to register a did`)}if(!e.versionId)throw new Error("HID-SSI-SDK:: Error: params.versionId is required to update a did");const{didDocument:t,signInfos:r,versionId:a}=e;if(this.didrpc){const e=[];r.forEach((i=>{var t,r;let a,o;if((null===(t=i.clientSpec)||void 0===t?void 0:t.type)===b.IClientSpec["eth-personalSign"])a=c.DID_EcdsaSecp256k1RecoveryMethod2020.SIGNATURE_TYPE,o=I.ClientSpecType.CLIENT_SPEC_TYPE_ETH_PERSONAL_SIGN;else{if((null===(r=i.clientSpec)||void 0===r?void 0:r.type)!==b.IClientSpec["cosmos-ADR036"])throw new Error("Invalid clientSpec type");a=c.DID_EcdsaSecp256k1VerificationKey2019.SIGNATURE_TYPE,o=I.ClientSpecType.CLIENT_SPEC_TYPE_COSMOS_ADR036}const s={type:a,created:i.created,verificationMethod:i.verification_method_id,proofPurpose:E.VerificationMethodRelationships.assertionMethod,proofValue:i.signature,clientSpecType:o};e.push(s)}));const o=yield this.didrpc.updateDID(t,e,a);i.transactionHash=o.transactionHash}else if(this.didAPIService){const e=r,a=yield this.didAPIService.updateDid({didDocument:t,signInfos:e,deactivate:!1});i.transactionHash=a.transactionHash}return i}))}deactivateByClientSpec(e){return n(this,void 0,void 0,(function*(){const i={};if(!this.didrpc&&!this.didAPIService)throw new Error('HID-SSI-SDK:: Error: HypersignDID class is not instantiated with "Offlinesigner" or have not been initilized with "EntityAPISecreKey"');if(!e.didDocument)throw new Error("HID-SSI-SDK:: Error: params.didDocument is required to deactivate a did");if(!e.signInfos)throw new Error("HID-SSI-SDK:: Error: params.signInfos is required to deactivate a did");if(e.signInfos.length<1)throw new Error("HID-SSI-SDK:: Error: params.signInfos must be a non empty array");for(const i in e.signInfos){if(!e.signInfos[i].verification_method_id)throw new Error(`HID-SSI-SDK:: Error: params.signInfos[${i}].verification_method_id is required to deactivate a did`);const t=e.signInfos[i].clientSpec;if(t&&t.type&&!(t.type in b.IClientSpec))throw new Error("HID-SSI-SDK:: Error: params.signInfos[0].clientSpec is invalid");if(!e.signInfos[i].signature)throw new Error(`HID-SSI-SDK:: Error: params.signInfos[${i}].signature is required to deactivate a did`)}if(!e.versionId)throw new Error("HID-SSI-SDK:: Error: params.versionId is required to deactivate a did");const{didDocument:t,signInfos:r,versionId:a}=e,o=t;if(this.didrpc){const e=[];r.forEach((i=>{var t,r;let a,o;if((null===(t=i.clientSpec)||void 0===t?void 0:t.type)===b.IClientSpec["eth-personalSign"])a=c.DID_EcdsaSecp256k1RecoveryMethod2020.SIGNATURE_TYPE,o=I.ClientSpecType.CLIENT_SPEC_TYPE_ETH_PERSONAL_SIGN;else{if((null===(r=i.clientSpec)||void 0===r?void 0:r.type)!==b.IClientSpec["cosmos-ADR036"])throw new Error("Invalid clientSpec type");a=c.DID_EcdsaSecp256k1VerificationKey2019.SIGNATURE_TYPE,o=I.ClientSpecType.CLIENT_SPEC_TYPE_COSMOS_ADR036}const s={type:a,created:i.created,verificationMethod:i.verification_method_id,proofPurpose:E.VerificationMethodRelationships.assertionMethod,proofValue:i.signature,clientSpecType:o};e.push(s)}));const t=yield this.didrpc.deactivateDID(o.id,e,a);i.transactionHash=t.transactionHash}else if(this.didAPIService){const e=r,a=yield this.didAPIService.updateDid({didDocument:t,signInfos:e,deactivate:!0});i.transactionHash=a.transactionHash}return i}))}signAndRegisterByClientSpec(e){return n(this,void 0,void 0,(function*(){if(!e.didDocument||0===Object.keys(e.didDocument).length)throw new Error("HID-SSI-SDK:: Error: params.didDocString is required to register a did");if(!e.clientSpec)throw new Error("HID-SSI-SDK:: Error:  params.clientSpec is required to sign");if(!(e.clientSpec in b.IClientSpec))throw new Error("HID-SSI-SDK:: Error: invalid clientSpec");if(!this.didrpc)throw new Error("HID-SSI-SDK:: Error:  HypersignDID class is not instantiated with Offlinesigner or have not been initilized");if(!e.verificationMethodId)throw new Error("HID-SSI-SDK:: Error: params.verificationMethodId is required to register a did");if(!e.web3)throw new Error("HID-SSI-SDK:: Error: params.web should be passed");if(!e.address)throw new Error("HID-SSI-SDK:: Error: params.address is required to sign a did");const i=yield this.signByClientSpec({didDocument:e.didDocument,clientSpec:e.clientSpec,address:e.address,web3:e.web3,chainId:e.chainId,verificationMethodId:e.verificationMethodId}),t=[{signature:i.proof.proofValue,verification_method_id:e.verificationMethodId,created:i.proof.created,clientSpec:{type:e.clientSpec===b.IClientSpec["cosmos-ADR036"]?b.IClientSpec["cosmos-ADR036"]:b.IClientSpec["eth-personalSign"]}}];return yield this.registerByClientSpec({didDocument:e.didDocument,signInfos:t})}))}signByClientSpec(e){var i;return n(this,void 0,void 0,(function*(){if("undefined"===this.window)throw new Error("HID-SSI-SDK:: Error:  Running in non browser mode");if(!e.didDocument)throw Error("HID-SSI-SDK:: Error: params.didDocument is required to sign");if(e.didDocument.proof)throw new Error("HID-SSI-SDK:: Error: params.didDocument should not contain proof in it");if(!e.address)throw new Error("HID-SSI-SDK:: Error: params.address is required to sign a did");if(!e.clientSpec)throw new Error("HID-SSI-SDK:: Error:  params.clientSpec is required to sign");if(!(e.clientSpec in b.IClientSpec))throw new Error("HID-SSI-SDK:: Error:  params.clientSpec is invalid");if(!e.web3)throw new Error("HID-SSI-SDK:: Error: params.web3 is required to sign");if(!e.verificationMethodId)throw new Error("HID-SSI-SDK:: Error: params.verificationMethodId is required to sign");const t=null===(i=e.didDocument.verificationMethod)||void 0===i?void 0:i.find((i=>i.id==e.verificationMethodId));if(!t||null==t)throw new Error("HID-SSI_SDK:: Error: invalid verificationMethodId");const a=p.default.removeEmptyString(e.didDocument);switch(e.clientSpec){case b.IClientSpec["eth-personalSign"]:{const i=yield this._jsonLdNormalize({doc:a}),t=new Uint8Array(r.from(D.default.createHash("sha256").update(i).digest("hex"),"hex")),o={"@context":a["@context"],type:E.ProofTypes.EcdsaSecp256k1RecoverySignature2020,created:this._getDateTime(),verificationMethod:e.verificationMethodId,proofPurpose:E.VerificationMethodRelationships.assertionMethod},s=yield this._jsonLdNormalize({doc:o});delete o["@context"];const n=new Uint8Array(r.from(D.default.createHash("sha256").update(s).digest("hex"),"hex")),d=yield this._concat(n,t),c={didId:a.id,didDocDigest:r.from(d).toString("hex")},l=yield e.web3.eth.personal.sign(JSON.stringify(c,((e,i)=>{if(!(""===i||Array.isArray(i)&&0===i.length))return i})),e.address);return o.proofValue=l,o.clientSpecType=I.ClientSpecType.CLIENT_SPEC_TYPE_ETH_PERSONAL_SIGN,a.proof=o,a}case b.IClientSpec["cosmos-ADR036"]:{if(!e.chainId)throw new Error("HID-SSI-SDK:: Error:  params.chainId is required to sign for clientSpec "+b.IClientSpec["cosmos-ADR036"]+" and keyType "+E.VerificationMethodTypes.EcdsaSecp256k1VerificationKey2019);const i=yield this._jsonLdNormalize({doc:a}),t=new Uint8Array(r.from(D.default.createHash("sha256").update(i).digest("hex"),"hex")),o={"@context":a["@context"],type:E.ProofTypes.EcdsaSecp256k1Signature2019,created:this._getDateTime(),verificationMethod:e.verificationMethodId,proofPurpose:E.VerificationMethodRelationships.assertionMethod},s=yield this._jsonLdNormalize({doc:o});delete o["@context"];const n=new Uint8Array(r.from(D.default.createHash("sha256").update(s).digest("hex"),"hex")),d=yield this._concat(n,t),c=yield e.web3.requestMethod("signArbitrary",[e.chainId,e.address,d]);return o.proofValue=c.signature,o.clientSpecType=I.ClientSpecType.CLIENT_SPEC_TYPE_COSMOS_ADR036,a.proof=o,a}default:throw Error("HID-SSI-SDK:: Error: Invalid clientSpec")}}))}addVerificationMethod(e){var i,t,r;return n(this,void 0,void 0,(function*(){let a;if(!(e.did||e.didDocument&&0!==Object.keys(e.didDocument).length))throw new Error("HID-SSI_SDK:: Error: params.did or params.didDocument is required to addVerificationMethod");if(!e.type)throw new Error("HID-SSI-SDK:: Error: params.type is required to addVerificationMethod");const{type:o}=e;if(!(o in E.VerificationMethodTypes))throw new Error("HID-SSI-SDK:: Error: params.type is invalid");try{if(e.did){if(!this.didrpc)throw new Error("HID-SSI-SDK:: Error: HID-SSI-SDK:: Error: HypersignDID class is not instantiated with Offlinesigner or have not been initilized");if(a=yield this.didrpc.resolveDID(e.did),!a.didDocument&&!e.didDocument)throw new Error("HID-SSI_SDK:: Error: can not able to resolve did please send didDocument")}else{if(!e.didDocument)throw new Error("HID-SSI-SDK:: Error: params.did or params.didDocument is required to addVerificationMethod");a={},a.didDocument=e.didDocument}}catch(i){throw new Error(`HID-SSI-SDK:: Error: could not resolve did ${e.did}`)}if(o===E.VerificationMethodTypes.EcdsaSecp256k1RecoveryMethod2020&&(!e.blockchainAccountId||""===e.blockchainAccountId.trim()))throw new Error(`HID-SSI-SDK:: Error: params.blockchainAccountId is required for keyType ${e.type}`);if(o===E.VerificationMethodTypes.EcdsaSecp256k1RecoveryMethod2020&&(!e.id||""===e.id.trim()))throw new Error(`HID-SSI-SDK:: Error: params.id is required for keyType ${e.type}`);if(!(o!==E.VerificationMethodTypes.EcdsaSecp256k1VerificationKey2019||e.blockchainAccountId&&""!==e.blockchainAccountId.trim()&&e.publicKeyMultibase&&""!==e.publicKeyMultibase.trim()))throw new Error(`HID-SSI-SDK:: Error: params.blockchainAccountId and params.publicKeyMultibase is required for keyType ${e.type}`);if((o===E.VerificationMethodTypes.Ed25519VerificationKey2020||o===E.VerificationMethodTypes.X25519KeyAgreementKey2020||o===E.VerificationMethodTypes.X25519KeyAgreementKeyEIP5630)&&!e.publicKeyMultibase)throw new Error("HID-SSI-SDK:: Error: params.publicKeyMultibase is required to addVerificationMethod");const s={},{didDocument:n}=a;if(e.id&&n.verificationMethod.some((i=>i.id===e.id)))throw new Error(`HID-SSI-SDK:: Error: verificationMethod ${e.id} already exists`);const d=n.verificationMethod.length;if(s.id=null!==(i=null==e?void 0:e.id)&&void 0!==i?i:`${n.id}#key-${d+1}`,s.type=o,s.controller=n.id,o!==E.VerificationMethodTypes.EcdsaSecp256k1RecoveryMethod2020&&(s.publicKeyMultibase=null!==(t=null==e?void 0:e.publicKeyMultibase)&&void 0!==t?t:""),o!==E.VerificationMethodTypes.Ed25519VerificationKey2020&&(s.blockchainAccountId=null!==(r=null==e?void 0:e.blockchainAccountId)&&void 0!==r?r:""),n.verificationMethod.push(s),s.type===E.VerificationMethodTypes.X25519KeyAgreementKey2020||s.type===E.VerificationMethodTypes.X25519KeyAgreementKeyEIP5630?n.keyAgreement.push(s.id):(n.authentication.push(s.id),n.assertionMethod.push(s.id),n.capabilityDelegation.push(s.id),n.capabilityInvocation.push(s.id)),s.type===E.VerificationMethodTypes.X25519KeyAgreementKey2020){const e=c["DID_"+E.VerificationMethodTypes.Ed25519VerificationKey2020].DID_KEYAGREEMENT_CONTEXT;n["@context"].includes(e)||n["@context"].push(e)}if(s.type===E.VerificationMethodTypes.X25519KeyAgreementKeyEIP5630){const e=c["DID_"+E.VerificationMethodTypes.EcdsaSecp256k1RecoveryMethod2020].DID_KEYAGREEMENT_CONTEXT;n["@context"].includes(e)||n["@context"].push(e)}return n}))}}},92580:function(e,i,t){var r=this&&this.__createBinding||(Object.create?function(e,i,t,r){void 0===r&&(r=t);var a=Object.getOwnPropertyDescriptor(i,t);a&&!("get"in a?!i.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return i[t]}}),Object.defineProperty(e,r,a)}:function(e,i,t,r){void 0===r&&(r=t),e[r]=i[t]}),a=this&&this.__setModuleDefault||(Object.create?function(e,i){Object.defineProperty(e,"default",{enumerable:!0,value:i})}:function(e,i){e.default=i}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var i={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(i,e,t);return a(i,e),i},s=this&&this.__awaiter||function(e,i,t,r){return new(t||(t=Promise))((function(a,o){function s(e){try{d(r.next(e))}catch(e){o(e)}}function n(e){try{d(r.throw(e))}catch(e){o(e)}}function d(e){var i;e.done?a(e.value):(i=e.value,i instanceof t?i:new t((function(e){e(i)}))).then(s,n)}d((r=r.apply(e,i||[])).next())}))},n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(i,"__esModule",{value:!0}),i.DIDRpc=void 0;const d=t(75259),c=o(t(13020)),l=n(t(83784)),h=t(63647),u=n(t(17571)),m=o(t(75259));i.DIDRpc=class{constructor({offlineSigner:e,nodeRpcEndpoint:i,nodeRestEndpoint:t}){this.hidClient=e?new h.HIDClient(e,i,t):null,this.nodeRestEp=t,this.didRestEp=(h.HIDClient.hidNodeRestEndpoint?h.HIDClient.hidNodeRestEndpoint:t)+d.HYPERSIGN_NETWORK_DID_PATH}getSigningStargateClient(){const e=h.HIDClient.getHidClient();if(!e)throw new Error("HID-SSI-SDK:: Error: DIDRpc class is not initialise with offlinesigner");return e}init(){return s(this,void 0,void 0,(function*(){if(!this.hidClient)throw new Error("HID-SSI-SDK:: Error: DIDRpc class is not initialise with offlinesigner");yield this.hidClient.init()}))}registerDID(e,i){return s(this,void 0,void 0,(function*(){if(!this.hidClient)throw new Error("HID-SSI-SDK:: Error: DIDRpc class is not initialise with offlinesigner");delete e.proof;const t={typeUrl:`${d.HID_COSMOS_MODULE}.${d.HIDRpcEnums.MsgRegisterDID}`,value:c[d.HIDRpcEnums.MsgRegisterDID].fromPartial({didDocument:e,didDocumentProofs:i,txAuthor:h.HIDClient.getHidWalletAddress()})},r={amount:[{denom:"uhid",amount:yield u.default.fetchFee(m.GAS_FEE_METHODS.Register_Did,this.nodeRestEp)}],gas:"200000"},a=h.HIDClient.getHidClient(),o=yield a.signAndBroadcast(h.HIDClient.getHidWalletAddress(),[t],r);if(0!==o.code)throw new Error(`${o.rawLog}`);return o}))}updateDID(e,i,t){return s(this,void 0,void 0,(function*(){if(delete e.proof,!this.hidClient)throw new Error("HID-SSI-SDK:: Error: DIDRpc class is not initialise with offlinesigner");const r={typeUrl:`${d.HID_COSMOS_MODULE}.${d.HIDRpcEnums.MsgUpdateDID}`,value:c[d.HIDRpcEnums.MsgUpdateDID].fromPartial({didDocument:e,didDocumentProofs:i,txAuthor:h.HIDClient.getHidWalletAddress(),versionId:t})},a={amount:[{denom:"uhid",amount:yield u.default.fetchFee(m.GAS_FEE_METHODS.Update_Did,this.nodeRestEp)}],gas:"200000"},o=this.getSigningStargateClient(),s=yield o.signAndBroadcast(h.HIDClient.getHidWalletAddress(),[r],a);if(0!==s.code)throw new Error(`${s.rawLog}`);return s}))}deactivateDID(e,i,t){return s(this,void 0,void 0,(function*(){if(!this.hidClient)throw new Error("HID-SSI-SDK:: Error: DIDRpc class is not initialise with offlinesigner");const r={typeUrl:`${d.HID_COSMOS_MODULE}.${d.HIDRpcEnums.MsgDeactivateDID}`,value:c[d.HIDRpcEnums.MsgDeactivateDID].fromPartial({didDocumentId:e,didDocumentProofs:i,txAuthor:h.HIDClient.getHidWalletAddress(),versionId:t})},a={amount:[{denom:"uhid",amount:yield u.default.fetchFee(m.GAS_FEE_METHODS.Deactivate_Did,this.nodeRestEp)}],gas:"200000"},o=h.HIDClient.getHidClient(),s=yield o.signAndBroadcast(h.HIDClient.getHidWalletAddress(),[r],a);if(0!==s.code)throw new Error(`${s.rawLog}`);return s}))}resolveDID(e){return s(this,void 0,void 0,(function*(){const i=`${this.didRestEp}/${e}`;let t;try{return t=yield l.default.get(i),t.data}catch(e){return{didDocument:null,didDocumentMetadata:null}}}))}}},63647:function(e,i,t){var r=this&&this.__awaiter||function(e,i,t,r){return new(t||(t=Promise))((function(a,o){function s(e){try{d(r.next(e))}catch(e){o(e)}}function n(e){try{d(r.throw(e))}catch(e){o(e)}}function d(e){var i;e.done?a(e.value):(i=e.value,i instanceof t?i:new t((function(e){e(i)}))).then(s,n)}d((r=r.apply(e,i||[])).next())}))},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(i,"__esModule",{value:!0}),i.HIDClient=void 0;const o=t(75792),s=t(73416),n=t(27910),d=t(75259),c=a(t(17571)),{HYPERSIGN_TESTNET_RPC:l,HYPERSIGN_TESTNET_REST:h,HYPERSIGN_MAINNET_RPC:u,HYPERSIGN_MAINNET_REST:m,HIDRpcEnums:p}=t(75259);class f{constructor(e,i,t){if(this.signer=e,this.registry=new n.HIDRpcFactory,!i)throw new Error("HID-SSI-SDK:: Error: HID Node enpoint must be passed. Possible values:  'TEST' | 'MAIN' | <custom node url>");if("TEST"===i)f.hidNodeEndpoint=c.default.checkUrl(l),f.hidNodeRestEndpoint=c.default.checkUrl(h);else if("MAIN"===i)f.hidNodeEndpoint=c.default.checkUrl(u),f.hidNodeRestEndpoint=c.default.checkUrl(m);else{if(f.hidNodeEndpoint=c.default.checkUrl(i),!t)throw new Error("HID-SSI-SDK:: Error: HID node REST endpoint can not be empty for custom network");f.hidNodeRestEndpoint=c.default.checkUrl(t)}}init(){return r(this,void 0,void 0,(function*(){Object.keys(p).forEach((e=>{this.registry.registerRpc(p[e])}));const e=new o.GasPrice(s.Decimal.fromUserInput(d.GAS_PRICE,d.HID_DECIMAL),d.HID_DNOMINATION);f.hidNodeClient=yield o.SigningStargateClient.connectWithSigner(f.hidNodeEndpoint,this.signer,{gasPrice:e,registry:this.registry.hidRPCRegistery});const i=yield this.signer.getAccounts();f.hidWalletAddress=i[0].address}))}static getHidClient(){return f.hidNodeClient}static getHidWalletAddress(){return f.hidWalletAddress}}i.HIDClient=f},72820:function(e,i,t){var r=this&&this.__awaiter||function(e,i,t,r){return new(t||(t=Promise))((function(a,o){function s(e){try{d(r.next(e))}catch(e){o(e)}}function n(e){try{d(r.throw(e))}catch(e){o(e)}}function d(e){var i;e.done?a(e.value):(i=e.value,i instanceof t?i:new t((function(e){e(i)}))).then(s,n)}d((r=r.apply(e,i||[])).next())}))},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(i,"__esModule",{value:!0}),i.Schema=i.Did=i.IClientSpec=i.IKeyType=i.IVerificationRelationships=i.HypersignVerifiablePresentation=i.HypersignVerifiableCredential=i.HypersignSchema=i.HypersignDID=i.HypersignSSISdk=void 0;const o=a(t(26021));i.HypersignDID=o.default;const s=a(t(41027)),n=a(t(94733));i.HypersignVerifiableCredential=n.default;const d=a(t(74155));i.HypersignVerifiablePresentation=d.default;const c=a(t(38307));i.HypersignSchema=c.default;const l=t(49279);Object.defineProperty(i,"IClientSpec",{enumerable:!0,get:function(){return l.IClientSpec}});const h=t(593);Object.defineProperty(i,"IKeyType",{enumerable:!0,get:function(){return h.VerificationMethodTypes}});const u=t(593);Object.defineProperty(i,"IVerificationRelationships",{enumerable:!0,get:function(){return u.VerificationMethodRelationships}});const m=t(89786);Object.defineProperty(i,"Did",{enumerable:!0,get:function(){return m.DidDocument}});const p=t(8496);Object.defineProperty(i,"Schema",{enumerable:!0,get:function(){return p.CredentialSchemaDocument}}),i.HypersignSSISdk=class{constructor(e){const{offlineSigner:i,nodeRpcEndpoint:t,nodeRestEndpoint:r,namespace:a,entityApiSecretKey:l}=e;this.signer=i,this.nodeRpcEndpoint=t||"MAIN",this.nodeRestEndpoint=r||"",this.namespace=a||"",this.entityApiSecretKey=l||"";const h={offlineSigner:this.signer,nodeRpcEndpoint:this.nodeRpcEndpoint,nodeRestEndpoint:this.nodeRestEndpoint,namespace:this.namespace,entityApiSecretKey:this.entityApiSecretKey};this.did=new o.default(h),this.did.bjjDID=new s.default(h),this.schema=new c.default(h),this.vc=new n.default(h),this.vp=new d.default(h)}init(){return r(this,void 0,void 0,(function*(){yield this.did.init(),yield this.did.bjjDID.init(),yield this.schema.init(),yield this.schema.hypersignBjjschema.init(),yield this.vc.init(),yield this.vc.bjjVC.init()}))}}},17617:function(e,i,t){var r=this&&this.__awaiter||function(e,i,t,r){return new(t||(t=Promise))((function(a,o){function s(e){try{d(r.next(e))}catch(e){o(e)}}function n(e){try{d(r.throw(e))}catch(e){o(e)}}function d(e){var i;e.done?a(e.value):(i=e.value,i instanceof t?i:new t((function(e){e(i)}))).then(s,n)}d((r=r.apply(e,i||[])).next())}))},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(i,"__esModule",{value:!0});const o=a(t(79781)),s=a(t(55397)),n=a(t(26021)),d=a(t(17571)),c=a(t(94733)),{AuthenticationProofPurpose:l,AssertionProofPurpose:h}=s.default.purposes,u=t(75259),m=a(t(14132)),p=t(27943),f=t(34577),y=s.default.extendContextLoader(m.default);i.default=class{constructor(e={}){const{namespace:i,nodeRpcEndpoint:t,nodeRestEndpoint:r}=e;this.namespace=i&&""!=i?i:"";const a={nodeRpcEndpoint:t||"MAIN",nodeRestEndpoint:r||""};this.vc=new c.default(a),this.hsDid=new n.default(a),this.id="",this.type=[],this.verifiableCredential=[],this.holder="",this.proof={}}signByClientSpec(e){throw new Error("Method not implemented.")}verifyByClientSpec(e){throw new Error("Method not implemented.")}_getId(){return r(this,void 0,void 0,(function*(){const e=yield d.default.getUUID();let i;return i=this.namespace&&""!=this.namespace?`${u.VP.SCHEME}:${u.VP.METHOD}:${this.namespace}:${e}`:`${u.VP.SCHEME}:${u.VP.METHOD}:${e}`,i}))}generate(e){return r(this,void 0,void 0,(function*(){const i=yield this._getId();return o.default.createPresentation({verifiableCredential:e.verifiableCredentials,id:i,holder:e.holderDid})}))}sign(e){return r(this,void 0,void 0,(function*(){if(e.holderDid&&e.holderDidDocSigned)throw new Error("HID-SSI-SDK:: Either holderDid or holderDidDocSigned should be provided");if(!e.privateKeyMultibase)throw new Error("HID-SSI-SDK:: params.privateKeyMultibase is required for signing a presentation");if(!e.presentation)throw new Error("HID-SSI-SDK:: params.presentation is required for signing a presentation");if(!e.challenge)throw new Error("HID-SSI-SDK:: params.challenge is required for signing a presentation");if(!e.verificationMethodId)throw new Error("HID-SSI-SDK:: params.verificationMethodId is required for signing a presentation");if(!this.hsDid)throw new Error("HID-SSI-SDK:: Error: HypersignVerifiableCredential class is not instantiated with Offlinesigner or have not been initilized");let i;if(e.holderDid)i=yield this.hsDid.resolve({did:e.holderDid});else{if(!e.holderDidDocSigned)throw new Error("HID-SSI-SDK:: params.holderDid or params.holderDidDocSigned is required for signing a presentation");i={},i.didDocument=e.holderDidDocSigned}const{didDocument:t}=i,r=e.verificationMethodId,a=t.verificationMethod.find((e=>e.id==r)),o=yield p.BabyJubJubKeys2021.fromKeys({privateKeyMultibase:e.privateKeyMultibase,publicKeyMultibase:a.publicKeyMultibase,options:{id:a.id,controller:a.controller}}),n=new f.BabyJubJubSignature2021Suite({verificationMethod:r,key:o});return e.presentation["@context"].push("https://raw.githubusercontent.com/hypersign-protocol/hypersign-contexts/main/BJJSignature2021.jsonld"),yield s.default.sign(e.presentation,{suite:n,purpose:new l({controller:{"@context":["https://www.w3.org/2018/credentials/v1"],id:r,authentication:[r]},domain:e.domain,challenge:e.challenge}),documentLoader:y})}))}verify(e){var i,t;return r(this,void 0,void 0,(function*(){const r=this;if(e.holderDid&&e.holderDidDocSigned)throw new Error("HID-SSI-SDK:: Either holderDid or holderDidDocSigned should be provided");if(!e.issuerDid)throw new Error("HID-SSI-SDK:: params.issuerDid is required for verifying a presentation");if(!e.challenge)throw new Error("HID-SSI-SDK:: params.challenge is required for verifying a presentation");if(!e.holderVerificationMethodId)throw new Error("HID-SSI-SDK:: params.holderVerificationMethodId is required for verifying a presentation");if(!e.issuerVerificationMethodId)throw new Error("HID-SSI-SDK:: params.issuerVerificationMethodId is required for verifying a presentation");if(!this.vc||!this.hsDid)throw new Error("HID-SSI-SDK:: Error: HypersignVerifiableCredential class is not instantiated with Offlinesigner or have not been initilized");if(!e.signedPresentation.proof)throw new Error("HID-SSI-SDK:: params.signedPresentation must be signed");let a;if(e.holderDid)a=yield this.hsDid.resolve({did:e.holderDid});else{if(!e.holderDidDocSigned)throw new Error("Either holderDid or holderDidDocSigned should be provided");a={},a.didDocument=e.holderDidDocSigned}const o=Array(),n=e.signedPresentation.verifiableCredential;for(let a=0;a<n.length;a++)if("BabyJubJubSignatureProof2021"===(null===(i=n[a].proof)||void 0===i?void 0:i.type)){const i=(yield this.hsDid.resolve({did:n[a].issuer})).didDocument.verificationMethod.find((i=>i.id==e.issuerVerificationMethodId)),t=yield this.verifyProof(n[a],{suite:new f.BabyJubJubSignatureProof2021({key:yield p.BabyJubJubKeys2021.fromKeys({publicKeyMultibase:null==i?void 0:i.publicKeyMultibase,options:{id:null==i?void 0:i.id,controller:null==i?void 0:i.controller}})})});o.push(t)}else{const e=yield r.vc.bjjVC.verify({credential:n[a],issuerDid:n[a].issuer,verificationMethodId:null===(t=n[a].proof)||void 0===t?void 0:t.verificationMethod});o.push(e)}const{didDocument:d}=a,c=d,h=e.holderVerificationMethodId,m=c.verificationMethod.find((e=>e.id==h)),g={"@context":u.DID.CONTROLLER_CONTEXT,id:c.id,authentication:c.authentication},S=new l({controller:g,domain:e.domain,challenge:e.challenge}),v=yield p.BabyJubJubKeys2021.fromKeys({publicKeyMultibase:m.publicKeyMultibase,options:{id:m.id,controller:m.controller}}),D=new f.BabyJubJubSignature2021Suite({verificationMethod:h,key:v}),b=yield s.default.verify(e.signedPresentation,{purpose:S,suite:D,documentLoader:y});return b.results.push({credentialResult:o}),b}))}verifyProof(e,i){return r(this,void 0,void 0,(function*(){const t=e.proof.verificationMethod;return yield s.default.verify(e,{suite:i.suite,purpose:new h({controller:{"@context":["https://www.w3.org/ns/did/v1"],id:t,assertionMethod:[t]}}),documentLoader:y})}))}}},74155:function(e,i,t){var r=this&&this.__awaiter||function(e,i,t,r){return new(t||(t=Promise))((function(a,o){function s(e){try{d(r.next(e))}catch(e){o(e)}}function n(e){try{d(r.throw(e))}catch(e){o(e)}}function d(e){var i;e.done?a(e.value):(i=e.value,i instanceof t?i:new t((function(e){e(i)}))).then(s,n)}d((r=r.apply(e,i||[])).next())}))},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(i,"__esModule",{value:!0});const o=t(45711),s=a(t(79781)),n=a(t(55397)),d=a(t(26021)),c=t(54807),l=t(25023),h=a(t(17571)),u=a(t(94733)),{AuthenticationProofPurpose:m,AssertionProofPurpose:p}=n.default.purposes,f=t(75259),y=a(t(14132)),g=t(55397),S=t(97654),v=a(t(17617)),D=n.default.extendContextLoader(y.default);i.default=class{constructor(e={}){const{namespace:i,nodeRpcEndpoint:t,nodeRestEndpoint:r}=e;this.namespace=i&&""!=i?i:"";const a={nodeRpcEndpoint:t||"MAIN",nodeRestEndpoint:r||""};this.vc=new u.default(a),this.hsDid=new d.default(a),this.id="",this.type=[],this.verifiableCredential=[],this.holder="",this.proof={},this.bjjVp=new v.default(e)}_getId(){return r(this,void 0,void 0,(function*(){const e=yield h.default.getUUID();let i;return i=this.namespace&&""!=this.namespace?`${f.VP.SCHEME}:${f.VP.METHOD}:${this.namespace}:${e}`:`${f.VP.SCHEME}:${f.VP.METHOD}:${e}`,i}))}generate(e){return r(this,void 0,void 0,(function*(){const i=yield this._getId();return s.default.createPresentation({verifiableCredential:e.verifiableCredentials,id:i,holder:e.holderDid})}))}sign(e){return r(this,void 0,void 0,(function*(){if(e.holderDid&&e.holderDidDocSigned)throw new Error("HID-SSI-SDK:: Either holderDid or holderDidDocSigned should be provided");if(!e.privateKeyMultibase)throw new Error("HID-SSI-SDK:: params.privateKeyMultibase is required for signing a presentation");if(!e.presentation)throw new Error("HID-SSI-SDK:: params.presentation is required for signing a presentation");if(!e.challenge)throw new Error("HID-SSI-SDK:: params.challenge is required for signing a presentation");if(!e.verificationMethodId)throw new Error("HID-SSI-SDK:: params.verificationMethodId is required for signing a presentation");if(!this.hsDid)throw new Error("HID-SSI-SDK:: Error: HypersignVerifiableCredential class is not instantiated with Offlinesigner or have not been initilized");let i;if(e.holderDid)i=yield this.hsDid.resolve({did:e.holderDid});else{if(!e.holderDidDocSigned)throw new Error("HID-SSI-SDK:: params.holderDid or params.holderDidDocSigned is required for signing a presentation");i={},i.didDocument=e.holderDidDocSigned}const{didDocument:t}=i,r=e.verificationMethodId,a=t.verificationMethod.find((e=>e.id==r)),o=yield l.Ed25519VerificationKey2020.from(Object.assign({privateKeyMultibase:e.privateKeyMultibase},a)),n=new c.Ed25519Signature2020({verificationMethod:r,key:o});return yield s.default.signPresentation({presentation:e.presentation,suite:n,challenge:e.challenge,documentLoader:D,domain:e.domain})}))}verify(e){return r(this,void 0,void 0,(function*(){if(e.holderDid&&e.holderDidDocSigned)throw new Error("HID-SSI-SDK:: Either holderDid or holderDidDocSigned should be provided");if(!e.issuerDid)throw new Error("HID-SSI-SDK:: params.issuerDid is required for verifying a presentation");if(!e.challenge)throw new Error("HID-SSI-SDK:: params.challenge is required for verifying a presentation");if(!e.holderVerificationMethodId)throw new Error("HID-SSI-SDK:: params.holderVerificationMethodId is required for verifying a presentation");if(!e.issuerVerificationMethodId)throw new Error("HID-SSI-SDK:: params.issuerVerificationMethodId is required for verifying a presentation");if(!this.vc||!this.hsDid)throw new Error("HID-SSI-SDK:: Error: HypersignVerifiableCredential class is not instantiated with Offlinesigner or have not been initilized");if(!e.signedPresentation.proof)throw new Error("HID-SSI-SDK:: params.signedPresentation must be signed");let i;if(e.holderDid)i=yield this.hsDid.resolve({did:e.holderDid});else{if(!e.holderDidDocSigned)throw new Error("Either holderDid or holderDidDocSigned should be provided");i={},i.didDocument=e.holderDidDocSigned}const{didDocument:t}=i,a=t,o=e.holderVerificationMethodId,n=a.verificationMethod.find((e=>e.id==o)),d={"@context":f.DID.CONTROLLER_CONTEXT,id:a.id,authentication:a.authentication},h=new m({controller:d,challenge:e.challenge,domain:e.domain}),u=yield l.Ed25519VerificationKey2020.from(Object.assign({privateKeyMultibase:""},n)),y=new c.Ed25519Signature2020({verificationMethod:o,key:u}),{didDocument:g}=yield this.hsDid.resolve({did:e.issuerDid});if(null==g||0===Object.keys(g).length)throw new Error(`Issuer DID ${g} is invalid or not registered on the blockchain`);const S=g,v=S.controller,b=e.issuerVerificationMethodId.split("#")[0];if(!v.includes(b))throw new Error(b+" is not a controller of "+e.issuerDid);const E=e.issuerVerificationMethodId;let w=S.verificationMethod.find((e=>e.id==E));if(null==w){const{didDocument:e}=yield this.hsDid.resolve({did:b});w=e.verificationMethod.find((e=>e.id==E))}const I={"@context":f.DID.CONTROLLER_CONTEXT,id:S.id,assertionMethod:S.assertionMethod},P=new p({controller:I}),C=yield l.Ed25519VerificationKey2020.from(Object.assign({privateKeyMultibase:""},w)),A=new c.Ed25519Signature2020({verificationMethod:E,key:C}),M=this;return yield s.default.verify({presentation:e.signedPresentation,presentationPurpose:h,purpose:P,suite:[y,A],documentLoader:D,unsignedPresentation:!1,checkStatus:function(e){return r(this,void 0,void 0,(function*(){return yield M.vc.checkCredentialStatus({credentialId:e.credential.id})}))}})}))}signByClientSpec(e){return r(this,void 0,void 0,(function*(){if(!e.holderDid)throw new Error("HID-SSI-SDK:: params.holderDid is required to sign a presentation");if(!e.presentation)throw new Error("HID-SSI-SDK:: params.presentation is required for signing a presentation");if(!e.challenge)throw new Error("HID-SSI-SDK:: params.challenge is required for signing a presentation");if(!e.verificationMethodId)throw new Error("HID-SSI-SDK:: params.verificationMethodId is required for signing a presentation");if(!e.web3Obj||0===Object.keys(e.web3Obj).length)throw new Error("HID-SSI-SDK:: Error: params.web3Obj is required to sign a presentation");if(!this.hsDid)throw new Error("HID-SSI-SDK:: Error: HypersignVerifiableCredential class is not instantiated with Offlinesigner or have not been initilized");let i;if(!e.holderDid)throw new Error("holderDid should be provided");i=yield this.hsDid.resolve({did:e.holderDid});const t=[];e.presentation.verifiableCredential.forEach((e=>t.push(o.JCS.cannonicalize(e))));const r=new S.EthereumEip712Signature2021({},e.web3Obj),a=yield r.createProof({document:e.presentation,purpose:new g.purposes.AuthenticationProofPurpose({challenge:e.challenge,domain:e.domain,controller:{"@context":f.DID.CONTROLLER_CONTEXT,id:i.didDocument.id,authentication:i.didDocument.authentication}}),verificationMethod:e.verificationMethodId,date:(new Date).toISOString(),documentLoader:D,domain:e.domain?{name:e.domain}:void 0});return e.presentation.proof=a,e.presentation}))}verifyByClientSpec(e){return r(this,void 0,void 0,(function*(){try{if(e.holderDid&&e.holderDidDocSigned)throw new Error("HID-SSI-SDK:: Either holderDid or holderDidDocSigned should be provided");if(!e.issuerDid)throw new Error("HID-SSI-SDK:: params.issuerDid is required for verifying a presentation");if(!e.challenge)throw new Error("HID-SSI-SDK:: params.challenge is required for verifying a presentation");if(!e.holderVerificationMethodId)throw new Error("HID-SSI-SDK:: params.holderVerificationMethodId is required for verifying a presentation");if(!e.issuerVerificationMethodId)throw new Error("HID-SSI-SDK:: params.issuerVerificationMethodId is required for verifying a presentation");if(!this.vc||!this.hsDid)throw new Error("HID-SSI-SDK:: Error: HypersignVerifiableCredential class is not instantiated with Offlinesigner or have not been initilized");if(!e.signedPresentation.proof)throw new Error("HID-SSI-SDK:: params.signedPresentation must be signed");let i;if(e.holderDid)i=yield this.hsDid.resolve({did:e.holderDid});else{if(!e.holderDidDocSigned)throw new Error("Either holderDid or holderDidDocSigned should be provided");i={},i.didDocument=e.holderDidDocSigned}const{didDocument:t}=yield this.hsDid.resolve({did:e.issuerDid});if(null==t)throw new Error("Issuer DID is not registered");const a=e.issuerVerificationMethodId,o=t,n=o.verificationMethod.find((e=>e.id==a)),d={"@context":["DID.CONTROLLER_CONTEXT"],id:o.id,assertionMethod:o.assertionMethod},h=yield l.Ed25519VerificationKey2020.from(Object.assign({privateKeyMultibase:""},n)),u=new c.Ed25519Signature2020({verificationMethod:a,key:h}),p=new S.EthereumEip712Signature2021({},e.web3Obj),f=this,y=function(e){return r(this,void 0,void 0,(function*(){return yield f.vc.checkCredentialStatus({credentialId:e.credential.id})}))};let g={verified:!1,credentialResults:Array(),presentationResult:{},error:null};switch(e.signedPresentation.proof.type){case"EthereumEip712Signature2021":{const t=Array(),r=e.signedPresentation.verifiableCredential;for(let e=0;e<r.length;e++){const i=yield s.default.verifyCredential({credential:JSON.parse(r[e]),controller:d,suite:u,documentLoader:D,checkStatus:y});t.push(i)}const a=e.signedPresentation.proof,o=Object.assign({},e.signedPresentation);delete o.proof;const n=yield p.verifyProof({document:o,domain:e.domain?{name:e.domain}:void 0,proof:a,types:e.signedPresentation.proof.eip712.types,purpose:new m({challenge:e.challenge,domain:e.domain,controller:{"@context":"DID.CONTROLLER_CONTEXT",id:i.didDocument.id,authentication:i.didDocument.authentication}}),documentLoader:D});if(!n.verified)throw n.error;g={verified:!0,credentialResults:t,presentationResult:n,error:null};break}case"Ed25519Signature2020":throw new Error("HID-SSI-SDK:: Error: Ed25519Signature2020 is not supported yet");default:throw new Error("HID-SSI-SDK:: Error: Invalid proof type")}return g}catch(e){return{verified:!1,credentialResults:Array(),presentationResult:{},error:e}}}))}}},27910:function(e,i,t){var r=this&&this.__createBinding||(Object.create?function(e,i,t,r){void 0===r&&(r=t);var a=Object.getOwnPropertyDescriptor(i,t);a&&!("get"in a?!i.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return i[t]}}),Object.defineProperty(e,r,a)}:function(e,i,t,r){void 0===r&&(r=t),e[r]=i[t]}),a=this&&this.__setModuleDefault||(Object.create?function(e,i){Object.defineProperty(e,"default",{enumerable:!0,value:i})}:function(e,i){e.default=i}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var i={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(i,e,t);return a(i,e),i};Object.defineProperty(i,"__esModule",{value:!0}),i.HIDRpcFactory=void 0;const s=t(63365),n=t(75792),d=o(t(13020)),c=t(75259);i.HIDRpcFactory=class{constructor(){this.hidRPCRegistery=new s.Registry(n.defaultRegistryTypes)}registerRpc(e){if(!e||!d[e])throw new Error("Invalid rpcName");const i=`${c.HID_COSMOS_MODULE}.${c.HIDRpcEnums[e]}`;this.hidRPCRegistery.register(i,d[e])}}},43888:function(e,i,t){var r=this&&this.__createBinding||(Object.create?function(e,i,t,r){void 0===r&&(r=t);var a=Object.getOwnPropertyDescriptor(i,t);a&&!("get"in a?!i.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return i[t]}}),Object.defineProperty(e,r,a)}:function(e,i,t,r){void 0===r&&(r=t),e[r]=i[t]}),a=this&&this.__setModuleDefault||(Object.create?function(e,i){Object.defineProperty(e,"default",{enumerable:!0,value:i})}:function(e,i){e.default=i}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var i={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(i,e,t);return a(i,e),i},s=this&&this.__awaiter||function(e,i,t,r){return new(t||(t=Promise))((function(a,o){function s(e){try{d(r.next(e))}catch(e){o(e)}}function n(e){try{d(r.throw(e))}catch(e){o(e)}}function d(e){var i;e.done?a(e.value):(i=e.value,i instanceof t?i:new t((function(e){e(i)}))).then(s,n)}d((r=r.apply(e,i||[])).next())}))},n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(i,"__esModule",{value:!0});const d=t(6331),c=o(t(75259)),l=n(t(55397)),{AssertionProofPurpose:h}=l.default.purposes,u=n(t(17571)),m=t(55397),p=n(t(68374)),f=n(t(14132)),y=(0,m.extendContextLoader)(f.default),g=n(t(26021)),S=t(27943),v=t(34577);i.default=class{constructor(e={}){const{namespace:i,offlineSigner:t,nodeRpcEndpoint:r,nodeRestEndpoint:a,entityApiSecretKey:o}=e,s=r||"MAIN",n=a||"";this.schemaRpc=new d.SchemaRpc({offlineSigner:t,nodeRpcEndpoint:s,nodeRestEndpoint:n}),this.hsDid=new g.default({offlineSigner:t,nodeRpcEndpoint:s,nodeRestEndpoint:n}),o&&""!=o?(this.schemaApiService=new p.default(o),this.schemaRpc=null):this.schemaApiService=null,this["@context"]=[c.SCHEMA.SCHEMA_CONTEXT],this.namespace=i&&""!=i?i:"",this.type=c.SCHEMA.SCHEMA_TYPE,this.modelVersion="1.0",this.id="",this.name="",this.author="",this.authored="",this.schema={schema:"",description:"",type:"",properties:"",required:[],additionalProperties:!1}}_getSchemaId(){return s(this,void 0,void 0,(function*(){const e=yield u.default.getUUID();let i;return i=this.namespace&&""!=this.namespace?`${c.SCHEMA.SCHEME}:${c.SCHEMA.METHOD}:${this.namespace}:${e}:${this.modelVersion}`:`${c.SCHEMA.SCHEME}:${c.SCHEMA.METHOD}:${e}:${this.modelVersion}`,i}))}_getDateTime(){return new Date((new Date).getTime()-1e5).toISOString().slice(0,-5)+"Z"}isPascalCase(e){return/^[A-Z][a-zA-Z0-9]*$/.test(e)}_jsonLdSign(e){return s(this,void 0,void 0,(function*(){const{schema:i,privateKeyMultibase:t,verificationMethodId:r}=e,a=yield S.BabyJubJubKeys2021.fromKeys({options:{controller:r,id:r},privateKeyMultibase:t,publicKeyMultibase:e.publicKeyMultibase}),o=new v.BabyJubJubSignature2021Suite({key:a});return(yield l.default.sign(i,{suite:o,purpose:new h,documentLoader:y})).proof}))}init(){return s(this,void 0,void 0,(function*(){if(!this.schemaRpc&&!this.schemaApiService)throw new Error("HID-SSI-SDK:: Error: HypersignVerifiableCredential class is not instantiated with Offlinesigner or have not been initilized with entityApiSecretKey");this.schemaRpc&&(yield this.schemaRpc.init()),this.schemaApiService&&(yield this.schemaApiService.auth())}))}generate(e){var i;return s(this,void 0,void 0,(function*(){if(!e.author)throw new Error("HID-SSI-SDK:: Error: Author must be passed");if(!this.isPascalCase(e.name))throw new Error("HID-SSI-SDK:: Error: schema name should always be in PascalCase");this["@context"]=[c.SCHEMA.SCHEMA_CONTEXT],this.id=yield this._getSchemaId(),this.name=e.name,this.author=e.author,this.authored=this._getDateTime(),this.schema={schema:c.SCHEMA.SCHEMA_JSON,description:e.description?e.description:"",type:"https://schema.org/object",properties:"",required:[],additionalProperties:e.additionalProperties};const t={};return e.fields&&e.fields.length>0&&(e.fields.forEach((e=>{var i;if(!e.name)throw new Error("HID-SSI-SDK:: Error: All fields must contains property 'name'");const r={};r.propName=e.name,r.val={},r.val.type=null!==(i=null==e?void 0:e.type)&&void 0!==i?i:"string",e.format&&(r.val.format=e.format),t[r.propName]=r.val,e.isRequired&&this.schema.required.push(e.name)})),this.schema.properties=JSON.stringify(t)),this.schema.additionalProperties||delete this.schema.additionalProperties,0==(null===(i=this.schema.required)||void 0===i?void 0:i.length)&&delete this.schema.required,{"@context":this["@context"],type:this.type,modelVersion:this.modelVersion,id:this.id,name:this.name,author:this.author,authored:this.authored,schema:this.schema}}))}sign(e){return s(this,void 0,void 0,(function*(){if(!e.privateKeyMultibase)throw new Error("HID-SSI-SDK:: Error: params.privateKeyMultibase must be passed");if(!e.verificationMethodId)throw new Error("HID-SSI-SDK:: Error: params.verificationMethodId must be passed");if(!e.schema)throw new Error("HID-SSI-SDK:: Error: Schema must be passed");const{schema:i,privateKeyMultibase:t,verificationMethodId:r}=e,a=e.schema,{didDocument:o}=yield this.hsDid.resolve({did:i.author});if(!o)throw new Error("HID-SSI-SDK:: Error: can not resolve the author");const s=o.verificationMethod.find((e=>e.id==r));if(!s)throw new Error("HID-SSI-SDK:: Error: verificationMethod not matched");const n=yield this._jsonLdSign({schema:i,privateKeyMultibase:t,verificationMethodId:r,publicKeyMultibase:s.publicKeyMultibase});a.proof={};const d=a;return n&&(d.proof=Object.assign(Object.assign({},d.proof),n)),d}))}register(e){return s(this,void 0,void 0,(function*(){if(!e.schema)throw new Error("HID-SSI-SDK:: Error: schema must be passed");if(!e.schema.proof)throw new Error("HID-SSI-SDK:: Error: schema.proof must be passed");if(!e.schema.proof.created)throw new Error("HID-SSI-SDK:: Error: schema.proof must Contain created");if(!e.schema.proof.proofPurpose)throw new Error("HID-SSI-SDK:: Error: schema.proof must Contain proofPurpose");if(!e.schema.proof.proofValue)throw new Error("HID-SSI-SDK:: Error: schema.proof must Contain proofValue");if(!e.schema.proof.type)throw new Error("HID-SSI-SDK:: Error: schema.proof must Contain type");if(!e.schema.proof.verificationMethod)throw new Error("HID-SSI-SDK:: Error: schema.proof must Contain verificationMethod");if(!this.schemaRpc&&!this.schemaApiService)throw new Error("HID-SSI-SDK:: Error: HypersignSchema class is not instantiated with Offlinesigner or have not been initilized with entityApiSecret");const i={},t=e.schema,r=t.proof;if(this.schemaRpc){const e=yield this.schemaRpc.registerSchema(t,r);i.transactionHash=e.transactionHash}else if(this.schemaApiService){const t=yield this.schemaApiService.registerSchema({schemaDocument:e.schema,schemaProof:e.schema.proof});i.transactionHash=t.transactionHash}return i}))}resolve(e){return s(this,void 0,void 0,(function*(){if(!e.schemaId)throw new Error("HID-SSI-SDK:: Error: SchemaId must be passed");if(!this.schemaRpc)throw new Error("HID-SSI-SDK:: Error: HypersignSchema class is not instantiated with Offlinesigner or have not been initilized");const i=yield this.schemaRpc.resolveSchema(e.schemaId);if(!i||i.length<0)throw new Error("HID-SSI-SDK:: Error: No schema found, id = "+e.schemaId);const t=i[0],r={credentialSchemaDocument:i[0].schema?i[0]:t.credentialSchemaDocument,credentialSchemaProof:i[0].proof?i[0].proof:t.credentialSchemaProof};return Object.assign(Object.assign({},r.credentialSchemaDocument),{proof:r.credentialSchemaProof})}))}vcJsonSchema(e){var i,t,r;const a=e,o=JSON.parse(null===(i=e.schema)||void 0===i?void 0:i.properties),s={},n={};Object.entries(o).forEach((e=>{s[e[0]]={"@id":"https://hypersign-schema.org/"+e[0],"@type":"xsd:"+e[1].type},n[e[0]]={description:`Enter value for ${e[0]}`,title:`${e[0]}`,type:e[1].type}}));const d={"@protected":!0,"@version":1.1,id:"@id",type:"@type",[a.name]:{"@context":Object.assign({"@propagate":!0,"@protected":!0,xsd:"http://www.w3.org/2001/XMLSchema#"},s),"@id":"https://hypersign-schema.org"}},c={$schema:"https://json-schema.org/draft/2020-12/schema",description:null===(t=a.schema)||void 0===t?void 0:t.description,properties:{credentialSubject:{description:"Stores the data of the credential",title:"Credential subject",properties:Object.assign({id:{description:"Stores the DID of the subject that owns the credential",title:"Credential subject ID",format:"uri",type:"string"}},n),required:null===(r=a.schema)||void 0===r?void 0:r.required,type:"object"}},type:"object",required:["credentialSubject"]};return c.$metadata={type:a.name,version:1,jsonLdContext:{"@context":Object.assign({},d)}},c}}},38307:function(e,i,t){var r=this&&this.__createBinding||(Object.create?function(e,i,t,r){void 0===r&&(r=t);var a=Object.getOwnPropertyDescriptor(i,t);a&&!("get"in a?!i.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return i[t]}}),Object.defineProperty(e,r,a)}:function(e,i,t,r){void 0===r&&(r=t),e[r]=i[t]}),a=this&&this.__setModuleDefault||(Object.create?function(e,i){Object.defineProperty(e,"default",{enumerable:!0,value:i})}:function(e,i){e.default=i}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var i={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(i,e,t);return a(i,e),i},s=this&&this.__awaiter||function(e,i,t,r){return new(t||(t=Promise))((function(a,o){function s(e){try{d(r.next(e))}catch(e){o(e)}}function n(e){try{d(r.throw(e))}catch(e){o(e)}}function d(e){var i;e.done?a(e.value):(i=e.value,i instanceof t?i:new t((function(e){e(i)}))).then(s,n)}d((r=r.apply(e,i||[])).next())}))},n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(i,"__esModule",{value:!0});const d=t(6331),c=o(t(75259)),l=n(t(55397)),{AssertionProofPurpose:h}=l.default.purposes,u=n(t(17571)),m=t(55397),p=t(54807),f=n(t(68374)),y=n(t(14132)),g=(0,m.extendContextLoader)(y.default),S=t(25023),v=n(t(26021)),D=n(t(43888));i.default=class{constructor(e={}){const{namespace:i,offlineSigner:t,nodeRpcEndpoint:r,nodeRestEndpoint:a,entityApiSecretKey:o}=e,s=r||"MAIN",n=a||"";this.schemaRpc=new d.SchemaRpc({offlineSigner:t,nodeRpcEndpoint:s,nodeRestEndpoint:n}),this.hsDid=new v.default({offlineSigner:t,nodeRpcEndpoint:s,nodeRestEndpoint:n}),o&&""!=o?(this.schemaApiService=new f.default(o),this.schemaRpc=null):this.schemaApiService=null,this["@context"]=[c.SCHEMA.SCHEMA_CONTEXT],this.namespace=i&&""!=i?i:"",this.type=c.SCHEMA.SCHEMA_TYPE,this.modelVersion="1.0",this.id="",this.name="",this.author="",this.authored="",this.schema={schema:"",description:"",type:"",properties:"",required:[],additionalProperties:!1},this.hypersignBjjschema=new D.default(e)}_getSchemaId(){return s(this,void 0,void 0,(function*(){const e=yield u.default.getUUID();let i;return i=this.namespace&&""!=this.namespace?`${c.SCHEMA.SCHEME}:${c.SCHEMA.METHOD}:${this.namespace}:${e}:${this.modelVersion}`:`${c.SCHEMA.SCHEME}:${c.SCHEMA.METHOD}:${e}:${this.modelVersion}`,i}))}_getDateTime(){return new Date((new Date).getTime()-1e5).toISOString().slice(0,-5)+"Z"}isPascalCase(e){return/^[A-Z][a-zA-Z0-9]*$/.test(e)}_jsonLdSign(e){return s(this,void 0,void 0,(function*(){const{schema:i,privateKeyMultibase:t,verificationMethodId:r}=e,a=yield S.Ed25519VerificationKey2020.from({id:r,privateKeyMultibase:t,publicKeyMultibase:e.publicKeyMultibase}),o=new p.Ed25519Signature2020({key:a});return(yield l.default.sign(i,{suite:o,purpose:new h,documentLoader:g})).proof}))}init(){return s(this,void 0,void 0,(function*(){if(!this.schemaRpc&&!this.schemaApiService)throw new Error("HID-SSI-SDK:: Error: HypersignVerifiableCredential class is not instantiated with Offlinesigner or have not been initilized with entityApiSecretKey");this.schemaRpc&&(yield this.schemaRpc.init()),this.schemaApiService&&(yield this.schemaApiService.auth())}))}generate(e){var i;return s(this,void 0,void 0,(function*(){if(!e.author)throw new Error("HID-SSI-SDK:: Error: Author must be passed");if(!this.isPascalCase(e.name))throw new Error("HID-SSI-SDK:: Error: schema name should always be in PascalCase");this["@context"]=[c.SCHEMA.SCHEMA_CONTEXT],this.id=yield this._getSchemaId(),this.name=e.name,this.author=e.author,this.authored=this._getDateTime(),this.schema={schema:c.SCHEMA.SCHEMA_JSON,description:e.description?e.description:"",type:"https://schema.org/object",properties:"",required:[],additionalProperties:e.additionalProperties};const t={};return e.fields&&e.fields.length>0&&(e.fields.forEach((e=>{var i;if(!e.name)throw new Error("HID-SSI-SDK:: Error: All fields must contains property 'name'");const r={};r.propName=e.name,r.val={},r.val.type=null!==(i=null==e?void 0:e.type)&&void 0!==i?i:"string",e.format&&(r.val.format=e.format),t[r.propName]=r.val,e.isRequired&&this.schema.required.push(e.name)})),this.schema.properties=JSON.stringify(t)),this.schema.additionalProperties||delete this.schema.additionalProperties,0==(null===(i=this.schema.required)||void 0===i?void 0:i.length)&&delete this.schema.required,{"@context":this["@context"],type:this.type,modelVersion:this.modelVersion,id:this.id,name:this.name,author:this.author,authored:this.authored,schema:this.schema}}))}sign(e){return s(this,void 0,void 0,(function*(){if(!e.privateKeyMultibase)throw new Error("HID-SSI-SDK:: Error: params.privateKeyMultibase must be passed");if(!e.verificationMethodId)throw new Error("HID-SSI-SDK:: Error: params.verificationMethodId must be passed");if(!e.schema)throw new Error("HID-SSI-SDK:: Error: Schema must be passed");const{schema:i,privateKeyMultibase:t,verificationMethodId:r}=e,a=e.schema,{didDocument:o}=yield this.hsDid.resolve({did:i.author});if(!o)throw new Error("HID-SSI-SDK:: Error: can not resolve the author");const s=o.verificationMethod.find((e=>e.id==r));if(!s)throw new Error("HID-SSI-SDK:: Error: verificationMethod not matched");const n=yield this._jsonLdSign({schema:i,privateKeyMultibase:t,verificationMethodId:r,publicKeyMultibase:s.publicKeyMultibase});a.proof={};const d=a;return n&&(d.proof=Object.assign(Object.assign({},d.proof),n)),d}))}register(e){return s(this,void 0,void 0,(function*(){if(!e.schema)throw new Error("HID-SSI-SDK:: Error: schema must be passed");if(!e.schema.proof)throw new Error("HID-SSI-SDK:: Error: schema.proof must be passed");if(!e.schema.proof.created)throw new Error("HID-SSI-SDK:: Error: schema.proof must Contain created");if(!e.schema.proof.proofPurpose)throw new Error("HID-SSI-SDK:: Error: schema.proof must Contain proofPurpose");if(!e.schema.proof.proofValue)throw new Error("HID-SSI-SDK:: Error: schema.proof must Contain proofValue");if(!e.schema.proof.type)throw new Error("HID-SSI-SDK:: Error: schema.proof must Contain type");if(!e.schema.proof.verificationMethod)throw new Error("HID-SSI-SDK:: Error: schema.proof must Contain verificationMethod");if(!this.schemaRpc&&!this.schemaApiService)throw new Error("HID-SSI-SDK:: Error: HypersignSchema class is not instantiated with Offlinesigner or have not been initilized with entityApiSecret");const i={},t=e.schema,r=t.proof;if(this.schemaRpc){const e=yield this.schemaRpc.registerSchema(t,r);i.transactionHash=e.transactionHash}else if(this.schemaApiService){const t=yield this.schemaApiService.registerSchema({schemaDocument:e.schema,schemaProof:e.schema.proof});i.transactionHash=t.transactionHash}return i}))}resolve(e){return s(this,void 0,void 0,(function*(){if(!e.schemaId)throw new Error("HID-SSI-SDK:: Error: SchemaId must be passed");if(!this.schemaRpc)throw new Error("HID-SSI-SDK:: Error: HypersignSchema class is not instantiated with Offlinesigner or have not been initilized");const i=yield this.schemaRpc.resolveSchema(e.schemaId);if(!i||i.length<0)throw new Error("HID-SSI-SDK:: Error: No schema found, id = "+e.schemaId);const t=i[0],r={credentialSchemaDocument:i[0].schema?i[0]:t.credentialSchemaDocument,credentialSchemaProof:i[0].proof?i[0].proof:t.credentialSchemaProof};return Object.assign(Object.assign({},r.credentialSchemaDocument),{proof:r.credentialSchemaProof})}))}vcJsonSchema(e){var i,t,r;const a=e,o=JSON.parse(null===(i=e.schema)||void 0===i?void 0:i.properties),s={},n={};Object.entries(o).forEach((e=>{s[e[0]]={"@id":"https://hypersign-schema.org/"+e[0],"@type":"xsd:"+e[1].type},n[e[0]]={description:`Enter value for ${e[0]}`,title:`${e[0]}`,type:e[1].type}}));const d={"@protected":!0,"@version":1.1,id:"@id",type:"@type",[a.name]:{"@context":Object.assign({"@propagate":!0,"@protected":!0,xsd:"http://www.w3.org/2001/XMLSchema#"},s),"@id":"https://hypersign-schema.org"}},c={$schema:"https://json-schema.org/draft/2020-12/schema",description:null===(t=a.schema)||void 0===t?void 0:t.description,properties:{credentialSubject:{description:"Stores the data of the credential",title:"Credential subject",properties:Object.assign({id:{description:"Stores the DID of the subject that owns the credential",title:"Credential subject ID",format:"uri",type:"string"}},n),required:null===(r=a.schema)||void 0===r?void 0:r.required,type:"object"}},type:"object",required:["credentialSubject"]};return c.$metadata={type:a.name,version:1,jsonLdContext:{"@context":Object.assign({},d)}},c}}},6331:function(e,i,t){var r=this&&this.__createBinding||(Object.create?function(e,i,t,r){void 0===r&&(r=t);var a=Object.getOwnPropertyDescriptor(i,t);a&&!("get"in a?!i.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return i[t]}}),Object.defineProperty(e,r,a)}:function(e,i,t,r){void 0===r&&(r=t),e[r]=i[t]}),a=this&&this.__setModuleDefault||(Object.create?function(e,i){Object.defineProperty(e,"default",{enumerable:!0,value:i})}:function(e,i){e.default=i}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var i={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(i,e,t);return a(i,e),i},s=this&&this.__awaiter||function(e,i,t,r){return new(t||(t=Promise))((function(a,o){function s(e){try{d(r.next(e))}catch(e){o(e)}}function n(e){try{d(r.throw(e))}catch(e){o(e)}}function d(e){var i;e.done?a(e.value):(i=e.value,i instanceof t?i:new t((function(e){e(i)}))).then(s,n)}d((r=r.apply(e,i||[])).next())}))},n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(i,"__esModule",{value:!0}),i.SchemaRpc=void 0;const d=t(75259),c=o(t(13020)),l=n(t(83784)),h=t(63647),u=n(t(17571)),m=o(t(75259));i.SchemaRpc=class{constructor({offlineSigner:e,nodeRpcEndpoint:i,nodeRestEndpoint:t}){this.hidClient=e?new h.HIDClient(e,i,t):null,this.nodeRestEp=t,this.schemaRestEp=h.HIDClient.hidNodeRestEndpoint+d.HYPERSIGN_NETWORK_SCHEMA_PATH}init(){return s(this,void 0,void 0,(function*(){if(!this.hidClient)throw new Error("HID-SSI-SDK:: Error: SchemaRpc class is not initialise with offlinesigner");yield this.hidClient.init()}))}registerSchema(e,i){return s(this,void 0,void 0,(function*(){if(!this.hidClient)throw new Error("HID-SSI-SDK:: Error: SchemaRpc class is not initialise with offlinesigner");const t={typeUrl:`${d.HID_COSMOS_MODULE}.${d.HIDRpcEnums.MsgRegisterCredentialSchema}`,value:c[d.HIDRpcEnums.MsgRegisterCredentialSchema].fromPartial({credentialSchemaDocument:e,credentialSchemaProof:i,txAuthor:h.HIDClient.getHidWalletAddress()})},r={amount:[{denom:"uhid",amount:yield u.default.fetchFee(m.GAS_FEE_METHODS.Register_Cred_Schema,this.nodeRestEp)}],gas:"200000"},a=h.HIDClient.getHidClient(),o=yield a.signAndBroadcast(h.HIDClient.getHidWalletAddress(),[t],r);if(0!==o.code)throw new Error(`${o.rawLog}`);return o}))}resolveSchema(e){return s(this,void 0,void 0,(function*(){const i=`${this.schemaRestEp}/${e}:`,t=yield l.default.get(i),{credentialSchemas:r}=t.data;if(void 0===r){const{schema:e}=t.data;return e}return r}))}}},38308:(e,i)=>{Object.defineProperty(i,"__esModule",{value:!0}),i.APIENDPOINT=void 0,i.APIENDPOINT={STUDIO_API_BASE_URL:"https://api.entity.hypersign.id/api/v1",STUDIO_API_ORIGIN:"https://entity.hypersign.id",AUTH:"/app/oauth",DID:{CREATE_DID_ENDPOINT:"/did/create",REGISTER_DID_ENDPOINT:"/did/register",UPDATE_DID_ENDPOINT:"/did",RESOLVE_DID_ENDPOINT:"/did/resolve"},CREDENTIALS:{REGISTER_CREDENTIAL_STATUS:"/credential/status/register"},SCHEMA:{REGISTER_SCHEMA:"/schema/register"}}},64114:function(e,i,t){var r=this&&this.__awaiter||function(e,i,t,r){return new(t||(t=Promise))((function(a,o){function s(e){try{d(r.next(e))}catch(e){o(e)}}function n(e){try{d(r.throw(e))}catch(e){o(e)}}function d(e){var i;e.done?a(e.value):(i=e.value,i instanceof t?i:new t((function(e){e(i)}))).then(s,n)}d((r=r.apply(e,i||[])).next())}))},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(i,"__esModule",{value:!0}),i.ApiAuth=void 0;const o=a(t(59959)),s=t(38308),n=a(t(6898));i.ApiAuth=class{constructor(e){if(!e||""===e.trim())throw new Error("HID-SSI_SDK:: Error: Please Provide apiKey");this.apiKey=e}generateAccessToken(){return r(this,void 0,void 0,(function*(){const e=`${s.APIENDPOINT.STUDIO_API_BASE_URL}${s.APIENDPOINT.AUTH}`,i={method:"POST",headers:{"X-Api-Secret-Key":this.apiKey,origin:`${s.APIENDPOINT.STUDIO_API_ORIGIN}`}},t=yield(0,o.default)(e,i),r=yield t.json();if(!t.ok)throw new Error(`HID-SSI-SDK:: ${r.message}`);return r}))}checkAndRefreshAToken(e){return r(this,void 0,void 0,(function*(){try{const i=n.default.decode(e.accessToken,{complete:!0});if(!i)throw new Error("HID-SSI-SDK:: Error: Token is invalid or malformed");if(Math.floor(Date.now()/1e3)>=i.payload.exp){const{access_token:e}=yield this.generateAccessToken();return{valid:!1,accessToken:e}}return{valid:!0}}catch(e){throw new Error(`HID-SSI-SDK:: Error: ${e}`)}}))}}},76706:function(e,i,t){var r=this&&this.__awaiter||function(e,i,t,r){return new(t||(t=Promise))((function(a,o){function s(e){try{d(r.next(e))}catch(e){o(e)}}function n(e){try{d(r.throw(e))}catch(e){o(e)}}function d(e){var i;e.done?a(e.value):(i=e.value,i instanceof t?i:new t((function(e){e(i)}))).then(s,n)}d((r=r.apply(e,i||[])).next())}))};Object.defineProperty(i,"__esModule",{value:!0});const a=t(38308),o=t(64114);i.default=class{constructor(e){if(!e||""===e.trim())throw new Error("HID-SSI-SDK:: Error: Please Provide apiKey");this.authService=new o.ApiAuth(e)}auth(){return r(this,void 0,void 0,(function*(){const e=yield this.authService.generateAccessToken();this.accessToken=e.access_token}))}registerCredentialStatus(e){return r(this,void 0,void 0,(function*(){if(!e.credentialStatus||0===Object.keys(e.credentialStatus).length)throw new Error("HID-SSI-SDK:: Error: params.credentialStatus is required to register credential status");if(!e.credentialStatusProof||0===Object.keys(e.credentialStatusProof).length)throw new Error("HID-SSI-SDK:: Error: params.credentialStatusProof is required to register credential status");const i=yield this.authService.checkAndRefreshAToken({accessToken:this.accessToken});i.valid||(this.accessToken=i.accessToken);const t=`${a.APIENDPOINT.STUDIO_API_BASE_URL}${a.APIENDPOINT.CREDENTIALS.REGISTER_CREDENTIAL_STATUS}`,r={method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`,origin:`${a.APIENDPOINT.STUDIO_API_ORIGIN}`},body:JSON.stringify(Object.assign({},e))},o=yield fetch(t,r),s=yield o.json();if(!o.ok)throw new Error(`HID-SSI-SDK:: Error: ${s.message}`);return s}))}}},80903:function(e,i,t){var r=this&&this.__awaiter||function(e,i,t,r){return new(t||(t=Promise))((function(a,o){function s(e){try{d(r.next(e))}catch(e){o(e)}}function n(e){try{d(r.throw(e))}catch(e){o(e)}}function d(e){var i;e.done?a(e.value):(i=e.value,i instanceof t?i:new t((function(e){e(i)}))).then(s,n)}d((r=r.apply(e,i||[])).next())}))},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(i,"__esModule",{value:!0});const o=t(38308),s=t(64114),n=a(t(59959));i.default=class{constructor(e){if(!e||""===e.trim())throw new Error("HID-SSI_SDK:: Error: Please Provide apiKey");this.authService=new s.ApiAuth(e)}auth(){return r(this,void 0,void 0,(function*(){const e=yield this.authService.generateAccessToken();this.accessToken=e.access_token}))}generateDid(e){return r(this,void 0,void 0,(function*(){if(!e.namespace)throw new Error("HID-SSI-SDK:: Error: params.namespace is required to generate new did doc ");const i=yield this.authService.checkAndRefreshAToken({accessToken:this.accessToken});i.valid||(this.accessToken=i.accessToken);const t=`${o.APIENDPOINT.STUDIO_API_BASE_URL}${o.APIENDPOINT.DID.CREATE_DID_ENDPOINT}`,r={method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`,origin:`${o.APIENDPOINT.STUDIO_API_ORIGIN}`},body:JSON.stringify(Object.assign({},e))},a=yield(0,n.default)(t,r),s=yield a.json();if(!a.ok)throw new Error(`HID-SSI-SDK:: Error: ${s.message}`);const{metaData:d}=s;return d.didDocument}))}registerDid(e){return r(this,void 0,void 0,(function*(){if(!e.didDocument||0===Object.keys(e.didDocument).length)throw new Error("HID-SSI-SDK:: Error: params.didDocument is required to register a did");if(!e.signInfos&&!e.verificationMethodId)throw new Error("HID-SSI-SDK:: Error: either params.verificationMethodId or params.signInfos is required to register a did");if(e.signInfos&&0===e.signInfos.length)throw new Error("HID-SSI-SDK:: Error: params.signInfos is required to register a did");if(e.signInfos&&e.signInfos.length>0)for(const i in e.signInfos){if(!e.signInfos[i].verification_method_id)throw new Error(`HID-SSI-SDK:: Error: params.signInfos[${i}].verification_method_id is required to register a did`);if(!e.signInfos[i].signature)throw new Error(`HID-SSI-SDK:: Error: params.signInfos[${i}].signature is required to register a did`)}const i=yield this.authService.checkAndRefreshAToken({accessToken:this.accessToken});i.valid||(this.accessToken=i.accessToken);const t=`${o.APIENDPOINT.STUDIO_API_BASE_URL}${o.APIENDPOINT.DID.REGISTER_DID_ENDPOINT}`,r={method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`,origin:`${o.APIENDPOINT.STUDIO_API_ORIGIN}`},body:JSON.stringify(Object.assign({},e))},a=yield(0,n.default)(t,r),s=yield a.json();if(!a.ok)throw new Error(`HID-SSI-SDK:: Error: ${s.message}`);const{metaData:d}=s;return{didDocument:d.didDocument,transactionHash:s.transactionHash}}))}resolveDid(e){return r(this,void 0,void 0,(function*(){if(!e.did)throw new Error("HID-SSI-SDK:: Error: params.did is required to resolve a did");const i=yield this.authService.checkAndRefreshAToken({accessToken:this.accessToken});i.valid||(this.accessToken=i.accessToken);const t=`${o.APIENDPOINT.STUDIO_API_BASE_URL}${o.APIENDPOINT.DID.RESOLVE_DID_ENDPOINT}/${e.did}`,r={method:"GET",headers:{Authorization:`Bearer ${this.accessToken}`,origin:`${o.APIENDPOINT.STUDIO_API_ORIGIN}`}},a=yield(0,n.default)(t,r),s=yield a.json();if(!a.ok)throw new Error(`HID-SSI-SDK:: Error: ${s.message}`);return s}))}updateDid(e){return r(this,void 0,void 0,(function*(){if(!e.didDocument||0===Object.keys(e.didDocument).length)throw new Error("HID-SSI-SDK:: Error: params.didDocument is required to update a did");if(!e.signInfos&&!e.verificationMethodId)throw new Error("HID-SSI-SDK:: Error: either params.verificationMethodId or params.signInfos is required to update a did");if(e.signInfos&&0===e.signInfos.length)throw new Error("HID-SSI-SDK:: Error: params.signInfos is required to update a did");if(e.signInfos&&e.signInfos.length>0)for(const i in e.signInfos){if(!e.signInfos[i].verification_method_id)throw new Error(`HID-SSI-SDK:: Error: params.signInfos[${i}].verification_method_id is required to update a did`);if(!e.signInfos[i].signature)throw new Error(`HID-SSI-SDK:: Error: params.signInfos[${i}].signature is required to register a did`)}const i=yield this.authService.checkAndRefreshAToken({accessToken:this.accessToken});i.valid||(this.accessToken=i.accessToken);const t=`${o.APIENDPOINT.STUDIO_API_BASE_URL}${o.APIENDPOINT.DID.UPDATE_DID_ENDPOINT}`,r={method:"PATCH",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`,origin:`${o.APIENDPOINT.STUDIO_API_ORIGIN}`},body:JSON.stringify(Object.assign({},e))},a=yield(0,n.default)(t,r),s=yield a.json();if(!a.ok)throw new Error(`HID-SSI-SDK:: Error: ${s.message}`);return s}))}}},68374:function(e,i,t){var r=this&&this.__awaiter||function(e,i,t,r){return new(t||(t=Promise))((function(a,o){function s(e){try{d(r.next(e))}catch(e){o(e)}}function n(e){try{d(r.throw(e))}catch(e){o(e)}}function d(e){var i;e.done?a(e.value):(i=e.value,i instanceof t?i:new t((function(e){e(i)}))).then(s,n)}d((r=r.apply(e,i||[])).next())}))};Object.defineProperty(i,"__esModule",{value:!0});const a=t(38308),o=t(64114);i.default=class{constructor(e){if(!e||""===e.trim())throw new Error("HID:SSI-SDK:: Error: Please Provide apiKey");this.authService=new o.ApiAuth(e)}auth(){return r(this,void 0,void 0,(function*(){const e=yield this.authService.generateAccessToken();this.accessToken=e.access_token}))}registerSchema(e){return r(this,void 0,void 0,(function*(){if(!e.schemaDocument||0===Object.keys(e.schemaDocument).length)throw new Error("HID-SSI-SDK:: Error: params.schemaDocument is required to register schema on blockchain");if(!e.schemaProof||0===Object.keys(e.schemaProof).length)throw new Error("HID-SSI-SDK:: Error: params.schemaProof is required to register schema on blockchain");const i=yield this.authService.checkAndRefreshAToken({accessToken:this.accessToken});i.valid||(this.accessToken=i.accessToken);const t=`${a.APIENDPOINT.STUDIO_API_BASE_URL}${a.APIENDPOINT.SCHEMA.REGISTER_SCHEMA}`,r={method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`,origin:`${a.APIENDPOINT.STUDIO_API_ORIGIN}`},body:JSON.stringify(Object.assign({},e))},o=yield fetch(t,r),s=yield o.json();if(!o.ok)throw new Error(`HID-SSI-SDK:: Error: ${s.message}`);return s}))}}},17571:function(e,i,t){var r=this&&this.__createBinding||(Object.create?function(e,i,t,r){void 0===r&&(r=t);var a=Object.getOwnPropertyDescriptor(i,t);a&&!("get"in a?!i.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return i[t]}}),Object.defineProperty(e,r,a)}:function(e,i,t,r){void 0===r&&(r=t),e[r]=i[t]}),a=this&&this.__setModuleDefault||(Object.create?function(e,i){Object.defineProperty(e,"default",{enumerable:!0,value:i})}:function(e,i){e.default=i}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var i={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&r(i,e,t);return a(i,e),i},s=this&&this.__awaiter||function(e,i,t,r){return new(t||(t=Promise))((function(a,o){function s(e){try{d(r.next(e))}catch(e){o(e)}}function n(e){try{d(r.throw(e))}catch(e){o(e)}}function d(e){var i;e.done?a(e.value):(i=e.value,i instanceof t?i:new t((function(e){e(i)}))).then(s,n)}d((r=r.apply(e,i||[])).next())}))};Object.defineProperty(i,"__esModule",{value:!0});const n=o(t(75259)),{encode:d,decode:c}=t(6791),l=t(25023);i.default=class{static getUUID(){return s(this,void 0,void 0,(function*(){const e=yield l.Ed25519VerificationKey2020.generate();return(yield e.export({publicKey:!0})).publicKeyMultibase}))}static checkUrl(e){return"/"===e.charAt(e.length-1)?e:e+"/"}static _encodeMbKey(e,i){const t=new Uint8Array(e.length+i.length);return t.set(e),t.set(i,e.length),"z"+d(t)}static _decodeMbKey(e,i){let t=new Uint8Array(i);return t=t.slice(e.length),t}static _decodeMbPubKey(e,i){let t=new Uint8Array(i);return t=t.slice(e.length),"z"+d(t)}static _bufToMultibase(e){return"z"+d(e)}static jsonToLdConvertor(e){const i={};for(const t in e)"context"===t?i["@"+t]=e[t]:i[t]=e[t];return i}static ldToJsonConvertor(e){const i={};for(const t in e)"@context"===t?i.context=e[t]:i[t]=e[t];return i}static getFee(){return"auto"}static removeEmptyString(e){if(Array.isArray(e))for(let i=e.length-1;i>=0;i--)""===e[i]||"object"==typeof e[i]&&0===Object.keys(e[i]).length?e.splice(i,1):"object"==typeof e[i]&&this.removeEmptyString(e[i]);else if("object"==typeof e&&null!==e)for(const i in e)Object.prototype.hasOwnProperty.call(e,i)&&(""===e[i]?delete e[i]:(Array.isArray(e[i])||"object"==typeof e[i])&&this.removeEmptyString(e[i]));return e}static fetchFee(e,i){return s(this,void 0,void 0,(function*(){const t=n.GAS_FEE_API_URL(i),r=yield fetch(t),a=yield r.json();if(a&&a[e])return a[e].amount;throw new Error(`Fee not found for method: ${e}`)}))}}},35717:e=>{e.exports=JSON.parse('{"@context":{"id":"@id","type":"@type","@protected":true,"proof":{"@id":"https://w3id.org/security#proof","@type":"@id","@container":"@graph"},"X25519KeyAgreementKeyEIP5630":{"@id":"https://w3id.org/security#X25519KeyAgreementKeyEIP5630","@context":{"@protected":true,"id":"@id","type":"@type","controller":{"@id":"https://w3id.org/security#controller","@type":"@id"},"revoked":{"@id":"https://w3id.org/security#revoked","@type":"http://www.w3.org/2001/XMLSchema#dateTime"},"publicKeyMultibase":{"@id":"https://w3id.org/security#publicKeyMultibase","@type":"https://w3id.org/security#multibase"},"blockchainAccountId":{"@id":"https://w3c.github.io/vc-data-integrity/vocab/security/vocabulary.jsonld#blockchainAccountId","@type":"https://w3id.org/security#blockchainAccountId"}}}}}')},33977:e=>{e.exports=JSON.parse('{"@context":{"@protected":true,"@version":1.1,"hypersign-vocab":"urn:uuid:13fe9318-bb82-4d95-8bf5-8e7fdf8b2026#","xsd":"http://www.w3.org/2001/XMLSchema#","id":"@id","revoked":{"@id":"hypersign-vocab:revoked","@type":"xsd:boolean"},"suspended":{"@id":"hypersign-vocab:suspended","@type":"xsd:boolean"},"remarks":{"@id":"hypersign-vocab:remarks","@type":"xsd:string"},"issuer":{"@id":"hypersign-vocab:issuer","@type":"xsd:string"},"issuanceDate":{"@id":"hypersign-vocab:issuanceDate","@type":"xsd:dateTime"},"credentialMerkleRootHash":{"@id":"hypersign-vocab:credentialMerkleRootHash","@type":"xsd:string"}}}')},2796:e=>{e.exports=JSON.parse('{"@context":{"@version":1.1,"hypersign-vocab":"urn:uuid:13fe9318-bb82-4d95-8bf5-8e7fdf8b2026#","xsd":"http://www.w3.org/2001/XMLSchema#","id":"@id","type":{"@id":"hypersign-vocab:type"},"modelVersion":{"@id":"hypersign-vocab:modelVersion","@type":"xsd:string"},"name":{"@id":"hypersign-vocab:name","@type":"xsd:string"},"author":{"@id":"hypersign-vocab:author","@type":"xsd:string"},"authored":{"@id":"hypersign-vocab:authored","@type":"xsd:dateTime"},"schema":{"@id":"hypersign-vocab:schema","@type":"xsd:string"},"additionalProperties":{"@id":"hypersign-vocab:additionalProperties","@type":"xsd:boolean"},"description":{"@id":"hypersign-vocab:description","@type":"xsd:string"},"properties":{"@id":"hypersign-vocab:properties","@type":"xsd:string"},"required":{"@id":"hypersign-vocab:required","@container":"@set"}}}')},76461:e=>{e.exports=JSON.parse('{"@context":{"@version":1.1,"@protected":true,"id":"@id","type":"@type","VerifiableCredential":{"@id":"https://www.w3.org/2018/credentials#VerifiableCredential","@context":{"@version":1.1,"@protected":true,"id":"@id","type":"@type","cred":"https://www.w3.org/2018/credentials#","sec":"https://w3id.org/security#","xsd":"http://www.w3.org/2001/XMLSchema#","credentialSchema":{"@id":"cred:credentialSchema","@type":"@id","@context":{"@version":1.1,"@protected":true,"id":"@id","type":"https://www.w3.org/2018/credentials#JsonSchemaValidator2018"}},"credentialStatus":{"@id":"cred:credentialStatus","@type":"@id"},"credentialSubject":{"@id":"cred:credentialSubject","@type":"@id"},"evidence":{"@id":"cred:evidence","@type":"@id"},"expirationDate":{"@id":"cred:expirationDate","@type":"xsd:dateTime"},"holder":{"@id":"cred:holder","@type":"@id"},"issued":{"@id":"cred:issued","@type":"xsd:dateTime"},"issuer":{"@id":"cred:issuer","@type":"@id"},"issuanceDate":{"@id":"cred:issuanceDate","@type":"xsd:dateTime"},"proof":{"@id":"sec:proof","@type":"@id","@container":"@graph"},"refreshService":{"@id":"cred:refreshService","@type":"@id","@context":{"@version":1.1,"@protected":true,"id":"@id","type":"@type","cred":"https://www.w3.org/2018/credentials#","ManualRefreshService2018":"cred:ManualRefreshService2018"}},"termsOfUse":{"@id":"cred:termsOfUse","@type":"@id"},"validFrom":{"@id":"cred:validFrom","@type":"xsd:dateTime"},"validUntil":{"@id":"cred:validUntil","@type":"xsd:dateTime"}}},"VerifiablePresentation":{"@id":"https://www.w3.org/2018/credentials#VerifiablePresentation","@context":{"@version":1.1,"@protected":true,"id":"@id","type":"@type","cred":"https://www.w3.org/2018/credentials#","sec":"https://w3id.org/security#","holder":{"@id":"cred:holder","@type":"@id"},"proof":{"@id":"sec:proof","@type":"@id","@container":"@graph"},"verifiableCredential":{"@id":"cred:verifiableCredential","@type":"@id","@container":"@graph"}}},"EcdsaSecp256k1Signature2019":{"@id":"https://w3id.org/security#EcdsaSecp256k1Signature2019","@context":{"@version":1.1,"@protected":true,"id":"@id","type":"@type","sec":"https://w3id.org/security#","xsd":"http://www.w3.org/2001/XMLSchema#","challenge":"sec:challenge","created":{"@id":"http://purl.org/dc/terms/created","@type":"xsd:dateTime"},"domain":"sec:domain","expires":{"@id":"sec:expiration","@type":"xsd:dateTime"},"jws":"sec:jws","nonce":"sec:nonce","proofPurpose":{"@id":"sec:proofPurpose","@type":"@vocab","@context":{"@version":1.1,"@protected":true,"id":"@id","type":"@type","sec":"https://w3id.org/security#","assertionMethod":{"@id":"sec:assertionMethod","@type":"@id","@container":"@set"},"authentication":{"@id":"sec:authenticationMethod","@type":"@id","@container":"@set"}}},"proofValue":"sec:proofValue","verificationMethod":{"@id":"sec:verificationMethod","@type":"@id"}}},"EcdsaSecp256r1Signature2019":{"@id":"https://w3id.org/security#EcdsaSecp256r1Signature2019","@context":{"@version":1.1,"@protected":true,"id":"@id","type":"@type","sec":"https://w3id.org/security#","xsd":"http://www.w3.org/2001/XMLSchema#","challenge":"sec:challenge","created":{"@id":"http://purl.org/dc/terms/created","@type":"xsd:dateTime"},"domain":"sec:domain","expires":{"@id":"sec:expiration","@type":"xsd:dateTime"},"jws":"sec:jws","nonce":"sec:nonce","proofPurpose":{"@id":"sec:proofPurpose","@type":"@vocab","@context":{"@version":1.1,"@protected":true,"id":"@id","type":"@type","sec":"https://w3id.org/security#","assertionMethod":{"@id":"sec:assertionMethod","@type":"@id","@container":"@set"},"authentication":{"@id":"sec:authenticationMethod","@type":"@id","@container":"@set"}}},"proofValue":"sec:proofValue","verificationMethod":{"@id":"sec:verificationMethod","@type":"@id"}}},"Ed25519Signature2018":{"@id":"https://w3id.org/security#Ed25519Signature2018","@context":{"@version":1.1,"@protected":true,"id":"@id","type":"@type","sec":"https://w3id.org/security#","xsd":"http://www.w3.org/2001/XMLSchema#","challenge":"sec:challenge","created":{"@id":"http://purl.org/dc/terms/created","@type":"xsd:dateTime"},"domain":"sec:domain","expires":{"@id":"sec:expiration","@type":"xsd:dateTime"},"jws":"sec:jws","nonce":"sec:nonce","proofPurpose":{"@id":"sec:proofPurpose","@type":"@vocab","@context":{"@version":1.1,"@protected":true,"id":"@id","type":"@type","sec":"https://w3id.org/security#","assertionMethod":{"@id":"sec:assertionMethod","@type":"@id","@container":"@set"},"authentication":{"@id":"sec:authenticationMethod","@type":"@id","@container":"@set"}}},"proofValue":"sec:proofValue","verificationMethod":{"@id":"sec:verificationMethod","@type":"@id"}}},"RsaSignature2018":{"@id":"https://w3id.org/security#RsaSignature2018","@context":{"@version":1.1,"@protected":true,"challenge":"sec:challenge","created":{"@id":"http://purl.org/dc/terms/created","@type":"xsd:dateTime"},"domain":"sec:domain","expires":{"@id":"sec:expiration","@type":"xsd:dateTime"},"jws":"sec:jws","nonce":"sec:nonce","proofPurpose":{"@id":"sec:proofPurpose","@type":"@vocab","@context":{"@version":1.1,"@protected":true,"id":"@id","type":"@type","sec":"https://w3id.org/security#","assertionMethod":{"@id":"sec:assertionMethod","@type":"@id","@container":"@set"},"authentication":{"@id":"sec:authenticationMethod","@type":"@id","@container":"@set"}}},"proofValue":"sec:proofValue","verificationMethod":{"@id":"sec:verificationMethod","@type":"@id"}}},"proof":{"@id":"https://w3id.org/security#proof","@type":"@id","@container":"@graph"}}}')},83172:e=>{e.exports=JSON.parse('{"@context":[{"@version":1.1,"@protected":true,"LinkedDomains":"https://identity.foundation/.well-known/resources/did-configuration/#LinkedDomains","DomainLinkageCredential":"https://identity.foundation/.well-known/resources/did-configuration/#DomainLinkageCredential","origin":"https://identity.foundation/.well-known/resources/did-configuration/#origin","linked_dids":"https://identity.foundation/.well-known/resources/did-configuration/#linked_dids"}]}')},30053:e=>{e.exports=JSON.parse('{"@context":{"@protected":true,"id":"@id","type":"@type","alsoKnownAs":{"@id":"https://www.w3.org/ns/activitystreams#alsoKnownAs","@type":"@id"},"assertionMethod":{"@id":"https://w3id.org/security#assertionMethod","@type":"@id","@container":"@set"},"authentication":{"@id":"https://w3id.org/security#authenticationMethod","@type":"@id","@container":"@set"},"capabilityDelegation":{"@id":"https://w3id.org/security#capabilityDelegationMethod","@type":"@id","@container":"@set"},"capabilityInvocation":{"@id":"https://w3id.org/security#capabilityInvocationMethod","@type":"@id","@container":"@set"},"controller":{"@id":"https://w3id.org/security#controller","@type":"@id"},"keyAgreement":{"@id":"https://w3id.org/security#keyAgreementMethod","@type":"@id","@container":"@set"},"service":{"@id":"https://www.w3.org/ns/did#service","@type":"@id","@context":{"@protected":true,"id":"@id","type":"@type","serviceEndpoint":{"@id":"https://www.w3.org/ns/did#serviceEndpoint","@type":"@id"}}},"verificationMethod":{"@id":"https://w3id.org/security#verificationMethod","@type":"@id"}}}')},28850:e=>{e.exports=JSON.parse('{"@context":{"id":"@id","type":"@type","@protected":true,"proof":{"@id":"https://w3id.org/security#proof","@type":"@id","@container":"@graph"},"Ed25519VerificationKey2020":{"@id":"https://w3id.org/security#Ed25519VerificationKey2020","@context":{"@protected":true,"id":"@id","type":"@type","controller":{"@id":"https://w3id.org/security#controller","@type":"@id"},"revoked":{"@id":"https://w3id.org/security#revoked","@type":"http://www.w3.org/2001/XMLSchema#dateTime"},"publicKeyMultibase":{"@id":"https://w3id.org/security#publicKeyMultibase","@type":"https://w3id.org/security#multibase"},"blockchainAccountId":{"@id":"https://w3c.github.io/vc-data-integrity/vocab/security/vocabulary.jsonld#blockchainAccountId","@type":"https://w3id.org/security#blockchainAccountId"}}},"Ed25519Signature2020":{"@id":"https://w3id.org/security#Ed25519Signature2020","@context":{"@protected":true,"id":"@id","type":"@type","challenge":"https://w3id.org/security#challenge","created":{"@id":"http://purl.org/dc/terms/created","@type":"http://www.w3.org/2001/XMLSchema#dateTime"},"domain":"https://w3id.org/security#domain","expires":{"@id":"https://w3id.org/security#expiration","@type":"http://www.w3.org/2001/XMLSchema#dateTime"},"nonce":"https://w3id.org/security#nonce","proofPurpose":{"@id":"https://w3id.org/security#proofPurpose","@type":"@vocab","@context":{"@protected":true,"id":"@id","type":"@type","assertionMethod":{"@id":"https://w3id.org/security#assertionMethod","@type":"@id","@container":"@set"},"authentication":{"@id":"https://w3id.org/security#authenticationMethod","@type":"@id","@container":"@set"},"capabilityInvocation":{"@id":"https://w3id.org/security#capabilityInvocationMethod","@type":"@id","@container":"@set"},"capabilityDelegation":{"@id":"https://w3id.org/security#capabilityDelegationMethod","@type":"@id","@container":"@set"},"keyAgreement":{"@id":"https://w3id.org/security#keyAgreementMethod","@type":"@id","@container":"@set"}}},"proofValue":{"@id":"https://w3id.org/security#proofValue","@type":"https://w3id.org/security#multibase"},"verificationMethod":{"@id":"https://w3id.org/security#verificationMethod","@type":"@id"}}}}}')},4995:e=>{e.exports=JSON.parse('{"@context":{"@protected":true,"hypersign-vocab":"urn:uuid:13fe9318-bb82-4d95-8bf5-8e7fdf8b2026#","HypersignCredentialStatus2023":{"@id":"hypersign-vocab:HypersignCredentialStatus2023","@context":{"@protected":true,"id":"@id","type":"@type"}}}}')},47835:e=>{e.exports=JSON.parse('{"@context":{"id":"@id","type":"@type","@protected":true,"proof":{"@id":"https://w3id.org/security#proof","@type":"@id","@container":"@graph"},"EcdsaSecp256k1RecoveryMethod2020":{"@id":"https://identity.foundation/EcdsaSecp256k1RecoverySignature2020#EcdsaSecp256k1RecoveryMethod2020","@context":{"@protected":true,"id":"@id","type":"@type","controller":{"@id":"https://w3id.org/security#controller","@type":"@id"},"blockchainAccountId":"https://w3id.org/security#blockchainAccountId","publicKeyJwk":{"@id":"https://w3id.org/security#publicKeyJwk","@type":"@json"}}},"EcdsaSecp256k1RecoverySignature2020":{"@id":"https://identity.foundation/EcdsaSecp256k1RecoverySignature2020#EcdsaSecp256k1RecoverySignature2020","@context":{"@protected":true,"id":"@id","type":"@type","challenge":"https://w3id.org/security#challenge","created":{"@id":"http://purl.org/dc/terms/created","@type":"http://www.w3.org/2001/XMLSchema#dateTime"},"domain":"https://w3id.org/security#domain","expires":{"@id":"https://w3id.org/security#expiration","@type":"http://www.w3.org/2001/XMLSchema#dateTime"},"jws":"https://w3id.org/security#jws","nonce":"https://w3id.org/security#nonce","proofPurpose":{"@id":"https://w3id.org/security#proofPurpose","@type":"@vocab","@context":{"@protected":true,"id":"@id","type":"@type","assertionMethod":{"@id":"https://w3id.org/security#assertionMethod","@type":"@id","@container":"@set"},"authentication":{"@id":"https://w3id.org/security#authenticationMethod","@type":"@id","@container":"@set"},"capabilityInvocation":{"@id":"https://w3id.org/security#capabilityInvocationMethod","@type":"@id","@container":"@set"},"capabilityDelegation":{"@id":"https://w3id.org/security#capabilityDelegationMethod","@type":"@id","@container":"@set"},"keyAgreement":{"@id":"https://w3id.org/security#keyAgreementMethod","@type":"@id","@container":"@set"}}},"verificationMethod":{"@id":"https://w3id.org/security#verificationMethod","@type":"@id"}}}}}')},59353:e=>{e.exports=JSON.parse('{"@context":{"type":"@type","id":"@id","HTML":{"@id":"rdf:HTML"},"@vocab":"http://schema.org/","csvw":"http://www.w3.org/ns/csvw#","dc":"http://purl.org/dc/elements/1.1/","dcat":"http://www.w3.org/ns/dcat#","dcmitype":"http://purl.org/dc/dcmitype/","dcterms":"http://purl.org/dc/terms/","dcam":"http://purl.org/dc/dcam/","doap":"http://usefulinc.com/ns/doap#","foaf":"http://xmlns.com/foaf/0.1/","odrl":"http://www.w3.org/ns/odrl/2/","org":"http://www.w3.org/ns/org#","owl":"http://www.w3.org/2002/07/owl#","prof":"http://www.w3.org/ns/dx/prof/","prov":"http://www.w3.org/ns/prov#","qb":"http://purl.org/linked-data/cube#","rdf":"http://www.w3.org/1999/02/22-rdf-syntax-ns#","rdfs":"http://www.w3.org/2000/01/rdf-schema#","schema":"http://schema.org/","sh":"http://www.w3.org/ns/shacl#","skos":"http://www.w3.org/2004/02/skos/core#","sosa":"http://www.w3.org/ns/sosa/","ssn":"http://www.w3.org/ns/ssn/","time":"http://www.w3.org/2006/time#","vann":"http://purl.org/vocab/vann/","void":"http://rdfs.org/ns/void#","xsd":"http://www.w3.org/2001/XMLSchema#","xml":"http://www.w3.org/XML/1998/namespace","dct":"http://purl.org/dc/terms/","dctype":"http://purl.org/dc/dcmitype/","3DModel":{"@id":"schema:3DModel"},"AMRadioChannel":{"@id":"schema:AMRadioChannel"},"APIReference":{"@id":"schema:APIReference"},"Abdomen":{"@id":"schema:Abdomen"},"AboutPage":{"@id":"schema:AboutPage"},"AcceptAction":{"@id":"schema:AcceptAction"},"Accommodation":{"@id":"schema:Accommodation"},"AccountingService":{"@id":"schema:AccountingService"},"AchieveAction":{"@id":"schema:AchieveAction"},"Action":{"@id":"schema:Action"},"ActionAccessSpecification":{"@id":"schema:ActionAccessSpecification"},"ActionStatusType":{"@id":"schema:ActionStatusType"},"ActivateAction":{"@id":"schema:ActivateAction"},"ActivationFee":{"@id":"schema:ActivationFee"},"ActiveActionStatus":{"@id":"schema:ActiveActionStatus"},"ActiveNotRecruiting":{"@id":"schema:ActiveNotRecruiting"},"AddAction":{"@id":"schema:AddAction"},"AdministrativeArea":{"@id":"schema:AdministrativeArea"},"AdultEntertainment":{"@id":"schema:AdultEntertainment"},"AdultOrientedEnumeration":{"@id":"schema:AdultOrientedEnumeration"},"AdvertiserContentArticle":{"@id":"schema:AdvertiserContentArticle"},"AerobicActivity":{"@id":"schema:AerobicActivity"},"AggregateOffer":{"@id":"schema:AggregateOffer"},"AggregateRating":{"@id":"schema:AggregateRating"},"AgreeAction":{"@id":"schema:AgreeAction"},"Airline":{"@id":"schema:Airline"},"Airport":{"@id":"schema:Airport"},"AlbumRelease":{"@id":"schema:AlbumRelease"},"AlcoholConsideration":{"@id":"schema:AlcoholConsideration"},"AlignmentObject":{"@id":"schema:AlignmentObject"},"AllWheelDriveConfiguration":{"@id":"schema:AllWheelDriveConfiguration"},"AllergiesHealthAspect":{"@id":"schema:AllergiesHealthAspect"},"AllocateAction":{"@id":"schema:AllocateAction"},"AmpStory":{"@id":"schema:AmpStory"},"AmusementPark":{"@id":"schema:AmusementPark"},"AnaerobicActivity":{"@id":"schema:AnaerobicActivity"},"AnalysisNewsArticle":{"@id":"schema:AnalysisNewsArticle"},"AnatomicalStructure":{"@id":"schema:AnatomicalStructure"},"AnatomicalSystem":{"@id":"schema:AnatomicalSystem"},"AndroidPlatform":{"@id":"schema:AndroidPlatform"},"Anesthesia":{"@id":"schema:Anesthesia"},"AnimalShelter":{"@id":"schema:AnimalShelter"},"Answer":{"@id":"schema:Answer"},"Apartment":{"@id":"schema:Apartment"},"ApartmentComplex":{"@id":"schema:ApartmentComplex"},"Appearance":{"@id":"schema:Appearance"},"AppendAction":{"@id":"schema:AppendAction"},"ApplyAction":{"@id":"schema:ApplyAction"},"ApprovedIndication":{"@id":"schema:ApprovedIndication"},"Aquarium":{"@id":"schema:Aquarium"},"ArchiveComponent":{"@id":"schema:ArchiveComponent"},"ArchiveOrganization":{"@id":"schema:ArchiveOrganization"},"ArriveAction":{"@id":"schema:ArriveAction"},"ArtGallery":{"@id":"schema:ArtGallery"},"Artery":{"@id":"schema:Artery"},"Article":{"@id":"schema:Article"},"AskAction":{"@id":"schema:AskAction"},"AskPublicNewsArticle":{"@id":"schema:AskPublicNewsArticle"},"AssessAction":{"@id":"schema:AssessAction"},"AssignAction":{"@id":"schema:AssignAction"},"Atlas":{"@id":"schema:Atlas"},"Attorney":{"@id":"schema:Attorney"},"Audience":{"@id":"schema:Audience"},"AudioObject":{"@id":"schema:AudioObject"},"AudioObjectSnapshot":{"@id":"schema:AudioObjectSnapshot"},"Audiobook":{"@id":"schema:Audiobook"},"AudiobookFormat":{"@id":"schema:AudiobookFormat"},"AuthoritativeLegalValue":{"@id":"schema:AuthoritativeLegalValue"},"AuthorizeAction":{"@id":"schema:AuthorizeAction"},"AutoBodyShop":{"@id":"schema:AutoBodyShop"},"AutoDealer":{"@id":"schema:AutoDealer"},"AutoPartsStore":{"@id":"schema:AutoPartsStore"},"AutoRental":{"@id":"schema:AutoRental"},"AutoRepair":{"@id":"schema:AutoRepair"},"AutoWash":{"@id":"schema:AutoWash"},"AutomatedTeller":{"@id":"schema:AutomatedTeller"},"AutomotiveBusiness":{"@id":"schema:AutomotiveBusiness"},"Ayurvedic":{"@id":"schema:Ayurvedic"},"BackOrder":{"@id":"schema:BackOrder"},"BackgroundNewsArticle":{"@id":"schema:BackgroundNewsArticle"},"Bacteria":{"@id":"schema:Bacteria"},"Bakery":{"@id":"schema:Bakery"},"Balance":{"@id":"schema:Balance"},"BankAccount":{"@id":"schema:BankAccount"},"BankOrCreditUnion":{"@id":"schema:BankOrCreditUnion"},"BarOrPub":{"@id":"schema:BarOrPub"},"Barcode":{"@id":"schema:Barcode"},"BasicIncome":{"@id":"schema:BasicIncome"},"Beach":{"@id":"schema:Beach"},"BeautySalon":{"@id":"schema:BeautySalon"},"BedAndBreakfast":{"@id":"schema:BedAndBreakfast"},"BedDetails":{"@id":"schema:BedDetails"},"BedType":{"@id":"schema:BedType"},"BefriendAction":{"@id":"schema:BefriendAction"},"BenefitsHealthAspect":{"@id":"schema:BenefitsHealthAspect"},"BikeStore":{"@id":"schema:BikeStore"},"BioChemEntity":{"@id":"schema:BioChemEntity"},"Blog":{"@id":"schema:Blog"},"BlogPosting":{"@id":"schema:BlogPosting"},"BloodTest":{"@id":"schema:BloodTest"},"BoardingPolicyType":{"@id":"schema:BoardingPolicyType"},"BoatReservation":{"@id":"schema:BoatReservation"},"BoatTerminal":{"@id":"schema:BoatTerminal"},"BoatTrip":{"@id":"schema:BoatTrip"},"BodyMeasurementArm":{"@id":"schema:BodyMeasurementArm"},"BodyMeasurementBust":{"@id":"schema:BodyMeasurementBust"},"BodyMeasurementChest":{"@id":"schema:BodyMeasurementChest"},"BodyMeasurementFoot":{"@id":"schema:BodyMeasurementFoot"},"BodyMeasurementHand":{"@id":"schema:BodyMeasurementHand"},"BodyMeasurementHead":{"@id":"schema:BodyMeasurementHead"},"BodyMeasurementHeight":{"@id":"schema:BodyMeasurementHeight"},"BodyMeasurementHips":{"@id":"schema:BodyMeasurementHips"},"BodyMeasurementInsideLeg":{"@id":"schema:BodyMeasurementInsideLeg"},"BodyMeasurementNeck":{"@id":"schema:BodyMeasurementNeck"},"BodyMeasurementTypeEnumeration":{"@id":"schema:BodyMeasurementTypeEnumeration"},"BodyMeasurementUnderbust":{"@id":"schema:BodyMeasurementUnderbust"},"BodyMeasurementWaist":{"@id":"schema:BodyMeasurementWaist"},"BodyMeasurementWeight":{"@id":"schema:BodyMeasurementWeight"},"BodyOfWater":{"@id":"schema:BodyOfWater"},"Bone":{"@id":"schema:Bone"},"Book":{"@id":"schema:Book"},"BookFormatType":{"@id":"schema:BookFormatType"},"BookSeries":{"@id":"schema:BookSeries"},"BookStore":{"@id":"schema:BookStore"},"BookmarkAction":{"@id":"schema:BookmarkAction"},"Boolean":{"@id":"schema:Boolean"},"BorrowAction":{"@id":"schema:BorrowAction"},"BowlingAlley":{"@id":"schema:BowlingAlley"},"BrainStructure":{"@id":"schema:BrainStructure"},"Brand":{"@id":"schema:Brand"},"BreadcrumbList":{"@id":"schema:BreadcrumbList"},"Brewery":{"@id":"schema:Brewery"},"Bridge":{"@id":"schema:Bridge"},"BroadcastChannel":{"@id":"schema:BroadcastChannel"},"BroadcastEvent":{"@id":"schema:BroadcastEvent"},"BroadcastFrequencySpecification":{"@id":"schema:BroadcastFrequencySpecification"},"BroadcastRelease":{"@id":"schema:BroadcastRelease"},"BroadcastService":{"@id":"schema:BroadcastService"},"BrokerageAccount":{"@id":"schema:BrokerageAccount"},"BuddhistTemple":{"@id":"schema:BuddhistTemple"},"BusOrCoach":{"@id":"schema:BusOrCoach"},"BusReservation":{"@id":"schema:BusReservation"},"BusStation":{"@id":"schema:BusStation"},"BusStop":{"@id":"schema:BusStop"},"BusTrip":{"@id":"schema:BusTrip"},"BusinessAudience":{"@id":"schema:BusinessAudience"},"BusinessEntityType":{"@id":"schema:BusinessEntityType"},"BusinessEvent":{"@id":"schema:BusinessEvent"},"BusinessFunction":{"@id":"schema:BusinessFunction"},"BusinessSupport":{"@id":"schema:BusinessSupport"},"BuyAction":{"@id":"schema:BuyAction"},"CDCPMDRecord":{"@id":"schema:CDCPMDRecord"},"CDFormat":{"@id":"schema:CDFormat"},"CT":{"@id":"schema:CT"},"CableOrSatelliteService":{"@id":"schema:CableOrSatelliteService"},"CafeOrCoffeeShop":{"@id":"schema:CafeOrCoffeeShop"},"Campground":{"@id":"schema:Campground"},"CampingPitch":{"@id":"schema:CampingPitch"},"Canal":{"@id":"schema:Canal"},"CancelAction":{"@id":"schema:CancelAction"},"Car":{"@id":"schema:Car"},"CarUsageType":{"@id":"schema:CarUsageType"},"Cardiovascular":{"@id":"schema:Cardiovascular"},"CardiovascularExam":{"@id":"schema:CardiovascularExam"},"CaseSeries":{"@id":"schema:CaseSeries"},"Casino":{"@id":"schema:Casino"},"CassetteFormat":{"@id":"schema:CassetteFormat"},"CategoryCode":{"@id":"schema:CategoryCode"},"CategoryCodeSet":{"@id":"schema:CategoryCodeSet"},"CatholicChurch":{"@id":"schema:CatholicChurch"},"CausesHealthAspect":{"@id":"schema:CausesHealthAspect"},"Cemetery":{"@id":"schema:Cemetery"},"Chapter":{"@id":"schema:Chapter"},"CharitableIncorporatedOrganization":{"@id":"schema:CharitableIncorporatedOrganization"},"CheckAction":{"@id":"schema:CheckAction"},"CheckInAction":{"@id":"schema:CheckInAction"},"CheckOutAction":{"@id":"schema:CheckOutAction"},"CheckoutPage":{"@id":"schema:CheckoutPage"},"ChemicalSubstance":{"@id":"schema:ChemicalSubstance"},"ChildCare":{"@id":"schema:ChildCare"},"ChildrensEvent":{"@id":"schema:ChildrensEvent"},"Chiropractic":{"@id":"schema:Chiropractic"},"ChooseAction":{"@id":"schema:ChooseAction"},"Church":{"@id":"schema:Church"},"City":{"@id":"schema:City"},"CityHall":{"@id":"schema:CityHall"},"CivicStructure":{"@id":"schema:CivicStructure"},"Claim":{"@id":"schema:Claim"},"ClaimReview":{"@id":"schema:ClaimReview"},"Class":{"@id":"schema:Class"},"CleaningFee":{"@id":"schema:CleaningFee"},"Clinician":{"@id":"schema:Clinician"},"Clip":{"@id":"schema:Clip"},"ClothingStore":{"@id":"schema:ClothingStore"},"CoOp":{"@id":"schema:CoOp"},"Code":{"@id":"schema:Code"},"CohortStudy":{"@id":"schema:CohortStudy"},"Collection":{"@id":"schema:Collection"},"CollectionPage":{"@id":"schema:CollectionPage"},"CollegeOrUniversity":{"@id":"schema:CollegeOrUniversity"},"ComedyClub":{"@id":"schema:ComedyClub"},"ComedyEvent":{"@id":"schema:ComedyEvent"},"ComicCoverArt":{"@id":"schema:ComicCoverArt"},"ComicIssue":{"@id":"schema:ComicIssue"},"ComicSeries":{"@id":"schema:ComicSeries"},"ComicStory":{"@id":"schema:ComicStory"},"Comment":{"@id":"schema:Comment"},"CommentAction":{"@id":"schema:CommentAction"},"CommentPermission":{"@id":"schema:CommentPermission"},"CommunicateAction":{"@id":"schema:CommunicateAction"},"CommunityHealth":{"@id":"schema:CommunityHealth"},"CompilationAlbum":{"@id":"schema:CompilationAlbum"},"CompleteDataFeed":{"@id":"schema:CompleteDataFeed"},"Completed":{"@id":"schema:Completed"},"CompletedActionStatus":{"@id":"schema:CompletedActionStatus"},"CompoundPriceSpecification":{"@id":"schema:CompoundPriceSpecification"},"ComputerLanguage":{"@id":"schema:ComputerLanguage"},"ComputerStore":{"@id":"schema:ComputerStore"},"ConfirmAction":{"@id":"schema:ConfirmAction"},"Consortium":{"@id":"schema:Consortium"},"ConstraintNode":{"@id":"schema:ConstraintNode"},"ConsumeAction":{"@id":"schema:ConsumeAction"},"ContactPage":{"@id":"schema:ContactPage"},"ContactPoint":{"@id":"schema:ContactPoint"},"ContactPointOption":{"@id":"schema:ContactPointOption"},"ContagiousnessHealthAspect":{"@id":"schema:ContagiousnessHealthAspect"},"Continent":{"@id":"schema:Continent"},"ControlAction":{"@id":"schema:ControlAction"},"ConvenienceStore":{"@id":"schema:ConvenienceStore"},"Conversation":{"@id":"schema:Conversation"},"CookAction":{"@id":"schema:CookAction"},"Corporation":{"@id":"schema:Corporation"},"CorrectionComment":{"@id":"schema:CorrectionComment"},"Country":{"@id":"schema:Country"},"Course":{"@id":"schema:Course"},"CourseInstance":{"@id":"schema:CourseInstance"},"Courthouse":{"@id":"schema:Courthouse"},"CoverArt":{"@id":"schema:CoverArt"},"CovidTestingFacility":{"@id":"schema:CovidTestingFacility"},"CreateAction":{"@id":"schema:CreateAction"},"CreativeWork":{"@id":"schema:CreativeWork"},"CreativeWorkSeason":{"@id":"schema:CreativeWorkSeason"},"CreativeWorkSeries":{"@id":"schema:CreativeWorkSeries"},"CreditCard":{"@id":"schema:CreditCard"},"Crematorium":{"@id":"schema:Crematorium"},"CriticReview":{"@id":"schema:CriticReview"},"CrossSectional":{"@id":"schema:CrossSectional"},"CssSelectorType":{"@id":"schema:CssSelectorType"},"CurrencyConversionService":{"@id":"schema:CurrencyConversionService"},"DDxElement":{"@id":"schema:DDxElement"},"DJMixAlbum":{"@id":"schema:DJMixAlbum"},"DVDFormat":{"@id":"schema:DVDFormat"},"DamagedCondition":{"@id":"schema:DamagedCondition"},"DanceEvent":{"@id":"schema:DanceEvent"},"DanceGroup":{"@id":"schema:DanceGroup"},"DangerousGoodConsideration":{"@id":"schema:DangerousGoodConsideration"},"DataCatalog":{"@id":"schema:DataCatalog"},"DataDownload":{"@id":"schema:DataDownload"},"DataFeed":{"@id":"schema:DataFeed"},"DataFeedItem":{"@id":"schema:DataFeedItem"},"DataType":{"@id":"schema:DataType"},"Dataset":{"@id":"schema:Dataset"},"Date":{"@id":"schema:Date"},"DateTime":{"@id":"schema:DateTime"},"DatedMoneySpecification":{"@id":"schema:DatedMoneySpecification"},"DayOfWeek":{"@id":"schema:DayOfWeek"},"DaySpa":{"@id":"schema:DaySpa"},"DeactivateAction":{"@id":"schema:DeactivateAction"},"DecontextualizedContent":{"@id":"schema:DecontextualizedContent"},"DefenceEstablishment":{"@id":"schema:DefenceEstablishment"},"DefinedRegion":{"@id":"schema:DefinedRegion"},"DefinedTerm":{"@id":"schema:DefinedTerm"},"DefinedTermSet":{"@id":"schema:DefinedTermSet"},"DefinitiveLegalValue":{"@id":"schema:DefinitiveLegalValue"},"DeleteAction":{"@id":"schema:DeleteAction"},"DeliveryChargeSpecification":{"@id":"schema:DeliveryChargeSpecification"},"DeliveryEvent":{"@id":"schema:DeliveryEvent"},"DeliveryMethod":{"@id":"schema:DeliveryMethod"},"DeliveryTimeSettings":{"@id":"schema:DeliveryTimeSettings"},"Demand":{"@id":"schema:Demand"},"DemoAlbum":{"@id":"schema:DemoAlbum"},"DemoGameAvailability":{"@id":"schema:DemoGameAvailability"},"Dentist":{"@id":"schema:Dentist"},"Dentistry":{"@id":"schema:Dentistry"},"DepartAction":{"@id":"schema:DepartAction"},"DepartmentStore":{"@id":"schema:DepartmentStore"},"DepositAccount":{"@id":"schema:DepositAccount"},"Dermatologic":{"@id":"schema:Dermatologic"},"Dermatology":{"@id":"schema:Dermatology"},"DesktopWebPlatform":{"@id":"schema:DesktopWebPlatform"},"DiabeticDiet":{"@id":"schema:DiabeticDiet"},"Diagnostic":{"@id":"schema:Diagnostic"},"DiagnosticLab":{"@id":"schema:DiagnosticLab"},"DiagnosticProcedure":{"@id":"schema:DiagnosticProcedure"},"Diet":{"@id":"schema:Diet"},"DietNutrition":{"@id":"schema:DietNutrition"},"DietarySupplement":{"@id":"schema:DietarySupplement"},"DigitalAudioTapeFormat":{"@id":"schema:DigitalAudioTapeFormat"},"DigitalDocument":{"@id":"schema:DigitalDocument"},"DigitalDocumentPermission":{"@id":"schema:DigitalDocumentPermission"},"DigitalDocumentPermissionType":{"@id":"schema:DigitalDocumentPermissionType"},"DigitalFormat":{"@id":"schema:DigitalFormat"},"DigitalPlatformEnumeration":{"@id":"schema:DigitalPlatformEnumeration"},"DisabilitySupport":{"@id":"schema:DisabilitySupport"},"DisagreeAction":{"@id":"schema:DisagreeAction"},"Discontinued":{"@id":"schema:Discontinued"},"DiscoverAction":{"@id":"schema:DiscoverAction"},"DiscussionForumPosting":{"@id":"schema:DiscussionForumPosting"},"DislikeAction":{"@id":"schema:DislikeAction"},"Distance":{"@id":"schema:Distance"},"DistanceFee":{"@id":"schema:DistanceFee"},"Distillery":{"@id":"schema:Distillery"},"DonateAction":{"@id":"schema:DonateAction"},"DoseSchedule":{"@id":"schema:DoseSchedule"},"DoubleBlindedTrial":{"@id":"schema:DoubleBlindedTrial"},"DownloadAction":{"@id":"schema:DownloadAction"},"Downpayment":{"@id":"schema:Downpayment"},"DrawAction":{"@id":"schema:DrawAction"},"Drawing":{"@id":"schema:Drawing"},"DrinkAction":{"@id":"schema:DrinkAction"},"DriveWheelConfigurationValue":{"@id":"schema:DriveWheelConfigurationValue"},"DrivingSchoolVehicleUsage":{"@id":"schema:DrivingSchoolVehicleUsage"},"Drug":{"@id":"schema:Drug"},"DrugClass":{"@id":"schema:DrugClass"},"DrugCost":{"@id":"schema:DrugCost"},"DrugCostCategory":{"@id":"schema:DrugCostCategory"},"DrugLegalStatus":{"@id":"schema:DrugLegalStatus"},"DrugPregnancyCategory":{"@id":"schema:DrugPregnancyCategory"},"DrugPrescriptionStatus":{"@id":"schema:DrugPrescriptionStatus"},"DrugStrength":{"@id":"schema:DrugStrength"},"DryCleaningOrLaundry":{"@id":"schema:DryCleaningOrLaundry"},"Duration":{"@id":"schema:Duration"},"EBook":{"@id":"schema:EBook"},"EPRelease":{"@id":"schema:EPRelease"},"EUEnergyEfficiencyCategoryA":{"@id":"schema:EUEnergyEfficiencyCategoryA"},"EUEnergyEfficiencyCategoryA1Plus":{"@id":"schema:EUEnergyEfficiencyCategoryA1Plus"},"EUEnergyEfficiencyCategoryA2Plus":{"@id":"schema:EUEnergyEfficiencyCategoryA2Plus"},"EUEnergyEfficiencyCategoryA3Plus":{"@id":"schema:EUEnergyEfficiencyCategoryA3Plus"},"EUEnergyEfficiencyCategoryB":{"@id":"schema:EUEnergyEfficiencyCategoryB"},"EUEnergyEfficiencyCategoryC":{"@id":"schema:EUEnergyEfficiencyCategoryC"},"EUEnergyEfficiencyCategoryD":{"@id":"schema:EUEnergyEfficiencyCategoryD"},"EUEnergyEfficiencyCategoryE":{"@id":"schema:EUEnergyEfficiencyCategoryE"},"EUEnergyEfficiencyCategoryF":{"@id":"schema:EUEnergyEfficiencyCategoryF"},"EUEnergyEfficiencyCategoryG":{"@id":"schema:EUEnergyEfficiencyCategoryG"},"EUEnergyEfficiencyEnumeration":{"@id":"schema:EUEnergyEfficiencyEnumeration"},"Ear":{"@id":"schema:Ear"},"EatAction":{"@id":"schema:EatAction"},"EditedOrCroppedContent":{"@id":"schema:EditedOrCroppedContent"},"EducationEvent":{"@id":"schema:EducationEvent"},"EducationalAudience":{"@id":"schema:EducationalAudience"},"EducationalOccupationalCredential":{"@id":"schema:EducationalOccupationalCredential"},"EducationalOccupationalProgram":{"@id":"schema:EducationalOccupationalProgram"},"EducationalOrganization":{"@id":"schema:EducationalOrganization"},"EffectivenessHealthAspect":{"@id":"schema:EffectivenessHealthAspect"},"Electrician":{"@id":"schema:Electrician"},"ElectronicsStore":{"@id":"schema:ElectronicsStore"},"ElementarySchool":{"@id":"schema:ElementarySchool"},"EmailMessage":{"@id":"schema:EmailMessage"},"Embassy":{"@id":"schema:Embassy"},"Emergency":{"@id":"schema:Emergency"},"EmergencyService":{"@id":"schema:EmergencyService"},"EmployeeRole":{"@id":"schema:EmployeeRole"},"EmployerAggregateRating":{"@id":"schema:EmployerAggregateRating"},"EmployerReview":{"@id":"schema:EmployerReview"},"EmploymentAgency":{"@id":"schema:EmploymentAgency"},"Endocrine":{"@id":"schema:Endocrine"},"EndorseAction":{"@id":"schema:EndorseAction"},"EndorsementRating":{"@id":"schema:EndorsementRating"},"Energy":{"@id":"schema:Energy"},"EnergyConsumptionDetails":{"@id":"schema:EnergyConsumptionDetails"},"EnergyEfficiencyEnumeration":{"@id":"schema:EnergyEfficiencyEnumeration"},"EnergyStarCertified":{"@id":"schema:EnergyStarCertified"},"EnergyStarEnergyEfficiencyEnumeration":{"@id":"schema:EnergyStarEnergyEfficiencyEnumeration"},"EngineSpecification":{"@id":"schema:EngineSpecification"},"EnrollingByInvitation":{"@id":"schema:EnrollingByInvitation"},"EntertainmentBusiness":{"@id":"schema:EntertainmentBusiness"},"EntryPoint":{"@id":"schema:EntryPoint"},"Enumeration":{"@id":"schema:Enumeration"},"Episode":{"@id":"schema:Episode"},"Event":{"@id":"schema:Event"},"EventAttendanceModeEnumeration":{"@id":"schema:EventAttendanceModeEnumeration"},"EventCancelled":{"@id":"schema:EventCancelled"},"EventMovedOnline":{"@id":"schema:EventMovedOnline"},"EventPostponed":{"@id":"schema:EventPostponed"},"EventRescheduled":{"@id":"schema:EventRescheduled"},"EventReservation":{"@id":"schema:EventReservation"},"EventScheduled":{"@id":"schema:EventScheduled"},"EventSeries":{"@id":"schema:EventSeries"},"EventStatusType":{"@id":"schema:EventStatusType"},"EventVenue":{"@id":"schema:EventVenue"},"EvidenceLevelA":{"@id":"schema:EvidenceLevelA"},"EvidenceLevelB":{"@id":"schema:EvidenceLevelB"},"EvidenceLevelC":{"@id":"schema:EvidenceLevelC"},"ExampleMeasurementMethodEnum":{"@id":"schema:ExampleMeasurementMethodEnum"},"ExchangeRateSpecification":{"@id":"schema:ExchangeRateSpecification"},"ExchangeRefund":{"@id":"schema:ExchangeRefund"},"ExerciseAction":{"@id":"schema:ExerciseAction"},"ExerciseGym":{"@id":"schema:ExerciseGym"},"ExercisePlan":{"@id":"schema:ExercisePlan"},"ExhibitionEvent":{"@id":"schema:ExhibitionEvent"},"Eye":{"@id":"schema:Eye"},"FAQPage":{"@id":"schema:FAQPage"},"FDAcategoryA":{"@id":"schema:FDAcategoryA"},"FDAcategoryB":{"@id":"schema:FDAcategoryB"},"FDAcategoryC":{"@id":"schema:FDAcategoryC"},"FDAcategoryD":{"@id":"schema:FDAcategoryD"},"FDAcategoryX":{"@id":"schema:FDAcategoryX"},"FDAnotEvaluated":{"@id":"schema:FDAnotEvaluated"},"FMRadioChannel":{"@id":"schema:FMRadioChannel"},"FailedActionStatus":{"@id":"schema:FailedActionStatus"},"False":{"@id":"schema:False"},"FastFoodRestaurant":{"@id":"schema:FastFoodRestaurant"},"Female":{"@id":"schema:Female"},"Festival":{"@id":"schema:Festival"},"FilmAction":{"@id":"schema:FilmAction"},"FinancialProduct":{"@id":"schema:FinancialProduct"},"FinancialService":{"@id":"schema:FinancialService"},"FindAction":{"@id":"schema:FindAction"},"FireStation":{"@id":"schema:FireStation"},"Flexibility":{"@id":"schema:Flexibility"},"Flight":{"@id":"schema:Flight"},"FlightReservation":{"@id":"schema:FlightReservation"},"Float":{"@id":"schema:Float"},"FloorPlan":{"@id":"schema:FloorPlan"},"Florist":{"@id":"schema:Florist"},"FollowAction":{"@id":"schema:FollowAction"},"FoodEstablishment":{"@id":"schema:FoodEstablishment"},"FoodEstablishmentReservation":{"@id":"schema:FoodEstablishmentReservation"},"FoodEvent":{"@id":"schema:FoodEvent"},"FoodService":{"@id":"schema:FoodService"},"FourWheelDriveConfiguration":{"@id":"schema:FourWheelDriveConfiguration"},"FreeReturn":{"@id":"schema:FreeReturn"},"Friday":{"@id":"schema:Friday"},"FrontWheelDriveConfiguration":{"@id":"schema:FrontWheelDriveConfiguration"},"FullGameAvailability":{"@id":"schema:FullGameAvailability"},"FullRefund":{"@id":"schema:FullRefund"},"FundingAgency":{"@id":"schema:FundingAgency"},"FundingScheme":{"@id":"schema:FundingScheme"},"Fungus":{"@id":"schema:Fungus"},"FurnitureStore":{"@id":"schema:FurnitureStore"},"Game":{"@id":"schema:Game"},"GameAvailabilityEnumeration":{"@id":"schema:GameAvailabilityEnumeration"},"GamePlayMode":{"@id":"schema:GamePlayMode"},"GameServer":{"@id":"schema:GameServer"},"GameServerStatus":{"@id":"schema:GameServerStatus"},"GardenStore":{"@id":"schema:GardenStore"},"GasStation":{"@id":"schema:GasStation"},"Gastroenterologic":{"@id":"schema:Gastroenterologic"},"GatedResidenceCommunity":{"@id":"schema:GatedResidenceCommunity"},"GenderType":{"@id":"schema:GenderType"},"Gene":{"@id":"schema:Gene"},"GeneralContractor":{"@id":"schema:GeneralContractor"},"GenericWebPlatform":{"@id":"schema:GenericWebPlatform"},"Genetic":{"@id":"schema:Genetic"},"Genitourinary":{"@id":"schema:Genitourinary"},"GeoCircle":{"@id":"schema:GeoCircle"},"GeoCoordinates":{"@id":"schema:GeoCoordinates"},"GeoShape":{"@id":"schema:GeoShape"},"GeospatialGeometry":{"@id":"schema:GeospatialGeometry"},"Geriatric":{"@id":"schema:Geriatric"},"GettingAccessHealthAspect":{"@id":"schema:GettingAccessHealthAspect"},"GiveAction":{"@id":"schema:GiveAction"},"GlutenFreeDiet":{"@id":"schema:GlutenFreeDiet"},"GolfCourse":{"@id":"schema:GolfCourse"},"GovernmentBenefitsType":{"@id":"schema:GovernmentBenefitsType"},"GovernmentBuilding":{"@id":"schema:GovernmentBuilding"},"GovernmentOffice":{"@id":"schema:GovernmentOffice"},"GovernmentOrganization":{"@id":"schema:GovernmentOrganization"},"GovernmentPermit":{"@id":"schema:GovernmentPermit"},"GovernmentService":{"@id":"schema:GovernmentService"},"Grant":{"@id":"schema:Grant"},"GraphicNovel":{"@id":"schema:GraphicNovel"},"GroceryStore":{"@id":"schema:GroceryStore"},"GroupBoardingPolicy":{"@id":"schema:GroupBoardingPolicy"},"Guide":{"@id":"schema:Guide"},"Gynecologic":{"@id":"schema:Gynecologic"},"HVACBusiness":{"@id":"schema:HVACBusiness"},"Hackathon":{"@id":"schema:Hackathon"},"HairSalon":{"@id":"schema:HairSalon"},"HalalDiet":{"@id":"schema:HalalDiet"},"Hardcover":{"@id":"schema:Hardcover"},"HardwareStore":{"@id":"schema:HardwareStore"},"Head":{"@id":"schema:Head"},"HealthAndBeautyBusiness":{"@id":"schema:HealthAndBeautyBusiness"},"HealthAspectEnumeration":{"@id":"schema:HealthAspectEnumeration"},"HealthCare":{"@id":"schema:HealthCare"},"HealthClub":{"@id":"schema:HealthClub"},"HealthInsurancePlan":{"@id":"schema:HealthInsurancePlan"},"HealthPlanCostSharingSpecification":{"@id":"schema:HealthPlanCostSharingSpecification"},"HealthPlanFormulary":{"@id":"schema:HealthPlanFormulary"},"HealthPlanNetwork":{"@id":"schema:HealthPlanNetwork"},"HealthTopicContent":{"@id":"schema:HealthTopicContent"},"HealthcareConsideration":{"@id":"schema:HealthcareConsideration"},"HearingImpairedSupported":{"@id":"schema:HearingImpairedSupported"},"Hematologic":{"@id":"schema:Hematologic"},"HighSchool":{"@id":"schema:HighSchool"},"HinduDiet":{"@id":"schema:HinduDiet"},"HinduTemple":{"@id":"schema:HinduTemple"},"HobbyShop":{"@id":"schema:HobbyShop"},"HomeAndConstructionBusiness":{"@id":"schema:HomeAndConstructionBusiness"},"HomeGoodsStore":{"@id":"schema:HomeGoodsStore"},"Homeopathic":{"@id":"schema:Homeopathic"},"Hospital":{"@id":"schema:Hospital"},"Hostel":{"@id":"schema:Hostel"},"Hotel":{"@id":"schema:Hotel"},"HotelRoom":{"@id":"schema:HotelRoom"},"House":{"@id":"schema:House"},"HousePainter":{"@id":"schema:HousePainter"},"HowItWorksHealthAspect":{"@id":"schema:HowItWorksHealthAspect"},"HowOrWhereHealthAspect":{"@id":"schema:HowOrWhereHealthAspect"},"HowTo":{"@id":"schema:HowTo"},"HowToDirection":{"@id":"schema:HowToDirection"},"HowToItem":{"@id":"schema:HowToItem"},"HowToSection":{"@id":"schema:HowToSection"},"HowToStep":{"@id":"schema:HowToStep"},"HowToSupply":{"@id":"schema:HowToSupply"},"HowToTip":{"@id":"schema:HowToTip"},"HowToTool":{"@id":"schema:HowToTool"},"HyperToc":{"@id":"schema:HyperToc"},"HyperTocEntry":{"@id":"schema:HyperTocEntry"},"IOSPlatform":{"@id":"schema:IOSPlatform"},"IceCreamShop":{"@id":"schema:IceCreamShop"},"IgnoreAction":{"@id":"schema:IgnoreAction"},"ImageGallery":{"@id":"schema:ImageGallery"},"ImageObject":{"@id":"schema:ImageObject"},"ImageObjectSnapshot":{"@id":"schema:ImageObjectSnapshot"},"ImagingTest":{"@id":"schema:ImagingTest"},"InForce":{"@id":"schema:InForce"},"InStock":{"@id":"schema:InStock"},"InStoreOnly":{"@id":"schema:InStoreOnly"},"IndividualProduct":{"@id":"schema:IndividualProduct"},"Infectious":{"@id":"schema:Infectious"},"InfectiousAgentClass":{"@id":"schema:InfectiousAgentClass"},"InfectiousDisease":{"@id":"schema:InfectiousDisease"},"InformAction":{"@id":"schema:InformAction"},"IngredientsHealthAspect":{"@id":"schema:IngredientsHealthAspect"},"InsertAction":{"@id":"schema:InsertAction"},"InstallAction":{"@id":"schema:InstallAction"},"Installment":{"@id":"schema:Installment"},"InsuranceAgency":{"@id":"schema:InsuranceAgency"},"Intangible":{"@id":"schema:Intangible"},"Integer":{"@id":"schema:Integer"},"InteractAction":{"@id":"schema:InteractAction"},"InteractionCounter":{"@id":"schema:InteractionCounter"},"InternationalTrial":{"@id":"schema:InternationalTrial"},"InternetCafe":{"@id":"schema:InternetCafe"},"InvestmentFund":{"@id":"schema:InvestmentFund"},"InvestmentOrDeposit":{"@id":"schema:InvestmentOrDeposit"},"InviteAction":{"@id":"schema:InviteAction"},"Invoice":{"@id":"schema:Invoice"},"InvoicePrice":{"@id":"schema:InvoicePrice"},"ItemAvailability":{"@id":"schema:ItemAvailability"},"ItemList":{"@id":"schema:ItemList"},"ItemListOrderAscending":{"@id":"schema:ItemListOrderAscending"},"ItemListOrderDescending":{"@id":"schema:ItemListOrderDescending"},"ItemListOrderType":{"@id":"schema:ItemListOrderType"},"ItemListUnordered":{"@id":"schema:ItemListUnordered"},"ItemPage":{"@id":"schema:ItemPage"},"JewelryStore":{"@id":"schema:JewelryStore"},"JobPosting":{"@id":"schema:JobPosting"},"JoinAction":{"@id":"schema:JoinAction"},"Joint":{"@id":"schema:Joint"},"KosherDiet":{"@id":"schema:KosherDiet"},"LaboratoryScience":{"@id":"schema:LaboratoryScience"},"LakeBodyOfWater":{"@id":"schema:LakeBodyOfWater"},"Landform":{"@id":"schema:Landform"},"LandmarksOrHistoricalBuildings":{"@id":"schema:LandmarksOrHistoricalBuildings"},"Language":{"@id":"schema:Language"},"LaserDiscFormat":{"@id":"schema:LaserDiscFormat"},"LearningResource":{"@id":"schema:LearningResource"},"LeaveAction":{"@id":"schema:LeaveAction"},"LeftHandDriving":{"@id":"schema:LeftHandDriving"},"LegalForceStatus":{"@id":"schema:LegalForceStatus"},"LegalService":{"@id":"schema:LegalService"},"LegalValueLevel":{"@id":"schema:LegalValueLevel"},"Legislation":{"@id":"schema:Legislation"},"LegislationObject":{"@id":"schema:LegislationObject"},"LegislativeBuilding":{"@id":"schema:LegislativeBuilding"},"LeisureTimeActivity":{"@id":"schema:LeisureTimeActivity"},"LendAction":{"@id":"schema:LendAction"},"Library":{"@id":"schema:Library"},"LibrarySystem":{"@id":"schema:LibrarySystem"},"LifestyleModification":{"@id":"schema:LifestyleModification"},"Ligament":{"@id":"schema:Ligament"},"LikeAction":{"@id":"schema:LikeAction"},"LimitedAvailability":{"@id":"schema:LimitedAvailability"},"LimitedByGuaranteeCharity":{"@id":"schema:LimitedByGuaranteeCharity"},"LinkRole":{"@id":"schema:LinkRole"},"LiquorStore":{"@id":"schema:LiquorStore"},"ListItem":{"@id":"schema:ListItem"},"ListPrice":{"@id":"schema:ListPrice"},"ListenAction":{"@id":"schema:ListenAction"},"LiteraryEvent":{"@id":"schema:LiteraryEvent"},"LiveAlbum":{"@id":"schema:LiveAlbum"},"LiveBlogPosting":{"@id":"schema:LiveBlogPosting"},"LivingWithHealthAspect":{"@id":"schema:LivingWithHealthAspect"},"LoanOrCredit":{"@id":"schema:LoanOrCredit"},"LocalBusiness":{"@id":"schema:LocalBusiness"},"LocationFeatureSpecification":{"@id":"schema:LocationFeatureSpecification"},"LockerDelivery":{"@id":"schema:LockerDelivery"},"Locksmith":{"@id":"schema:Locksmith"},"LodgingBusiness":{"@id":"schema:LodgingBusiness"},"LodgingReservation":{"@id":"schema:LodgingReservation"},"Longitudinal":{"@id":"schema:Longitudinal"},"LoseAction":{"@id":"schema:LoseAction"},"LowCalorieDiet":{"@id":"schema:LowCalorieDiet"},"LowFatDiet":{"@id":"schema:LowFatDiet"},"LowLactoseDiet":{"@id":"schema:LowLactoseDiet"},"LowSaltDiet":{"@id":"schema:LowSaltDiet"},"Lung":{"@id":"schema:Lung"},"LymphaticVessel":{"@id":"schema:LymphaticVessel"},"MRI":{"@id":"schema:MRI"},"MSRP":{"@id":"schema:MSRP"},"Male":{"@id":"schema:Male"},"Manuscript":{"@id":"schema:Manuscript"},"Map":{"@id":"schema:Map"},"MapCategoryType":{"@id":"schema:MapCategoryType"},"MarryAction":{"@id":"schema:MarryAction"},"Mass":{"@id":"schema:Mass"},"MathSolver":{"@id":"schema:MathSolver"},"MaximumDoseSchedule":{"@id":"schema:MaximumDoseSchedule"},"MayTreatHealthAspect":{"@id":"schema:MayTreatHealthAspect"},"MeasurementMethodEnum":{"@id":"schema:MeasurementMethodEnum"},"MeasurementTypeEnumeration":{"@id":"schema:MeasurementTypeEnumeration"},"MediaGallery":{"@id":"schema:MediaGallery"},"MediaManipulationRatingEnumeration":{"@id":"schema:MediaManipulationRatingEnumeration"},"MediaObject":{"@id":"schema:MediaObject"},"MediaReview":{"@id":"schema:MediaReview"},"MediaReviewItem":{"@id":"schema:MediaReviewItem"},"MediaSubscription":{"@id":"schema:MediaSubscription"},"MedicalAudience":{"@id":"schema:MedicalAudience"},"MedicalAudienceType":{"@id":"schema:MedicalAudienceType"},"MedicalBusiness":{"@id":"schema:MedicalBusiness"},"MedicalCause":{"@id":"schema:MedicalCause"},"MedicalClinic":{"@id":"schema:MedicalClinic"},"MedicalCode":{"@id":"schema:MedicalCode"},"MedicalCondition":{"@id":"schema:MedicalCondition"},"MedicalConditionStage":{"@id":"schema:MedicalConditionStage"},"MedicalContraindication":{"@id":"schema:MedicalContraindication"},"MedicalDevice":{"@id":"schema:MedicalDevice"},"MedicalDevicePurpose":{"@id":"schema:MedicalDevicePurpose"},"MedicalEntity":{"@id":"schema:MedicalEntity"},"MedicalEnumeration":{"@id":"schema:MedicalEnumeration"},"MedicalEvidenceLevel":{"@id":"schema:MedicalEvidenceLevel"},"MedicalGuideline":{"@id":"schema:MedicalGuideline"},"MedicalGuidelineContraindication":{"@id":"schema:MedicalGuidelineContraindication"},"MedicalGuidelineRecommendation":{"@id":"schema:MedicalGuidelineRecommendation"},"MedicalImagingTechnique":{"@id":"schema:MedicalImagingTechnique"},"MedicalIndication":{"@id":"schema:MedicalIndication"},"MedicalIntangible":{"@id":"schema:MedicalIntangible"},"MedicalObservationalStudy":{"@id":"schema:MedicalObservationalStudy"},"MedicalObservationalStudyDesign":{"@id":"schema:MedicalObservationalStudyDesign"},"MedicalOrganization":{"@id":"schema:MedicalOrganization"},"MedicalProcedure":{"@id":"schema:MedicalProcedure"},"MedicalProcedureType":{"@id":"schema:MedicalProcedureType"},"MedicalResearcher":{"@id":"schema:MedicalResearcher"},"MedicalRiskCalculator":{"@id":"schema:MedicalRiskCalculator"},"MedicalRiskEstimator":{"@id":"schema:MedicalRiskEstimator"},"MedicalRiskFactor":{"@id":"schema:MedicalRiskFactor"},"MedicalRiskScore":{"@id":"schema:MedicalRiskScore"},"MedicalScholarlyArticle":{"@id":"schema:MedicalScholarlyArticle"},"MedicalSign":{"@id":"schema:MedicalSign"},"MedicalSignOrSymptom":{"@id":"schema:MedicalSignOrSymptom"},"MedicalSpecialty":{"@id":"schema:MedicalSpecialty"},"MedicalStudy":{"@id":"schema:MedicalStudy"},"MedicalStudyStatus":{"@id":"schema:MedicalStudyStatus"},"MedicalSymptom":{"@id":"schema:MedicalSymptom"},"MedicalTest":{"@id":"schema:MedicalTest"},"MedicalTestPanel":{"@id":"schema:MedicalTestPanel"},"MedicalTherapy":{"@id":"schema:MedicalTherapy"},"MedicalTrial":{"@id":"schema:MedicalTrial"},"MedicalTrialDesign":{"@id":"schema:MedicalTrialDesign"},"MedicalWebPage":{"@id":"schema:MedicalWebPage"},"MedicineSystem":{"@id":"schema:MedicineSystem"},"MeetingRoom":{"@id":"schema:MeetingRoom"},"MensClothingStore":{"@id":"schema:MensClothingStore"},"Menu":{"@id":"schema:Menu"},"MenuItem":{"@id":"schema:MenuItem"},"MenuSection":{"@id":"schema:MenuSection"},"MerchantReturnEnumeration":{"@id":"schema:MerchantReturnEnumeration"},"MerchantReturnFiniteReturnWindow":{"@id":"schema:MerchantReturnFiniteReturnWindow"},"MerchantReturnNotPermitted":{"@id":"schema:MerchantReturnNotPermitted"},"MerchantReturnPolicy":{"@id":"schema:MerchantReturnPolicy"},"MerchantReturnPolicySeasonalOverride":{"@id":"schema:MerchantReturnPolicySeasonalOverride"},"MerchantReturnUnlimitedWindow":{"@id":"schema:MerchantReturnUnlimitedWindow"},"MerchantReturnUnspecified":{"@id":"schema:MerchantReturnUnspecified"},"Message":{"@id":"schema:Message"},"MiddleSchool":{"@id":"schema:MiddleSchool"},"Midwifery":{"@id":"schema:Midwifery"},"MinimumAdvertisedPrice":{"@id":"schema:MinimumAdvertisedPrice"},"MisconceptionsHealthAspect":{"@id":"schema:MisconceptionsHealthAspect"},"MixedEventAttendanceMode":{"@id":"schema:MixedEventAttendanceMode"},"MixtapeAlbum":{"@id":"schema:MixtapeAlbum"},"MobileApplication":{"@id":"schema:MobileApplication"},"MobilePhoneStore":{"@id":"schema:MobilePhoneStore"},"MobileWebPlatform":{"@id":"schema:MobileWebPlatform"},"MolecularEntity":{"@id":"schema:MolecularEntity"},"Monday":{"@id":"schema:Monday"},"MonetaryAmount":{"@id":"schema:MonetaryAmount"},"MonetaryAmountDistribution":{"@id":"schema:MonetaryAmountDistribution"},"MonetaryGrant":{"@id":"schema:MonetaryGrant"},"MoneyTransfer":{"@id":"schema:MoneyTransfer"},"MortgageLoan":{"@id":"schema:MortgageLoan"},"Mosque":{"@id":"schema:Mosque"},"Motel":{"@id":"schema:Motel"},"Motorcycle":{"@id":"schema:Motorcycle"},"MotorcycleDealer":{"@id":"schema:MotorcycleDealer"},"MotorcycleRepair":{"@id":"schema:MotorcycleRepair"},"MotorizedBicycle":{"@id":"schema:MotorizedBicycle"},"Mountain":{"@id":"schema:Mountain"},"MoveAction":{"@id":"schema:MoveAction"},"Movie":{"@id":"schema:Movie"},"MovieClip":{"@id":"schema:MovieClip"},"MovieRentalStore":{"@id":"schema:MovieRentalStore"},"MovieSeries":{"@id":"schema:MovieSeries"},"MovieTheater":{"@id":"schema:MovieTheater"},"MovingCompany":{"@id":"schema:MovingCompany"},"MultiCenterTrial":{"@id":"schema:MultiCenterTrial"},"MultiPlayer":{"@id":"schema:MultiPlayer"},"MulticellularParasite":{"@id":"schema:MulticellularParasite"},"Muscle":{"@id":"schema:Muscle"},"Musculoskeletal":{"@id":"schema:Musculoskeletal"},"MusculoskeletalExam":{"@id":"schema:MusculoskeletalExam"},"Museum":{"@id":"schema:Museum"},"MusicAlbum":{"@id":"schema:MusicAlbum"},"MusicAlbumProductionType":{"@id":"schema:MusicAlbumProductionType"},"MusicAlbumReleaseType":{"@id":"schema:MusicAlbumReleaseType"},"MusicComposition":{"@id":"schema:MusicComposition"},"MusicEvent":{"@id":"schema:MusicEvent"},"MusicGroup":{"@id":"schema:MusicGroup"},"MusicPlaylist":{"@id":"schema:MusicPlaylist"},"MusicRecording":{"@id":"schema:MusicRecording"},"MusicRelease":{"@id":"schema:MusicRelease"},"MusicReleaseFormatType":{"@id":"schema:MusicReleaseFormatType"},"MusicStore":{"@id":"schema:MusicStore"},"MusicVenue":{"@id":"schema:MusicVenue"},"MusicVideoObject":{"@id":"schema:MusicVideoObject"},"NGO":{"@id":"schema:NGO"},"NLNonprofitType":{"@id":"schema:NLNonprofitType"},"NailSalon":{"@id":"schema:NailSalon"},"NarcoticConsideration":{"@id":"schema:NarcoticConsideration"},"Neck":{"@id":"schema:Neck"},"Nerve":{"@id":"schema:Nerve"},"Neuro":{"@id":"schema:Neuro"},"Neurologic":{"@id":"schema:Neurologic"},"NewCondition":{"@id":"schema:NewCondition"},"NewsArticle":{"@id":"schema:NewsArticle"},"NewsMediaOrganization":{"@id":"schema:NewsMediaOrganization"},"Newspaper":{"@id":"schema:Newspaper"},"NightClub":{"@id":"schema:NightClub"},"NoninvasiveProcedure":{"@id":"schema:NoninvasiveProcedure"},"Nonprofit501a":{"@id":"schema:Nonprofit501a"},"Nonprofit501c1":{"@id":"schema:Nonprofit501c1"},"Nonprofit501c10":{"@id":"schema:Nonprofit501c10"},"Nonprofit501c11":{"@id":"schema:Nonprofit501c11"},"Nonprofit501c12":{"@id":"schema:Nonprofit501c12"},"Nonprofit501c13":{"@id":"schema:Nonprofit501c13"},"Nonprofit501c14":{"@id":"schema:Nonprofit501c14"},"Nonprofit501c15":{"@id":"schema:Nonprofit501c15"},"Nonprofit501c16":{"@id":"schema:Nonprofit501c16"},"Nonprofit501c17":{"@id":"schema:Nonprofit501c17"},"Nonprofit501c18":{"@id":"schema:Nonprofit501c18"},"Nonprofit501c19":{"@id":"schema:Nonprofit501c19"},"Nonprofit501c2":{"@id":"schema:Nonprofit501c2"},"Nonprofit501c20":{"@id":"schema:Nonprofit501c20"},"Nonprofit501c21":{"@id":"schema:Nonprofit501c21"},"Nonprofit501c22":{"@id":"schema:Nonprofit501c22"},"Nonprofit501c23":{"@id":"schema:Nonprofit501c23"},"Nonprofit501c24":{"@id":"schema:Nonprofit501c24"},"Nonprofit501c25":{"@id":"schema:Nonprofit501c25"},"Nonprofit501c26":{"@id":"schema:Nonprofit501c26"},"Nonprofit501c27":{"@id":"schema:Nonprofit501c27"},"Nonprofit501c28":{"@id":"schema:Nonprofit501c28"},"Nonprofit501c3":{"@id":"schema:Nonprofit501c3"},"Nonprofit501c4":{"@id":"schema:Nonprofit501c4"},"Nonprofit501c5":{"@id":"schema:Nonprofit501c5"},"Nonprofit501c6":{"@id":"schema:Nonprofit501c6"},"Nonprofit501c7":{"@id":"schema:Nonprofit501c7"},"Nonprofit501c8":{"@id":"schema:Nonprofit501c8"},"Nonprofit501c9":{"@id":"schema:Nonprofit501c9"},"Nonprofit501d":{"@id":"schema:Nonprofit501d"},"Nonprofit501e":{"@id":"schema:Nonprofit501e"},"Nonprofit501f":{"@id":"schema:Nonprofit501f"},"Nonprofit501k":{"@id":"schema:Nonprofit501k"},"Nonprofit501n":{"@id":"schema:Nonprofit501n"},"Nonprofit501q":{"@id":"schema:Nonprofit501q"},"Nonprofit527":{"@id":"schema:Nonprofit527"},"NonprofitANBI":{"@id":"schema:NonprofitANBI"},"NonprofitSBBI":{"@id":"schema:NonprofitSBBI"},"NonprofitType":{"@id":"schema:NonprofitType"},"Nose":{"@id":"schema:Nose"},"NotInForce":{"@id":"schema:NotInForce"},"NotYetRecruiting":{"@id":"schema:NotYetRecruiting"},"Notary":{"@id":"schema:Notary"},"NoteDigitalDocument":{"@id":"schema:NoteDigitalDocument"},"Number":{"@id":"schema:Number"},"Nursing":{"@id":"schema:Nursing"},"NutritionInformation":{"@id":"schema:NutritionInformation"},"OTC":{"@id":"schema:OTC"},"Observation":{"@id":"schema:Observation"},"Observational":{"@id":"schema:Observational"},"Obstetric":{"@id":"schema:Obstetric"},"Occupation":{"@id":"schema:Occupation"},"OccupationalActivity":{"@id":"schema:OccupationalActivity"},"OccupationalExperienceRequirements":{"@id":"schema:OccupationalExperienceRequirements"},"OccupationalTherapy":{"@id":"schema:OccupationalTherapy"},"OceanBodyOfWater":{"@id":"schema:OceanBodyOfWater"},"Offer":{"@id":"schema:Offer"},"OfferCatalog":{"@id":"schema:OfferCatalog"},"OfferForLease":{"@id":"schema:OfferForLease"},"OfferForPurchase":{"@id":"schema:OfferForPurchase"},"OfferItemCondition":{"@id":"schema:OfferItemCondition"},"OfferShippingDetails":{"@id":"schema:OfferShippingDetails"},"OfficeEquipmentStore":{"@id":"schema:OfficeEquipmentStore"},"OfficialLegalValue":{"@id":"schema:OfficialLegalValue"},"OfflineEventAttendanceMode":{"@id":"schema:OfflineEventAttendanceMode"},"OfflinePermanently":{"@id":"schema:OfflinePermanently"},"OfflineTemporarily":{"@id":"schema:OfflineTemporarily"},"OnDemandEvent":{"@id":"schema:OnDemandEvent"},"OnSitePickup":{"@id":"schema:OnSitePickup"},"Oncologic":{"@id":"schema:Oncologic"},"OneTimePayments":{"@id":"schema:OneTimePayments"},"Online":{"@id":"schema:Online"},"OnlineBusiness":{"@id":"schema:OnlineBusiness"},"OnlineEventAttendanceMode":{"@id":"schema:OnlineEventAttendanceMode"},"OnlineFull":{"@id":"schema:OnlineFull"},"OnlineOnly":{"@id":"schema:OnlineOnly"},"OnlineStore":{"@id":"schema:OnlineStore"},"OpenTrial":{"@id":"schema:OpenTrial"},"OpeningHoursSpecification":{"@id":"schema:OpeningHoursSpecification"},"OpinionNewsArticle":{"@id":"schema:OpinionNewsArticle"},"Optician":{"@id":"schema:Optician"},"Optometric":{"@id":"schema:Optometric"},"Order":{"@id":"schema:Order"},"OrderAction":{"@id":"schema:OrderAction"},"OrderCancelled":{"@id":"schema:OrderCancelled"},"OrderDelivered":{"@id":"schema:OrderDelivered"},"OrderInTransit":{"@id":"schema:OrderInTransit"},"OrderItem":{"@id":"schema:OrderItem"},"OrderPaymentDue":{"@id":"schema:OrderPaymentDue"},"OrderPickupAvailable":{"@id":"schema:OrderPickupAvailable"},"OrderProblem":{"@id":"schema:OrderProblem"},"OrderProcessing":{"@id":"schema:OrderProcessing"},"OrderReturned":{"@id":"schema:OrderReturned"},"OrderStatus":{"@id":"schema:OrderStatus"},"Organization":{"@id":"schema:Organization"},"OrganizationRole":{"@id":"schema:OrganizationRole"},"OrganizeAction":{"@id":"schema:OrganizeAction"},"OriginalMediaContent":{"@id":"schema:OriginalMediaContent"},"OriginalShippingFees":{"@id":"schema:OriginalShippingFees"},"Osteopathic":{"@id":"schema:Osteopathic"},"Otolaryngologic":{"@id":"schema:Otolaryngologic"},"OutOfStock":{"@id":"schema:OutOfStock"},"OutletStore":{"@id":"schema:OutletStore"},"OverviewHealthAspect":{"@id":"schema:OverviewHealthAspect"},"OwnershipInfo":{"@id":"schema:OwnershipInfo"},"PET":{"@id":"schema:PET"},"PaidLeave":{"@id":"schema:PaidLeave"},"PaintAction":{"@id":"schema:PaintAction"},"Painting":{"@id":"schema:Painting"},"PalliativeProcedure":{"@id":"schema:PalliativeProcedure"},"Paperback":{"@id":"schema:Paperback"},"ParcelDelivery":{"@id":"schema:ParcelDelivery"},"ParcelService":{"@id":"schema:ParcelService"},"ParentAudience":{"@id":"schema:ParentAudience"},"ParentalSupport":{"@id":"schema:ParentalSupport"},"Park":{"@id":"schema:Park"},"ParkingFacility":{"@id":"schema:ParkingFacility"},"ParkingMap":{"@id":"schema:ParkingMap"},"PartiallyInForce":{"@id":"schema:PartiallyInForce"},"Pathology":{"@id":"schema:Pathology"},"PathologyTest":{"@id":"schema:PathologyTest"},"Patient":{"@id":"schema:Patient"},"PatientExperienceHealthAspect":{"@id":"schema:PatientExperienceHealthAspect"},"PawnShop":{"@id":"schema:PawnShop"},"PayAction":{"@id":"schema:PayAction"},"PaymentAutomaticallyApplied":{"@id":"schema:PaymentAutomaticallyApplied"},"PaymentCard":{"@id":"schema:PaymentCard"},"PaymentChargeSpecification":{"@id":"schema:PaymentChargeSpecification"},"PaymentComplete":{"@id":"schema:PaymentComplete"},"PaymentDeclined":{"@id":"schema:PaymentDeclined"},"PaymentDue":{"@id":"schema:PaymentDue"},"PaymentMethod":{"@id":"schema:PaymentMethod"},"PaymentPastDue":{"@id":"schema:PaymentPastDue"},"PaymentService":{"@id":"schema:PaymentService"},"PaymentStatusType":{"@id":"schema:PaymentStatusType"},"Pediatric":{"@id":"schema:Pediatric"},"PeopleAudience":{"@id":"schema:PeopleAudience"},"PercutaneousProcedure":{"@id":"schema:PercutaneousProcedure"},"PerformAction":{"@id":"schema:PerformAction"},"PerformanceRole":{"@id":"schema:PerformanceRole"},"PerformingArtsTheater":{"@id":"schema:PerformingArtsTheater"},"PerformingGroup":{"@id":"schema:PerformingGroup"},"Periodical":{"@id":"schema:Periodical"},"Permit":{"@id":"schema:Permit"},"Person":{"@id":"schema:Person"},"PetStore":{"@id":"schema:PetStore"},"Pharmacy":{"@id":"schema:Pharmacy"},"PharmacySpecialty":{"@id":"schema:PharmacySpecialty"},"Photograph":{"@id":"schema:Photograph"},"PhotographAction":{"@id":"schema:PhotographAction"},"PhysicalActivity":{"@id":"schema:PhysicalActivity"},"PhysicalActivityCategory":{"@id":"schema:PhysicalActivityCategory"},"PhysicalExam":{"@id":"schema:PhysicalExam"},"PhysicalTherapy":{"@id":"schema:PhysicalTherapy"},"Physician":{"@id":"schema:Physician"},"Physiotherapy":{"@id":"schema:Physiotherapy"},"Place":{"@id":"schema:Place"},"PlaceOfWorship":{"@id":"schema:PlaceOfWorship"},"PlaceboControlledTrial":{"@id":"schema:PlaceboControlledTrial"},"PlanAction":{"@id":"schema:PlanAction"},"PlasticSurgery":{"@id":"schema:PlasticSurgery"},"Play":{"@id":"schema:Play"},"PlayAction":{"@id":"schema:PlayAction"},"PlayGameAction":{"@id":"schema:PlayGameAction"},"Playground":{"@id":"schema:Playground"},"Plumber":{"@id":"schema:Plumber"},"PodcastEpisode":{"@id":"schema:PodcastEpisode"},"PodcastSeason":{"@id":"schema:PodcastSeason"},"PodcastSeries":{"@id":"schema:PodcastSeries"},"Podiatric":{"@id":"schema:Podiatric"},"PoliceStation":{"@id":"schema:PoliceStation"},"PoliticalParty":{"@id":"schema:PoliticalParty"},"Pond":{"@id":"schema:Pond"},"PostOffice":{"@id":"schema:PostOffice"},"PostalAddress":{"@id":"schema:PostalAddress"},"PostalCodeRangeSpecification":{"@id":"schema:PostalCodeRangeSpecification"},"Poster":{"@id":"schema:Poster"},"PotentialActionStatus":{"@id":"schema:PotentialActionStatus"},"PreOrder":{"@id":"schema:PreOrder"},"PreOrderAction":{"@id":"schema:PreOrderAction"},"PreSale":{"@id":"schema:PreSale"},"PregnancyHealthAspect":{"@id":"schema:PregnancyHealthAspect"},"PrependAction":{"@id":"schema:PrependAction"},"Preschool":{"@id":"schema:Preschool"},"PrescriptionOnly":{"@id":"schema:PrescriptionOnly"},"PresentationDigitalDocument":{"@id":"schema:PresentationDigitalDocument"},"PreventionHealthAspect":{"@id":"schema:PreventionHealthAspect"},"PreventionIndication":{"@id":"schema:PreventionIndication"},"PriceComponentTypeEnumeration":{"@id":"schema:PriceComponentTypeEnumeration"},"PriceSpecification":{"@id":"schema:PriceSpecification"},"PriceTypeEnumeration":{"@id":"schema:PriceTypeEnumeration"},"PrimaryCare":{"@id":"schema:PrimaryCare"},"Prion":{"@id":"schema:Prion"},"Product":{"@id":"schema:Product"},"ProductCollection":{"@id":"schema:ProductCollection"},"ProductGroup":{"@id":"schema:ProductGroup"},"ProductModel":{"@id":"schema:ProductModel"},"ProductReturnEnumeration":{"@id":"schema:ProductReturnEnumeration"},"ProductReturnFiniteReturnWindow":{"@id":"schema:ProductReturnFiniteReturnWindow"},"ProductReturnNotPermitted":{"@id":"schema:ProductReturnNotPermitted"},"ProductReturnPolicy":{"@id":"schema:ProductReturnPolicy"},"ProductReturnUnlimitedWindow":{"@id":"schema:ProductReturnUnlimitedWindow"},"ProductReturnUnspecified":{"@id":"schema:ProductReturnUnspecified"},"ProfessionalService":{"@id":"schema:ProfessionalService"},"ProfilePage":{"@id":"schema:ProfilePage"},"PrognosisHealthAspect":{"@id":"schema:PrognosisHealthAspect"},"ProgramMembership":{"@id":"schema:ProgramMembership"},"Project":{"@id":"schema:Project"},"PronounceableText":{"@id":"schema:PronounceableText"},"Property":{"@id":"schema:Property"},"PropertyValue":{"@id":"schema:PropertyValue"},"PropertyValueSpecification":{"@id":"schema:PropertyValueSpecification"},"Protein":{"@id":"schema:Protein"},"Protozoa":{"@id":"schema:Protozoa"},"Psychiatric":{"@id":"schema:Psychiatric"},"PsychologicalTreatment":{"@id":"schema:PsychologicalTreatment"},"PublicHealth":{"@id":"schema:PublicHealth"},"PublicHolidays":{"@id":"schema:PublicHolidays"},"PublicSwimmingPool":{"@id":"schema:PublicSwimmingPool"},"PublicToilet":{"@id":"schema:PublicToilet"},"PublicationEvent":{"@id":"schema:PublicationEvent"},"PublicationIssue":{"@id":"schema:PublicationIssue"},"PublicationVolume":{"@id":"schema:PublicationVolume"},"Pulmonary":{"@id":"schema:Pulmonary"},"QAPage":{"@id":"schema:QAPage"},"QualitativeValue":{"@id":"schema:QualitativeValue"},"QuantitativeValue":{"@id":"schema:QuantitativeValue"},"QuantitativeValueDistribution":{"@id":"schema:QuantitativeValueDistribution"},"Quantity":{"@id":"schema:Quantity"},"Question":{"@id":"schema:Question"},"Quiz":{"@id":"schema:Quiz"},"Quotation":{"@id":"schema:Quotation"},"QuoteAction":{"@id":"schema:QuoteAction"},"RVPark":{"@id":"schema:RVPark"},"RadiationTherapy":{"@id":"schema:RadiationTherapy"},"RadioBroadcastService":{"@id":"schema:RadioBroadcastService"},"RadioChannel":{"@id":"schema:RadioChannel"},"RadioClip":{"@id":"schema:RadioClip"},"RadioEpisode":{"@id":"schema:RadioEpisode"},"RadioSeason":{"@id":"schema:RadioSeason"},"RadioSeries":{"@id":"schema:RadioSeries"},"RadioStation":{"@id":"schema:RadioStation"},"Radiography":{"@id":"schema:Radiography"},"RandomizedTrial":{"@id":"schema:RandomizedTrial"},"Rating":{"@id":"schema:Rating"},"ReactAction":{"@id":"schema:ReactAction"},"ReadAction":{"@id":"schema:ReadAction"},"ReadPermission":{"@id":"schema:ReadPermission"},"RealEstateAgent":{"@id":"schema:RealEstateAgent"},"RealEstateListing":{"@id":"schema:RealEstateListing"},"RearWheelDriveConfiguration":{"@id":"schema:RearWheelDriveConfiguration"},"ReceiveAction":{"@id":"schema:ReceiveAction"},"Recipe":{"@id":"schema:Recipe"},"Recommendation":{"@id":"schema:Recommendation"},"RecommendedDoseSchedule":{"@id":"schema:RecommendedDoseSchedule"},"Recruiting":{"@id":"schema:Recruiting"},"RecyclingCenter":{"@id":"schema:RecyclingCenter"},"ReducedRelevanceForChildrenConsideration":{"@id":"schema:ReducedRelevanceForChildrenConsideration"},"RefundTypeEnumeration":{"@id":"schema:RefundTypeEnumeration"},"RefurbishedCondition":{"@id":"schema:RefurbishedCondition"},"RegisterAction":{"@id":"schema:RegisterAction"},"Registry":{"@id":"schema:Registry"},"ReimbursementCap":{"@id":"schema:ReimbursementCap"},"RejectAction":{"@id":"schema:RejectAction"},"RelatedTopicsHealthAspect":{"@id":"schema:RelatedTopicsHealthAspect"},"RemixAlbum":{"@id":"schema:RemixAlbum"},"Renal":{"@id":"schema:Renal"},"RentAction":{"@id":"schema:RentAction"},"RentalCarReservation":{"@id":"schema:RentalCarReservation"},"RentalVehicleUsage":{"@id":"schema:RentalVehicleUsage"},"RepaymentSpecification":{"@id":"schema:RepaymentSpecification"},"ReplaceAction":{"@id":"schema:ReplaceAction"},"ReplyAction":{"@id":"schema:ReplyAction"},"Report":{"@id":"schema:Report"},"ReportageNewsArticle":{"@id":"schema:ReportageNewsArticle"},"ReportedDoseSchedule":{"@id":"schema:ReportedDoseSchedule"},"ResearchOrganization":{"@id":"schema:ResearchOrganization"},"ResearchProject":{"@id":"schema:ResearchProject"},"Researcher":{"@id":"schema:Researcher"},"Reservation":{"@id":"schema:Reservation"},"ReservationCancelled":{"@id":"schema:ReservationCancelled"},"ReservationConfirmed":{"@id":"schema:ReservationConfirmed"},"ReservationHold":{"@id":"schema:ReservationHold"},"ReservationPackage":{"@id":"schema:ReservationPackage"},"ReservationPending":{"@id":"schema:ReservationPending"},"ReservationStatusType":{"@id":"schema:ReservationStatusType"},"ReserveAction":{"@id":"schema:ReserveAction"},"Reservoir":{"@id":"schema:Reservoir"},"Residence":{"@id":"schema:Residence"},"Resort":{"@id":"schema:Resort"},"RespiratoryTherapy":{"@id":"schema:RespiratoryTherapy"},"Restaurant":{"@id":"schema:Restaurant"},"RestockingFees":{"@id":"schema:RestockingFees"},"RestrictedDiet":{"@id":"schema:RestrictedDiet"},"ResultsAvailable":{"@id":"schema:ResultsAvailable"},"ResultsNotAvailable":{"@id":"schema:ResultsNotAvailable"},"ResumeAction":{"@id":"schema:ResumeAction"},"Retail":{"@id":"schema:Retail"},"ReturnAction":{"@id":"schema:ReturnAction"},"ReturnAtKiosk":{"@id":"schema:ReturnAtKiosk"},"ReturnByMail":{"@id":"schema:ReturnByMail"},"ReturnFeesCustomerResponsibility":{"@id":"schema:ReturnFeesCustomerResponsibility"},"ReturnFeesEnumeration":{"@id":"schema:ReturnFeesEnumeration"},"ReturnInStore":{"@id":"schema:ReturnInStore"},"ReturnLabelCustomerResponsibility":{"@id":"schema:ReturnLabelCustomerResponsibility"},"ReturnLabelDownloadAndPrint":{"@id":"schema:ReturnLabelDownloadAndPrint"},"ReturnLabelInBox":{"@id":"schema:ReturnLabelInBox"},"ReturnLabelSourceEnumeration":{"@id":"schema:ReturnLabelSourceEnumeration"},"ReturnMethodEnumeration":{"@id":"schema:ReturnMethodEnumeration"},"ReturnShippingFees":{"@id":"schema:ReturnShippingFees"},"Review":{"@id":"schema:Review"},"ReviewAction":{"@id":"schema:ReviewAction"},"ReviewNewsArticle":{"@id":"schema:ReviewNewsArticle"},"Rheumatologic":{"@id":"schema:Rheumatologic"},"RightHandDriving":{"@id":"schema:RightHandDriving"},"RisksOrComplicationsHealthAspect":{"@id":"schema:RisksOrComplicationsHealthAspect"},"RiverBodyOfWater":{"@id":"schema:RiverBodyOfWater"},"Role":{"@id":"schema:Role"},"RoofingContractor":{"@id":"schema:RoofingContractor"},"Room":{"@id":"schema:Room"},"RsvpAction":{"@id":"schema:RsvpAction"},"RsvpResponseMaybe":{"@id":"schema:RsvpResponseMaybe"},"RsvpResponseNo":{"@id":"schema:RsvpResponseNo"},"RsvpResponseType":{"@id":"schema:RsvpResponseType"},"RsvpResponseYes":{"@id":"schema:RsvpResponseYes"},"SRP":{"@id":"schema:SRP"},"SafetyHealthAspect":{"@id":"schema:SafetyHealthAspect"},"SaleEvent":{"@id":"schema:SaleEvent"},"SalePrice":{"@id":"schema:SalePrice"},"SatireOrParodyContent":{"@id":"schema:SatireOrParodyContent"},"SatiricalArticle":{"@id":"schema:SatiricalArticle"},"Saturday":{"@id":"schema:Saturday"},"Schedule":{"@id":"schema:Schedule"},"ScheduleAction":{"@id":"schema:ScheduleAction"},"ScholarlyArticle":{"@id":"schema:ScholarlyArticle"},"School":{"@id":"schema:School"},"SchoolDistrict":{"@id":"schema:SchoolDistrict"},"ScreeningEvent":{"@id":"schema:ScreeningEvent"},"ScreeningHealthAspect":{"@id":"schema:ScreeningHealthAspect"},"Sculpture":{"@id":"schema:Sculpture"},"SeaBodyOfWater":{"@id":"schema:SeaBodyOfWater"},"SearchAction":{"@id":"schema:SearchAction"},"SearchRescueOrganization":{"@id":"schema:SearchRescueOrganization"},"SearchResultsPage":{"@id":"schema:SearchResultsPage"},"Season":{"@id":"schema:Season"},"Seat":{"@id":"schema:Seat"},"SeatingMap":{"@id":"schema:SeatingMap"},"SeeDoctorHealthAspect":{"@id":"schema:SeeDoctorHealthAspect"},"SeekToAction":{"@id":"schema:SeekToAction"},"SelfCareHealthAspect":{"@id":"schema:SelfCareHealthAspect"},"SelfStorage":{"@id":"schema:SelfStorage"},"SellAction":{"@id":"schema:SellAction"},"SendAction":{"@id":"schema:SendAction"},"Series":{"@id":"schema:Series"},"Service":{"@id":"schema:Service"},"ServiceChannel":{"@id":"schema:ServiceChannel"},"SexualContentConsideration":{"@id":"schema:SexualContentConsideration"},"ShareAction":{"@id":"schema:ShareAction"},"SheetMusic":{"@id":"schema:SheetMusic"},"ShippingDeliveryTime":{"@id":"schema:ShippingDeliveryTime"},"ShippingRateSettings":{"@id":"schema:ShippingRateSettings"},"ShoeStore":{"@id":"schema:ShoeStore"},"ShoppingCenter":{"@id":"schema:ShoppingCenter"},"ShortStory":{"@id":"schema:ShortStory"},"SideEffectsHealthAspect":{"@id":"schema:SideEffectsHealthAspect"},"SingleBlindedTrial":{"@id":"schema:SingleBlindedTrial"},"SingleCenterTrial":{"@id":"schema:SingleCenterTrial"},"SingleFamilyResidence":{"@id":"schema:SingleFamilyResidence"},"SinglePlayer":{"@id":"schema:SinglePlayer"},"SingleRelease":{"@id":"schema:SingleRelease"},"SiteNavigationElement":{"@id":"schema:SiteNavigationElement"},"SizeGroupEnumeration":{"@id":"schema:SizeGroupEnumeration"},"SizeSpecification":{"@id":"schema:SizeSpecification"},"SizeSystemEnumeration":{"@id":"schema:SizeSystemEnumeration"},"SizeSystemImperial":{"@id":"schema:SizeSystemImperial"},"SizeSystemMetric":{"@id":"schema:SizeSystemMetric"},"SkiResort":{"@id":"schema:SkiResort"},"Skin":{"@id":"schema:Skin"},"SocialEvent":{"@id":"schema:SocialEvent"},"SocialMediaPosting":{"@id":"schema:SocialMediaPosting"},"SoftwareApplication":{"@id":"schema:SoftwareApplication"},"SoftwareSourceCode":{"@id":"schema:SoftwareSourceCode"},"SoldOut":{"@id":"schema:SoldOut"},"SolveMathAction":{"@id":"schema:SolveMathAction"},"SomeProducts":{"@id":"schema:SomeProducts"},"SoundtrackAlbum":{"@id":"schema:SoundtrackAlbum"},"SpeakableSpecification":{"@id":"schema:SpeakableSpecification"},"SpecialAnnouncement":{"@id":"schema:SpecialAnnouncement"},"Specialty":{"@id":"schema:Specialty"},"SpeechPathology":{"@id":"schema:SpeechPathology"},"SpokenWordAlbum":{"@id":"schema:SpokenWordAlbum"},"SportingGoodsStore":{"@id":"schema:SportingGoodsStore"},"SportsActivityLocation":{"@id":"schema:SportsActivityLocation"},"SportsClub":{"@id":"schema:SportsClub"},"SportsEvent":{"@id":"schema:SportsEvent"},"SportsOrganization":{"@id":"schema:SportsOrganization"},"SportsTeam":{"@id":"schema:SportsTeam"},"SpreadsheetDigitalDocument":{"@id":"schema:SpreadsheetDigitalDocument"},"StadiumOrArena":{"@id":"schema:StadiumOrArena"},"StagedContent":{"@id":"schema:StagedContent"},"StagesHealthAspect":{"@id":"schema:StagesHealthAspect"},"State":{"@id":"schema:State"},"Statement":{"@id":"schema:Statement"},"StatisticalPopulation":{"@id":"schema:StatisticalPopulation"},"StatisticalVariable":{"@id":"schema:StatisticalVariable"},"StatusEnumeration":{"@id":"schema:StatusEnumeration"},"SteeringPositionValue":{"@id":"schema:SteeringPositionValue"},"Store":{"@id":"schema:Store"},"StoreCreditRefund":{"@id":"schema:StoreCreditRefund"},"StrengthTraining":{"@id":"schema:StrengthTraining"},"StructuredValue":{"@id":"schema:StructuredValue"},"StudioAlbum":{"@id":"schema:StudioAlbum"},"StupidType":{"@id":"schema:StupidType"},"SubscribeAction":{"@id":"schema:SubscribeAction"},"Subscription":{"@id":"schema:Subscription"},"Substance":{"@id":"schema:Substance"},"SubwayStation":{"@id":"schema:SubwayStation"},"Suite":{"@id":"schema:Suite"},"Sunday":{"@id":"schema:Sunday"},"SuperficialAnatomy":{"@id":"schema:SuperficialAnatomy"},"Surgical":{"@id":"schema:Surgical"},"SurgicalProcedure":{"@id":"schema:SurgicalProcedure"},"SuspendAction":{"@id":"schema:SuspendAction"},"Suspended":{"@id":"schema:Suspended"},"Syllabus":{"@id":"schema:Syllabus"},"SymptomsHealthAspect":{"@id":"schema:SymptomsHealthAspect"},"Synagogue":{"@id":"schema:Synagogue"},"TVClip":{"@id":"schema:TVClip"},"TVEpisode":{"@id":"schema:TVEpisode"},"TVSeason":{"@id":"schema:TVSeason"},"TVSeries":{"@id":"schema:TVSeries"},"Table":{"@id":"schema:Table"},"TakeAction":{"@id":"schema:TakeAction"},"TattooParlor":{"@id":"schema:TattooParlor"},"Taxi":{"@id":"schema:Taxi"},"TaxiReservation":{"@id":"schema:TaxiReservation"},"TaxiService":{"@id":"schema:TaxiService"},"TaxiStand":{"@id":"schema:TaxiStand"},"TaxiVehicleUsage":{"@id":"schema:TaxiVehicleUsage"},"Taxon":{"@id":"schema:Taxon"},"TechArticle":{"@id":"schema:TechArticle"},"TelevisionChannel":{"@id":"schema:TelevisionChannel"},"TelevisionStation":{"@id":"schema:TelevisionStation"},"TennisComplex":{"@id":"schema:TennisComplex"},"Terminated":{"@id":"schema:Terminated"},"Text":{"@id":"schema:Text"},"TextDigitalDocument":{"@id":"schema:TextDigitalDocument"},"TextObject":{"@id":"schema:TextObject"},"TheaterEvent":{"@id":"schema:TheaterEvent"},"TheaterGroup":{"@id":"schema:TheaterGroup"},"Therapeutic":{"@id":"schema:Therapeutic"},"TherapeuticProcedure":{"@id":"schema:TherapeuticProcedure"},"Thesis":{"@id":"schema:Thesis"},"Thing":{"@id":"schema:Thing"},"Throat":{"@id":"schema:Throat"},"Thursday":{"@id":"schema:Thursday"},"Ticket":{"@id":"schema:Ticket"},"TieAction":{"@id":"schema:TieAction"},"Time":{"@id":"schema:Time"},"TipAction":{"@id":"schema:TipAction"},"TireShop":{"@id":"schema:TireShop"},"TobaccoNicotineConsideration":{"@id":"schema:TobaccoNicotineConsideration"},"TollFree":{"@id":"schema:TollFree"},"TouristAttraction":{"@id":"schema:TouristAttraction"},"TouristDestination":{"@id":"schema:TouristDestination"},"TouristInformationCenter":{"@id":"schema:TouristInformationCenter"},"TouristTrip":{"@id":"schema:TouristTrip"},"Toxicologic":{"@id":"schema:Toxicologic"},"ToyStore":{"@id":"schema:ToyStore"},"TrackAction":{"@id":"schema:TrackAction"},"TradeAction":{"@id":"schema:TradeAction"},"TraditionalChinese":{"@id":"schema:TraditionalChinese"},"TrainReservation":{"@id":"schema:TrainReservation"},"TrainStation":{"@id":"schema:TrainStation"},"TrainTrip":{"@id":"schema:TrainTrip"},"TransferAction":{"@id":"schema:TransferAction"},"TransformedContent":{"@id":"schema:TransformedContent"},"TransitMap":{"@id":"schema:TransitMap"},"TravelAction":{"@id":"schema:TravelAction"},"TravelAgency":{"@id":"schema:TravelAgency"},"TreatmentIndication":{"@id":"schema:TreatmentIndication"},"TreatmentsHealthAspect":{"@id":"schema:TreatmentsHealthAspect"},"Trip":{"@id":"schema:Trip"},"TripleBlindedTrial":{"@id":"schema:TripleBlindedTrial"},"True":{"@id":"schema:True"},"Tuesday":{"@id":"schema:Tuesday"},"TypeAndQuantityNode":{"@id":"schema:TypeAndQuantityNode"},"TypesHealthAspect":{"@id":"schema:TypesHealthAspect"},"UKNonprofitType":{"@id":"schema:UKNonprofitType"},"UKTrust":{"@id":"schema:UKTrust"},"URL":{"@id":"schema:URL"},"USNonprofitType":{"@id":"schema:USNonprofitType"},"Ultrasound":{"@id":"schema:Ultrasound"},"UnRegisterAction":{"@id":"schema:UnRegisterAction"},"UnclassifiedAdultConsideration":{"@id":"schema:UnclassifiedAdultConsideration"},"UnemploymentSupport":{"@id":"schema:UnemploymentSupport"},"UnincorporatedAssociationCharity":{"@id":"schema:UnincorporatedAssociationCharity"},"UnitPriceSpecification":{"@id":"schema:UnitPriceSpecification"},"UnofficialLegalValue":{"@id":"schema:UnofficialLegalValue"},"UpdateAction":{"@id":"schema:UpdateAction"},"Urologic":{"@id":"schema:Urologic"},"UsageOrScheduleHealthAspect":{"@id":"schema:UsageOrScheduleHealthAspect"},"UseAction":{"@id":"schema:UseAction"},"UsedCondition":{"@id":"schema:UsedCondition"},"UserBlocks":{"@id":"schema:UserBlocks"},"UserCheckins":{"@id":"schema:UserCheckins"},"UserComments":{"@id":"schema:UserComments"},"UserDownloads":{"@id":"schema:UserDownloads"},"UserInteraction":{"@id":"schema:UserInteraction"},"UserLikes":{"@id":"schema:UserLikes"},"UserPageVisits":{"@id":"schema:UserPageVisits"},"UserPlays":{"@id":"schema:UserPlays"},"UserPlusOnes":{"@id":"schema:UserPlusOnes"},"UserReview":{"@id":"schema:UserReview"},"UserTweets":{"@id":"schema:UserTweets"},"VacationRental":{"@id":"schema:VacationRental"},"VeganDiet":{"@id":"schema:VeganDiet"},"VegetarianDiet":{"@id":"schema:VegetarianDiet"},"Vehicle":{"@id":"schema:Vehicle"},"Vein":{"@id":"schema:Vein"},"VenueMap":{"@id":"schema:VenueMap"},"Vessel":{"@id":"schema:Vessel"},"VeterinaryCare":{"@id":"schema:VeterinaryCare"},"VideoGallery":{"@id":"schema:VideoGallery"},"VideoGame":{"@id":"schema:VideoGame"},"VideoGameClip":{"@id":"schema:VideoGameClip"},"VideoGameSeries":{"@id":"schema:VideoGameSeries"},"VideoObject":{"@id":"schema:VideoObject"},"VideoObjectSnapshot":{"@id":"schema:VideoObjectSnapshot"},"ViewAction":{"@id":"schema:ViewAction"},"VinylFormat":{"@id":"schema:VinylFormat"},"ViolenceConsideration":{"@id":"schema:ViolenceConsideration"},"VirtualLocation":{"@id":"schema:VirtualLocation"},"Virus":{"@id":"schema:Virus"},"VisualArtsEvent":{"@id":"schema:VisualArtsEvent"},"VisualArtwork":{"@id":"schema:VisualArtwork"},"VitalSign":{"@id":"schema:VitalSign"},"Volcano":{"@id":"schema:Volcano"},"VoteAction":{"@id":"schema:VoteAction"},"WPAdBlock":{"@id":"schema:WPAdBlock"},"WPFooter":{"@id":"schema:WPFooter"},"WPHeader":{"@id":"schema:WPHeader"},"WPSideBar":{"@id":"schema:WPSideBar"},"WantAction":{"@id":"schema:WantAction"},"WarrantyPromise":{"@id":"schema:WarrantyPromise"},"WarrantyScope":{"@id":"schema:WarrantyScope"},"WatchAction":{"@id":"schema:WatchAction"},"Waterfall":{"@id":"schema:Waterfall"},"WeaponConsideration":{"@id":"schema:WeaponConsideration"},"WearAction":{"@id":"schema:WearAction"},"WearableMeasurementBack":{"@id":"schema:WearableMeasurementBack"},"WearableMeasurementChestOrBust":{"@id":"schema:WearableMeasurementChestOrBust"},"WearableMeasurementCollar":{"@id":"schema:WearableMeasurementCollar"},"WearableMeasurementCup":{"@id":"schema:WearableMeasurementCup"},"WearableMeasurementHeight":{"@id":"schema:WearableMeasurementHeight"},"WearableMeasurementHips":{"@id":"schema:WearableMeasurementHips"},"WearableMeasurementInseam":{"@id":"schema:WearableMeasurementInseam"},"WearableMeasurementLength":{"@id":"schema:WearableMeasurementLength"},"WearableMeasurementOutsideLeg":{"@id":"schema:WearableMeasurementOutsideLeg"},"WearableMeasurementSleeve":{"@id":"schema:WearableMeasurementSleeve"},"WearableMeasurementTypeEnumeration":{"@id":"schema:WearableMeasurementTypeEnumeration"},"WearableMeasurementWaist":{"@id":"schema:WearableMeasurementWaist"},"WearableMeasurementWidth":{"@id":"schema:WearableMeasurementWidth"},"WearableSizeGroupBig":{"@id":"schema:WearableSizeGroupBig"},"WearableSizeGroupBoys":{"@id":"schema:WearableSizeGroupBoys"},"WearableSizeGroupEnumeration":{"@id":"schema:WearableSizeGroupEnumeration"},"WearableSizeGroupExtraShort":{"@id":"schema:WearableSizeGroupExtraShort"},"WearableSizeGroupExtraTall":{"@id":"schema:WearableSizeGroupExtraTall"},"WearableSizeGroupGirls":{"@id":"schema:WearableSizeGroupGirls"},"WearableSizeGroupHusky":{"@id":"schema:WearableSizeGroupHusky"},"WearableSizeGroupInfants":{"@id":"schema:WearableSizeGroupInfants"},"WearableSizeGroupJuniors":{"@id":"schema:WearableSizeGroupJuniors"},"WearableSizeGroupMaternity":{"@id":"schema:WearableSizeGroupMaternity"},"WearableSizeGroupMens":{"@id":"schema:WearableSizeGroupMens"},"WearableSizeGroupMisses":{"@id":"schema:WearableSizeGroupMisses"},"WearableSizeGroupPetite":{"@id":"schema:WearableSizeGroupPetite"},"WearableSizeGroupPlus":{"@id":"schema:WearableSizeGroupPlus"},"WearableSizeGroupRegular":{"@id":"schema:WearableSizeGroupRegular"},"WearableSizeGroupShort":{"@id":"schema:WearableSizeGroupShort"},"WearableSizeGroupTall":{"@id":"schema:WearableSizeGroupTall"},"WearableSizeGroupWomens":{"@id":"schema:WearableSizeGroupWomens"},"WearableSizeSystemAU":{"@id":"schema:WearableSizeSystemAU"},"WearableSizeSystemBR":{"@id":"schema:WearableSizeSystemBR"},"WearableSizeSystemCN":{"@id":"schema:WearableSizeSystemCN"},"WearableSizeSystemContinental":{"@id":"schema:WearableSizeSystemContinental"},"WearableSizeSystemDE":{"@id":"schema:WearableSizeSystemDE"},"WearableSizeSystemEN13402":{"@id":"schema:WearableSizeSystemEN13402"},"WearableSizeSystemEnumeration":{"@id":"schema:WearableSizeSystemEnumeration"},"WearableSizeSystemEurope":{"@id":"schema:WearableSizeSystemEurope"},"WearableSizeSystemFR":{"@id":"schema:WearableSizeSystemFR"},"WearableSizeSystemGS1":{"@id":"schema:WearableSizeSystemGS1"},"WearableSizeSystemIT":{"@id":"schema:WearableSizeSystemIT"},"WearableSizeSystemJP":{"@id":"schema:WearableSizeSystemJP"},"WearableSizeSystemMX":{"@id":"schema:WearableSizeSystemMX"},"WearableSizeSystemUK":{"@id":"schema:WearableSizeSystemUK"},"WearableSizeSystemUS":{"@id":"schema:WearableSizeSystemUS"},"WebAPI":{"@id":"schema:WebAPI"},"WebApplication":{"@id":"schema:WebApplication"},"WebContent":{"@id":"schema:WebContent"},"WebPage":{"@id":"schema:WebPage"},"WebPageElement":{"@id":"schema:WebPageElement"},"WebSite":{"@id":"schema:WebSite"},"Wednesday":{"@id":"schema:Wednesday"},"WesternConventional":{"@id":"schema:WesternConventional"},"Wholesale":{"@id":"schema:Wholesale"},"WholesaleStore":{"@id":"schema:WholesaleStore"},"WinAction":{"@id":"schema:WinAction"},"Winery":{"@id":"schema:Winery"},"Withdrawn":{"@id":"schema:Withdrawn"},"WorkBasedProgram":{"@id":"schema:WorkBasedProgram"},"WorkersUnion":{"@id":"schema:WorkersUnion"},"WriteAction":{"@id":"schema:WriteAction"},"WritePermission":{"@id":"schema:WritePermission"},"XPathType":{"@id":"schema:XPathType"},"XRay":{"@id":"schema:XRay"},"ZoneBoardingPolicy":{"@id":"schema:ZoneBoardingPolicy"},"Zoo":{"@id":"schema:Zoo"},"about":{"@id":"schema:about"},"abridged":{"@id":"schema:abridged"},"abstract":{"@id":"schema:abstract"},"accelerationTime":{"@id":"schema:accelerationTime"},"acceptedAnswer":{"@id":"schema:acceptedAnswer"},"acceptedOffer":{"@id":"schema:acceptedOffer"},"acceptedPaymentMethod":{"@id":"schema:acceptedPaymentMethod"},"acceptsReservations":{"@id":"schema:acceptsReservations"},"accessCode":{"@id":"schema:accessCode"},"accessMode":{"@id":"schema:accessMode"},"accessModeSufficient":{"@id":"schema:accessModeSufficient"},"accessibilityAPI":{"@id":"schema:accessibilityAPI"},"accessibilityControl":{"@id":"schema:accessibilityControl"},"accessibilityFeature":{"@id":"schema:accessibilityFeature"},"accessibilityHazard":{"@id":"schema:accessibilityHazard"},"accessibilitySummary":{"@id":"schema:accessibilitySummary"},"accommodationCategory":{"@id":"schema:accommodationCategory"},"accommodationFloorPlan":{"@id":"schema:accommodationFloorPlan"},"accountId":{"@id":"schema:accountId"},"accountMinimumInflow":{"@id":"schema:accountMinimumInflow"},"accountOverdraftLimit":{"@id":"schema:accountOverdraftLimit"},"accountablePerson":{"@id":"schema:accountablePerson"},"acquireLicensePage":{"@id":"schema:acquireLicensePage","@type":"@id"},"acquiredFrom":{"@id":"schema:acquiredFrom"},"acrissCode":{"@id":"schema:acrissCode"},"actionAccessibilityRequirement":{"@id":"schema:actionAccessibilityRequirement"},"actionApplication":{"@id":"schema:actionApplication"},"actionOption":{"@id":"schema:actionOption"},"actionPlatform":{"@id":"schema:actionPlatform"},"actionStatus":{"@id":"schema:actionStatus"},"actionableFeedbackPolicy":{"@id":"schema:actionableFeedbackPolicy","@type":"@id"},"activeIngredient":{"@id":"schema:activeIngredient"},"activityDuration":{"@id":"schema:activityDuration"},"activityFrequency":{"@id":"schema:activityFrequency"},"actor":{"@id":"schema:actor"},"actors":{"@id":"schema:actors"},"addOn":{"@id":"schema:addOn"},"additionalName":{"@id":"schema:additionalName"},"additionalNumberOfGuests":{"@id":"schema:additionalNumberOfGuests"},"additionalProperty":{"@id":"schema:additionalProperty"},"additionalType":{"@id":"schema:additionalType"},"additionalVariable":{"@id":"schema:additionalVariable"},"address":{"@id":"schema:address"},"addressCountry":{"@id":"schema:addressCountry"},"addressLocality":{"@id":"schema:addressLocality"},"addressRegion":{"@id":"schema:addressRegion"},"administrationRoute":{"@id":"schema:administrationRoute"},"advanceBookingRequirement":{"@id":"schema:advanceBookingRequirement"},"adverseOutcome":{"@id":"schema:adverseOutcome"},"affectedBy":{"@id":"schema:affectedBy"},"affiliation":{"@id":"schema:affiliation"},"afterMedia":{"@id":"schema:afterMedia","@type":"@id"},"agent":{"@id":"schema:agent"},"aggregateRating":{"@id":"schema:aggregateRating"},"aircraft":{"@id":"schema:aircraft"},"album":{"@id":"schema:album"},"albumProductionType":{"@id":"schema:albumProductionType"},"albumRelease":{"@id":"schema:albumRelease"},"albumReleaseType":{"@id":"schema:albumReleaseType"},"albums":{"@id":"schema:albums"},"alcoholWarning":{"@id":"schema:alcoholWarning"},"algorithm":{"@id":"schema:algorithm"},"alignmentType":{"@id":"schema:alignmentType"},"alternateName":{"@id":"schema:alternateName"},"alternativeHeadline":{"@id":"schema:alternativeHeadline"},"alternativeOf":{"@id":"schema:alternativeOf"},"alumni":{"@id":"schema:alumni"},"alumniOf":{"@id":"schema:alumniOf"},"amenityFeature":{"@id":"schema:amenityFeature"},"amount":{"@id":"schema:amount"},"amountOfThisGood":{"@id":"schema:amountOfThisGood"},"announcementLocation":{"@id":"schema:announcementLocation"},"annualPercentageRate":{"@id":"schema:annualPercentageRate"},"answerCount":{"@id":"schema:answerCount"},"answerExplanation":{"@id":"schema:answerExplanation"},"antagonist":{"@id":"schema:antagonist"},"appearance":{"@id":"schema:appearance"},"applicableCountry":{"@id":"schema:applicableCountry"},"applicableLocation":{"@id":"schema:applicableLocation"},"applicantLocationRequirements":{"@id":"schema:applicantLocationRequirements"},"application":{"@id":"schema:application"},"applicationCategory":{"@id":"schema:applicationCategory"},"applicationContact":{"@id":"schema:applicationContact"},"applicationDeadline":{"@id":"schema:applicationDeadline","@type":"Date"},"applicationStartDate":{"@id":"schema:applicationStartDate","@type":"Date"},"applicationSubCategory":{"@id":"schema:applicationSubCategory"},"applicationSuite":{"@id":"schema:applicationSuite"},"appliesToDeliveryMethod":{"@id":"schema:appliesToDeliveryMethod"},"appliesToPaymentMethod":{"@id":"schema:appliesToPaymentMethod"},"archiveHeld":{"@id":"schema:archiveHeld"},"archivedAt":{"@id":"schema:archivedAt","@type":"@id"},"area":{"@id":"schema:area"},"areaServed":{"@id":"schema:areaServed"},"arrivalAirport":{"@id":"schema:arrivalAirport"},"arrivalBoatTerminal":{"@id":"schema:arrivalBoatTerminal"},"arrivalBusStop":{"@id":"schema:arrivalBusStop"},"arrivalGate":{"@id":"schema:arrivalGate"},"arrivalPlatform":{"@id":"schema:arrivalPlatform"},"arrivalStation":{"@id":"schema:arrivalStation"},"arrivalTerminal":{"@id":"schema:arrivalTerminal"},"arrivalTime":{"@id":"schema:arrivalTime"},"artEdition":{"@id":"schema:artEdition"},"artMedium":{"@id":"schema:artMedium"},"arterialBranch":{"@id":"schema:arterialBranch"},"artform":{"@id":"schema:artform"},"articleBody":{"@id":"schema:articleBody"},"articleSection":{"@id":"schema:articleSection"},"artist":{"@id":"schema:artist"},"artworkSurface":{"@id":"schema:artworkSurface"},"asin":{"@id":"schema:asin"},"aspect":{"@id":"schema:aspect"},"assembly":{"@id":"schema:assembly"},"assemblyVersion":{"@id":"schema:assemblyVersion"},"assesses":{"@id":"schema:assesses"},"associatedAnatomy":{"@id":"schema:associatedAnatomy"},"associatedArticle":{"@id":"schema:associatedArticle"},"associatedClaimReview":{"@id":"schema:associatedClaimReview"},"associatedDisease":{"@id":"schema:associatedDisease","@type":"@id"},"associatedMedia":{"@id":"schema:associatedMedia"},"associatedMediaReview":{"@id":"schema:associatedMediaReview"},"associatedPathophysiology":{"@id":"schema:associatedPathophysiology"},"associatedReview":{"@id":"schema:associatedReview"},"athlete":{"@id":"schema:athlete"},"attendee":{"@id":"schema:attendee"},"attendees":{"@id":"schema:attendees"},"audience":{"@id":"schema:audience"},"audienceType":{"@id":"schema:audienceType"},"audio":{"@id":"schema:audio"},"authenticator":{"@id":"schema:authenticator"},"author":{"@id":"schema:author"},"availability":{"@id":"schema:availability"},"availabilityEnds":{"@id":"schema:availabilityEnds","@type":"Date"},"availabilityStarts":{"@id":"schema:availabilityStarts","@type":"Date"},"availableAtOrFrom":{"@id":"schema:availableAtOrFrom"},"availableChannel":{"@id":"schema:availableChannel"},"availableDeliveryMethod":{"@id":"schema:availableDeliveryMethod"},"availableFrom":{"@id":"schema:availableFrom"},"availableIn":{"@id":"schema:availableIn"},"availableLanguage":{"@id":"schema:availableLanguage"},"availableOnDevice":{"@id":"schema:availableOnDevice"},"availableService":{"@id":"schema:availableService"},"availableStrength":{"@id":"schema:availableStrength"},"availableTest":{"@id":"schema:availableTest"},"availableThrough":{"@id":"schema:availableThrough"},"award":{"@id":"schema:award"},"awards":{"@id":"schema:awards"},"awayTeam":{"@id":"schema:awayTeam"},"backstory":{"@id":"schema:backstory"},"bankAccountType":{"@id":"schema:bankAccountType"},"baseSalary":{"@id":"schema:baseSalary"},"bccRecipient":{"@id":"schema:bccRecipient"},"bed":{"@id":"schema:bed"},"beforeMedia":{"@id":"schema:beforeMedia","@type":"@id"},"beneficiaryBank":{"@id":"schema:beneficiaryBank"},"benefits":{"@id":"schema:benefits"},"benefitsSummaryUrl":{"@id":"schema:benefitsSummaryUrl","@type":"@id"},"bestRating":{"@id":"schema:bestRating"},"billingAddress":{"@id":"schema:billingAddress"},"billingDuration":{"@id":"schema:billingDuration"},"billingIncrement":{"@id":"schema:billingIncrement"},"billingPeriod":{"@id":"schema:billingPeriod"},"billingStart":{"@id":"schema:billingStart"},"bioChemInteraction":{"@id":"schema:bioChemInteraction"},"bioChemSimilarity":{"@id":"schema:bioChemSimilarity"},"biologicalRole":{"@id":"schema:biologicalRole"},"biomechnicalClass":{"@id":"schema:biomechnicalClass"},"birthDate":{"@id":"schema:birthDate","@type":"Date"},"birthPlace":{"@id":"schema:birthPlace"},"bitrate":{"@id":"schema:bitrate"},"blogPost":{"@id":"schema:blogPost"},"blogPosts":{"@id":"schema:blogPosts"},"bloodSupply":{"@id":"schema:bloodSupply"},"boardingGroup":{"@id":"schema:boardingGroup"},"boardingPolicy":{"@id":"schema:boardingPolicy"},"bodyLocation":{"@id":"schema:bodyLocation"},"bodyType":{"@id":"schema:bodyType"},"bookEdition":{"@id":"schema:bookEdition"},"bookFormat":{"@id":"schema:bookFormat"},"bookingAgent":{"@id":"schema:bookingAgent"},"bookingTime":{"@id":"schema:bookingTime"},"borrower":{"@id":"schema:borrower"},"box":{"@id":"schema:box"},"branch":{"@id":"schema:branch"},"branchCode":{"@id":"schema:branchCode"},"branchOf":{"@id":"schema:branchOf"},"brand":{"@id":"schema:brand"},"breadcrumb":{"@id":"schema:breadcrumb"},"breastfeedingWarning":{"@id":"schema:breastfeedingWarning"},"broadcastAffiliateOf":{"@id":"schema:broadcastAffiliateOf"},"broadcastChannelId":{"@id":"schema:broadcastChannelId"},"broadcastDisplayName":{"@id":"schema:broadcastDisplayName"},"broadcastFrequency":{"@id":"schema:broadcastFrequency"},"broadcastFrequencyValue":{"@id":"schema:broadcastFrequencyValue"},"broadcastOfEvent":{"@id":"schema:broadcastOfEvent"},"broadcastServiceTier":{"@id":"schema:broadcastServiceTier"},"broadcastSignalModulation":{"@id":"schema:broadcastSignalModulation"},"broadcastSubChannel":{"@id":"schema:broadcastSubChannel"},"broadcastTimezone":{"@id":"schema:broadcastTimezone"},"broadcaster":{"@id":"schema:broadcaster"},"broker":{"@id":"schema:broker"},"browserRequirements":{"@id":"schema:browserRequirements"},"busName":{"@id":"schema:busName"},"busNumber":{"@id":"schema:busNumber"},"businessDays":{"@id":"schema:businessDays"},"businessFunction":{"@id":"schema:businessFunction"},"buyer":{"@id":"schema:buyer"},"byArtist":{"@id":"schema:byArtist"},"byDay":{"@id":"schema:byDay"},"byMonth":{"@id":"schema:byMonth"},"byMonthDay":{"@id":"schema:byMonthDay"},"byMonthWeek":{"@id":"schema:byMonthWeek"},"callSign":{"@id":"schema:callSign"},"calories":{"@id":"schema:calories"},"candidate":{"@id":"schema:candidate"},"caption":{"@id":"schema:caption"},"carbohydrateContent":{"@id":"schema:carbohydrateContent"},"cargoVolume":{"@id":"schema:cargoVolume"},"carrier":{"@id":"schema:carrier"},"carrierRequirements":{"@id":"schema:carrierRequirements"},"cashBack":{"@id":"schema:cashBack"},"catalog":{"@id":"schema:catalog"},"catalogNumber":{"@id":"schema:catalogNumber"},"category":{"@id":"schema:category"},"causeOf":{"@id":"schema:causeOf"},"ccRecipient":{"@id":"schema:ccRecipient"},"character":{"@id":"schema:character"},"characterAttribute":{"@id":"schema:characterAttribute"},"characterName":{"@id":"schema:characterName"},"cheatCode":{"@id":"schema:cheatCode"},"checkinTime":{"@id":"schema:checkinTime"},"checkoutPageURLTemplate":{"@id":"schema:checkoutPageURLTemplate"},"checkoutTime":{"@id":"schema:checkoutTime"},"chemicalComposition":{"@id":"schema:chemicalComposition"},"chemicalRole":{"@id":"schema:chemicalRole"},"childMaxAge":{"@id":"schema:childMaxAge"},"childMinAge":{"@id":"schema:childMinAge"},"childTaxon":{"@id":"schema:childTaxon"},"children":{"@id":"schema:children"},"cholesterolContent":{"@id":"schema:cholesterolContent"},"circle":{"@id":"schema:circle"},"citation":{"@id":"schema:citation"},"claimInterpreter":{"@id":"schema:claimInterpreter"},"claimReviewed":{"@id":"schema:claimReviewed"},"clincalPharmacology":{"@id":"schema:clincalPharmacology"},"clinicalPharmacology":{"@id":"schema:clinicalPharmacology"},"clipNumber":{"@id":"schema:clipNumber"},"closes":{"@id":"schema:closes"},"coach":{"@id":"schema:coach"},"code":{"@id":"schema:code"},"codeRepository":{"@id":"schema:codeRepository","@type":"@id"},"codeSampleType":{"@id":"schema:codeSampleType"},"codeValue":{"@id":"schema:codeValue"},"codingSystem":{"@id":"schema:codingSystem"},"colleague":{"@id":"schema:colleague","@type":"@id"},"colleagues":{"@id":"schema:colleagues"},"collection":{"@id":"schema:collection"},"collectionSize":{"@id":"schema:collectionSize"},"color":{"@id":"schema:color"},"colorist":{"@id":"schema:colorist"},"comment":{"@id":"schema:comment"},"commentCount":{"@id":"schema:commentCount"},"commentText":{"@id":"schema:commentText"},"commentTime":{"@id":"schema:commentTime","@type":"Date"},"competencyRequired":{"@id":"schema:competencyRequired"},"competitor":{"@id":"schema:competitor"},"composer":{"@id":"schema:composer"},"comprisedOf":{"@id":"schema:comprisedOf"},"conditionsOfAccess":{"@id":"schema:conditionsOfAccess"},"confirmationNumber":{"@id":"schema:confirmationNumber"},"connectedTo":{"@id":"schema:connectedTo"},"constraintProperty":{"@id":"schema:constraintProperty","@type":"@id"},"contactOption":{"@id":"schema:contactOption"},"contactPoint":{"@id":"schema:contactPoint"},"contactPoints":{"@id":"schema:contactPoints"},"contactType":{"@id":"schema:contactType"},"contactlessPayment":{"@id":"schema:contactlessPayment"},"containedIn":{"@id":"schema:containedIn"},"containedInPlace":{"@id":"schema:containedInPlace"},"containsPlace":{"@id":"schema:containsPlace"},"containsSeason":{"@id":"schema:containsSeason"},"contentLocation":{"@id":"schema:contentLocation"},"contentRating":{"@id":"schema:contentRating"},"contentReferenceTime":{"@id":"schema:contentReferenceTime"},"contentSize":{"@id":"schema:contentSize"},"contentType":{"@id":"schema:contentType"},"contentUrl":{"@id":"schema:contentUrl","@type":"@id"},"contraindication":{"@id":"schema:contraindication"},"contributor":{"@id":"schema:contributor"},"cookTime":{"@id":"schema:cookTime"},"cookingMethod":{"@id":"schema:cookingMethod"},"copyrightHolder":{"@id":"schema:copyrightHolder"},"copyrightNotice":{"@id":"schema:copyrightNotice"},"copyrightYear":{"@id":"schema:copyrightYear"},"correction":{"@id":"schema:correction"},"correctionsPolicy":{"@id":"schema:correctionsPolicy","@type":"@id"},"costCategory":{"@id":"schema:costCategory"},"costCurrency":{"@id":"schema:costCurrency"},"costOrigin":{"@id":"schema:costOrigin"},"costPerUnit":{"@id":"schema:costPerUnit"},"countriesNotSupported":{"@id":"schema:countriesNotSupported"},"countriesSupported":{"@id":"schema:countriesSupported"},"countryOfAssembly":{"@id":"schema:countryOfAssembly"},"countryOfLastProcessing":{"@id":"schema:countryOfLastProcessing"},"countryOfOrigin":{"@id":"schema:countryOfOrigin"},"course":{"@id":"schema:course"},"courseCode":{"@id":"schema:courseCode"},"courseMode":{"@id":"schema:courseMode"},"coursePrerequisites":{"@id":"schema:coursePrerequisites"},"courseSchedule":{"@id":"schema:courseSchedule"},"courseWorkload":{"@id":"schema:courseWorkload"},"coverageEndTime":{"@id":"schema:coverageEndTime"},"coverageStartTime":{"@id":"schema:coverageStartTime"},"creativeWorkStatus":{"@id":"schema:creativeWorkStatus"},"creator":{"@id":"schema:creator"},"credentialCategory":{"@id":"schema:credentialCategory"},"creditText":{"@id":"schema:creditText"},"creditedTo":{"@id":"schema:creditedTo"},"cssSelector":{"@id":"schema:cssSelector"},"currenciesAccepted":{"@id":"schema:currenciesAccepted"},"currency":{"@id":"schema:currency"},"currentExchangeRate":{"@id":"schema:currentExchangeRate"},"customer":{"@id":"schema:customer"},"customerRemorseReturnFees":{"@id":"schema:customerRemorseReturnFees"},"customerRemorseReturnLabelSource":{"@id":"schema:customerRemorseReturnLabelSource"},"customerRemorseReturnShippingFeesAmount":{"@id":"schema:customerRemorseReturnShippingFeesAmount"},"cutoffTime":{"@id":"schema:cutoffTime"},"cvdCollectionDate":{"@id":"schema:cvdCollectionDate"},"cvdFacilityCounty":{"@id":"schema:cvdFacilityCounty"},"cvdFacilityId":{"@id":"schema:cvdFacilityId"},"cvdNumBeds":{"@id":"schema:cvdNumBeds"},"cvdNumBedsOcc":{"@id":"schema:cvdNumBedsOcc"},"cvdNumC19Died":{"@id":"schema:cvdNumC19Died"},"cvdNumC19HOPats":{"@id":"schema:cvdNumC19HOPats"},"cvdNumC19HospPats":{"@id":"schema:cvdNumC19HospPats"},"cvdNumC19MechVentPats":{"@id":"schema:cvdNumC19MechVentPats"},"cvdNumC19OFMechVentPats":{"@id":"schema:cvdNumC19OFMechVentPats"},"cvdNumC19OverflowPats":{"@id":"schema:cvdNumC19OverflowPats"},"cvdNumICUBeds":{"@id":"schema:cvdNumICUBeds"},"cvdNumICUBedsOcc":{"@id":"schema:cvdNumICUBedsOcc"},"cvdNumTotBeds":{"@id":"schema:cvdNumTotBeds"},"cvdNumVent":{"@id":"schema:cvdNumVent"},"cvdNumVentUse":{"@id":"schema:cvdNumVentUse"},"dataFeedElement":{"@id":"schema:dataFeedElement"},"dataset":{"@id":"schema:dataset"},"datasetTimeInterval":{"@id":"schema:datasetTimeInterval"},"dateCreated":{"@id":"schema:dateCreated","@type":"Date"},"dateDeleted":{"@id":"schema:dateDeleted","@type":"Date"},"dateIssued":{"@id":"schema:dateIssued","@type":"Date"},"dateModified":{"@id":"schema:dateModified","@type":"Date"},"datePosted":{"@id":"schema:datePosted","@type":"Date"},"datePublished":{"@id":"schema:datePublished","@type":"Date"},"dateRead":{"@id":"schema:dateRead","@type":"Date"},"dateReceived":{"@id":"schema:dateReceived"},"dateSent":{"@id":"schema:dateSent"},"dateVehicleFirstRegistered":{"@id":"schema:dateVehicleFirstRegistered","@type":"Date"},"dateline":{"@id":"schema:dateline"},"dayOfWeek":{"@id":"schema:dayOfWeek"},"deathDate":{"@id":"schema:deathDate","@type":"Date"},"deathPlace":{"@id":"schema:deathPlace"},"defaultValue":{"@id":"schema:defaultValue"},"deliveryAddress":{"@id":"schema:deliveryAddress"},"deliveryLeadTime":{"@id":"schema:deliveryLeadTime"},"deliveryMethod":{"@id":"schema:deliveryMethod"},"deliveryStatus":{"@id":"schema:deliveryStatus"},"deliveryTime":{"@id":"schema:deliveryTime"},"department":{"@id":"schema:department"},"departureAirport":{"@id":"schema:departureAirport"},"departureBoatTerminal":{"@id":"schema:departureBoatTerminal"},"departureBusStop":{"@id":"schema:departureBusStop"},"departureGate":{"@id":"schema:departureGate"},"departurePlatform":{"@id":"schema:departurePlatform"},"departureStation":{"@id":"schema:departureStation"},"departureTerminal":{"@id":"schema:departureTerminal"},"departureTime":{"@id":"schema:departureTime"},"dependencies":{"@id":"schema:dependencies"},"depth":{"@id":"schema:depth"},"description":{"@id":"schema:description"},"device":{"@id":"schema:device"},"diagnosis":{"@id":"schema:diagnosis"},"diagram":{"@id":"schema:diagram"},"diet":{"@id":"schema:diet"},"dietFeatures":{"@id":"schema:dietFeatures"},"differentialDiagnosis":{"@id":"schema:differentialDiagnosis"},"directApply":{"@id":"schema:directApply"},"director":{"@id":"schema:director"},"directors":{"@id":"schema:directors"},"disambiguatingDescription":{"@id":"schema:disambiguatingDescription"},"discount":{"@id":"schema:discount"},"discountCode":{"@id":"schema:discountCode"},"discountCurrency":{"@id":"schema:discountCurrency"},"discusses":{"@id":"schema:discusses"},"discussionUrl":{"@id":"schema:discussionUrl","@type":"@id"},"diseasePreventionInfo":{"@id":"schema:diseasePreventionInfo","@type":"@id"},"diseaseSpreadStatistics":{"@id":"schema:diseaseSpreadStatistics","@type":"@id"},"dissolutionDate":{"@id":"schema:dissolutionDate","@type":"Date"},"distance":{"@id":"schema:distance"},"distinguishingSign":{"@id":"schema:distinguishingSign"},"distribution":{"@id":"schema:distribution"},"diversityPolicy":{"@id":"schema:diversityPolicy","@type":"@id"},"diversityStaffingReport":{"@id":"schema:diversityStaffingReport","@type":"@id"},"documentation":{"@id":"schema:documentation","@type":"@id"},"doesNotShip":{"@id":"schema:doesNotShip"},"domainIncludes":{"@id":"schema:domainIncludes"},"domiciledMortgage":{"@id":"schema:domiciledMortgage"},"doorTime":{"@id":"schema:doorTime"},"dosageForm":{"@id":"schema:dosageForm"},"doseSchedule":{"@id":"schema:doseSchedule"},"doseUnit":{"@id":"schema:doseUnit"},"doseValue":{"@id":"schema:doseValue"},"downPayment":{"@id":"schema:downPayment"},"downloadUrl":{"@id":"schema:downloadUrl","@type":"@id"},"downvoteCount":{"@id":"schema:downvoteCount"},"drainsTo":{"@id":"schema:drainsTo"},"driveWheelConfiguration":{"@id":"schema:driveWheelConfiguration"},"dropoffLocation":{"@id":"schema:dropoffLocation"},"dropoffTime":{"@id":"schema:dropoffTime"},"drug":{"@id":"schema:drug"},"drugClass":{"@id":"schema:drugClass"},"drugUnit":{"@id":"schema:drugUnit"},"duns":{"@id":"schema:duns"},"duplicateTherapy":{"@id":"schema:duplicateTherapy"},"duration":{"@id":"schema:duration"},"durationOfWarranty":{"@id":"schema:durationOfWarranty"},"duringMedia":{"@id":"schema:duringMedia","@type":"@id"},"earlyPrepaymentPenalty":{"@id":"schema:earlyPrepaymentPenalty"},"editEIDR":{"@id":"schema:editEIDR"},"editor":{"@id":"schema:editor"},"eduQuestionType":{"@id":"schema:eduQuestionType"},"educationRequirements":{"@id":"schema:educationRequirements"},"educationalAlignment":{"@id":"schema:educationalAlignment"},"educationalCredentialAwarded":{"@id":"schema:educationalCredentialAwarded"},"educationalFramework":{"@id":"schema:educationalFramework"},"educationalLevel":{"@id":"schema:educationalLevel"},"educationalProgramMode":{"@id":"schema:educationalProgramMode"},"educationalRole":{"@id":"schema:educationalRole"},"educationalUse":{"@id":"schema:educationalUse"},"elevation":{"@id":"schema:elevation"},"eligibilityToWorkRequirement":{"@id":"schema:eligibilityToWorkRequirement"},"eligibleCustomerType":{"@id":"schema:eligibleCustomerType"},"eligibleDuration":{"@id":"schema:eligibleDuration"},"eligibleQuantity":{"@id":"schema:eligibleQuantity"},"eligibleRegion":{"@id":"schema:eligibleRegion"},"eligibleTransactionVolume":{"@id":"schema:eligibleTransactionVolume"},"email":{"@id":"schema:email"},"embedUrl":{"@id":"schema:embedUrl","@type":"@id"},"embeddedTextCaption":{"@id":"schema:embeddedTextCaption"},"emissionsCO2":{"@id":"schema:emissionsCO2"},"employee":{"@id":"schema:employee"},"employees":{"@id":"schema:employees"},"employerOverview":{"@id":"schema:employerOverview"},"employmentType":{"@id":"schema:employmentType"},"employmentUnit":{"@id":"schema:employmentUnit"},"encodesBioChemEntity":{"@id":"schema:encodesBioChemEntity"},"encodesCreativeWork":{"@id":"schema:encodesCreativeWork"},"encoding":{"@id":"schema:encoding"},"encodingFormat":{"@id":"schema:encodingFormat"},"encodingType":{"@id":"schema:encodingType"},"encodings":{"@id":"schema:encodings"},"endDate":{"@id":"schema:endDate","@type":"Date"},"endOffset":{"@id":"schema:endOffset"},"endTime":{"@id":"schema:endTime"},"endorsee":{"@id":"schema:endorsee"},"endorsers":{"@id":"schema:endorsers"},"energyEfficiencyScaleMax":{"@id":"schema:energyEfficiencyScaleMax"},"energyEfficiencyScaleMin":{"@id":"schema:energyEfficiencyScaleMin"},"engineDisplacement":{"@id":"schema:engineDisplacement"},"enginePower":{"@id":"schema:enginePower"},"engineType":{"@id":"schema:engineType"},"entertainmentBusiness":{"@id":"schema:entertainmentBusiness"},"epidemiology":{"@id":"schema:epidemiology"},"episode":{"@id":"schema:episode"},"episodeNumber":{"@id":"schema:episodeNumber"},"episodes":{"@id":"schema:episodes"},"equal":{"@id":"schema:equal"},"error":{"@id":"schema:error"},"estimatedCost":{"@id":"schema:estimatedCost"},"estimatedFlightDuration":{"@id":"schema:estimatedFlightDuration"},"estimatedSalary":{"@id":"schema:estimatedSalary"},"estimatesRiskOf":{"@id":"schema:estimatesRiskOf"},"ethicsPolicy":{"@id":"schema:ethicsPolicy","@type":"@id"},"event":{"@id":"schema:event"},"eventAttendanceMode":{"@id":"schema:eventAttendanceMode"},"eventSchedule":{"@id":"schema:eventSchedule"},"eventStatus":{"@id":"schema:eventStatus"},"events":{"@id":"schema:events"},"evidenceLevel":{"@id":"schema:evidenceLevel"},"evidenceOrigin":{"@id":"schema:evidenceOrigin"},"exampleOfWork":{"@id":"schema:exampleOfWork"},"exceptDate":{"@id":"schema:exceptDate","@type":"Date"},"exchangeRateSpread":{"@id":"schema:exchangeRateSpread"},"executableLibraryName":{"@id":"schema:executableLibraryName"},"exerciseCourse":{"@id":"schema:exerciseCourse"},"exercisePlan":{"@id":"schema:exercisePlan"},"exerciseRelatedDiet":{"@id":"schema:exerciseRelatedDiet"},"exerciseType":{"@id":"schema:exerciseType"},"exifData":{"@id":"schema:exifData"},"expectedArrivalFrom":{"@id":"schema:expectedArrivalFrom","@type":"Date"},"expectedArrivalUntil":{"@id":"schema:expectedArrivalUntil","@type":"Date"},"expectedPrognosis":{"@id":"schema:expectedPrognosis"},"expectsAcceptanceOf":{"@id":"schema:expectsAcceptanceOf"},"experienceInPlaceOfEducation":{"@id":"schema:experienceInPlaceOfEducation"},"experienceRequirements":{"@id":"schema:experienceRequirements"},"expertConsiderations":{"@id":"schema:expertConsiderations"},"expires":{"@id":"schema:expires","@type":"Date"},"expressedIn":{"@id":"schema:expressedIn"},"familyName":{"@id":"schema:familyName"},"fatContent":{"@id":"schema:fatContent"},"faxNumber":{"@id":"schema:faxNumber"},"featureList":{"@id":"schema:featureList"},"feesAndCommissionsSpecification":{"@id":"schema:feesAndCommissionsSpecification"},"fiberContent":{"@id":"schema:fiberContent"},"fileFormat":{"@id":"schema:fileFormat"},"fileSize":{"@id":"schema:fileSize"},"financialAidEligible":{"@id":"schema:financialAidEligible"},"firstAppearance":{"@id":"schema:firstAppearance"},"firstPerformance":{"@id":"schema:firstPerformance"},"flightDistance":{"@id":"schema:flightDistance"},"flightNumber":{"@id":"schema:flightNumber"},"floorLevel":{"@id":"schema:floorLevel"},"floorLimit":{"@id":"schema:floorLimit"},"floorSize":{"@id":"schema:floorSize"},"followee":{"@id":"schema:followee"},"follows":{"@id":"schema:follows"},"followup":{"@id":"schema:followup"},"foodEstablishment":{"@id":"schema:foodEstablishment"},"foodEvent":{"@id":"schema:foodEvent"},"foodWarning":{"@id":"schema:foodWarning"},"founder":{"@id":"schema:founder"},"founders":{"@id":"schema:founders"},"foundingDate":{"@id":"schema:foundingDate","@type":"Date"},"foundingLocation":{"@id":"schema:foundingLocation"},"free":{"@id":"schema:free"},"freeShippingThreshold":{"@id":"schema:freeShippingThreshold"},"frequency":{"@id":"schema:frequency"},"fromLocation":{"@id":"schema:fromLocation"},"fuelCapacity":{"@id":"schema:fuelCapacity"},"fuelConsumption":{"@id":"schema:fuelConsumption"},"fuelEfficiency":{"@id":"schema:fuelEfficiency"},"fuelType":{"@id":"schema:fuelType"},"functionalClass":{"@id":"schema:functionalClass"},"fundedItem":{"@id":"schema:fundedItem"},"funder":{"@id":"schema:funder"},"funding":{"@id":"schema:funding"},"game":{"@id":"schema:game"},"gameAvailabilityType":{"@id":"schema:gameAvailabilityType"},"gameEdition":{"@id":"schema:gameEdition"},"gameItem":{"@id":"schema:gameItem"},"gameLocation":{"@id":"schema:gameLocation","@type":"@id"},"gamePlatform":{"@id":"schema:gamePlatform"},"gameServer":{"@id":"schema:gameServer"},"gameTip":{"@id":"schema:gameTip"},"gender":{"@id":"schema:gender"},"genre":{"@id":"schema:genre"},"geo":{"@id":"schema:geo"},"geoContains":{"@id":"schema:geoContains"},"geoCoveredBy":{"@id":"schema:geoCoveredBy"},"geoCovers":{"@id":"schema:geoCovers"},"geoCrosses":{"@id":"schema:geoCrosses"},"geoDisjoint":{"@id":"schema:geoDisjoint"},"geoEquals":{"@id":"schema:geoEquals"},"geoIntersects":{"@id":"schema:geoIntersects"},"geoMidpoint":{"@id":"schema:geoMidpoint"},"geoOverlaps":{"@id":"schema:geoOverlaps"},"geoRadius":{"@id":"schema:geoRadius"},"geoTouches":{"@id":"schema:geoTouches"},"geoWithin":{"@id":"schema:geoWithin"},"geographicArea":{"@id":"schema:geographicArea"},"gettingTestedInfo":{"@id":"schema:gettingTestedInfo","@type":"@id"},"givenName":{"@id":"schema:givenName"},"globalLocationNumber":{"@id":"schema:globalLocationNumber"},"governmentBenefitsInfo":{"@id":"schema:governmentBenefitsInfo"},"gracePeriod":{"@id":"schema:gracePeriod"},"grantee":{"@id":"schema:grantee"},"greater":{"@id":"schema:greater"},"greaterOrEqual":{"@id":"schema:greaterOrEqual"},"gtin":{"@id":"schema:gtin"},"gtin12":{"@id":"schema:gtin12"},"gtin13":{"@id":"schema:gtin13"},"gtin14":{"@id":"schema:gtin14"},"gtin8":{"@id":"schema:gtin8"},"guideline":{"@id":"schema:guideline"},"guidelineDate":{"@id":"schema:guidelineDate","@type":"Date"},"guidelineSubject":{"@id":"schema:guidelineSubject"},"handlingTime":{"@id":"schema:handlingTime"},"hasAdultConsideration":{"@id":"schema:hasAdultConsideration"},"hasBioChemEntityPart":{"@id":"schema:hasBioChemEntityPart"},"hasBioPolymerSequence":{"@id":"schema:hasBioPolymerSequence"},"hasBroadcastChannel":{"@id":"schema:hasBroadcastChannel"},"hasCategoryCode":{"@id":"schema:hasCategoryCode"},"hasCourse":{"@id":"schema:hasCourse"},"hasCourseInstance":{"@id":"schema:hasCourseInstance"},"hasCredential":{"@id":"schema:hasCredential"},"hasDefinedTerm":{"@id":"schema:hasDefinedTerm"},"hasDeliveryMethod":{"@id":"schema:hasDeliveryMethod"},"hasDigitalDocumentPermission":{"@id":"schema:hasDigitalDocumentPermission"},"hasDriveThroughService":{"@id":"schema:hasDriveThroughService"},"hasEnergyConsumptionDetails":{"@id":"schema:hasEnergyConsumptionDetails"},"hasEnergyEfficiencyCategory":{"@id":"schema:hasEnergyEfficiencyCategory"},"hasHealthAspect":{"@id":"schema:hasHealthAspect"},"hasMap":{"@id":"schema:hasMap","@type":"@id"},"hasMeasurement":{"@id":"schema:hasMeasurement"},"hasMenu":{"@id":"schema:hasMenu"},"hasMenuItem":{"@id":"schema:hasMenuItem"},"hasMenuSection":{"@id":"schema:hasMenuSection"},"hasMerchantReturnPolicy":{"@id":"schema:hasMerchantReturnPolicy"},"hasMolecularFunction":{"@id":"schema:hasMolecularFunction","@type":"@id"},"hasOccupation":{"@id":"schema:hasOccupation"},"hasOfferCatalog":{"@id":"schema:hasOfferCatalog"},"hasPOS":{"@id":"schema:hasPOS"},"hasPart":{"@id":"schema:hasPart"},"hasProductReturnPolicy":{"@id":"schema:hasProductReturnPolicy"},"hasRepresentation":{"@id":"schema:hasRepresentation"},"hasVariant":{"@id":"schema:hasVariant"},"headline":{"@id":"schema:headline"},"healthCondition":{"@id":"schema:healthCondition"},"healthPlanCoinsuranceOption":{"@id":"schema:healthPlanCoinsuranceOption"},"healthPlanCoinsuranceRate":{"@id":"schema:healthPlanCoinsuranceRate"},"healthPlanCopay":{"@id":"schema:healthPlanCopay"},"healthPlanCopayOption":{"@id":"schema:healthPlanCopayOption"},"healthPlanCostSharing":{"@id":"schema:healthPlanCostSharing"},"healthPlanDrugOption":{"@id":"schema:healthPlanDrugOption"},"healthPlanDrugTier":{"@id":"schema:healthPlanDrugTier"},"healthPlanId":{"@id":"schema:healthPlanId"},"healthPlanMarketingUrl":{"@id":"schema:healthPlanMarketingUrl","@type":"@id"},"healthPlanNetworkId":{"@id":"schema:healthPlanNetworkId"},"healthPlanNetworkTier":{"@id":"schema:healthPlanNetworkTier"},"healthPlanPharmacyCategory":{"@id":"schema:healthPlanPharmacyCategory"},"healthcareReportingData":{"@id":"schema:healthcareReportingData"},"height":{"@id":"schema:height"},"highPrice":{"@id":"schema:highPrice"},"hiringOrganization":{"@id":"schema:hiringOrganization"},"holdingArchive":{"@id":"schema:holdingArchive"},"homeLocation":{"@id":"schema:homeLocation"},"homeTeam":{"@id":"schema:homeTeam"},"honorificPrefix":{"@id":"schema:honorificPrefix"},"honorificSuffix":{"@id":"schema:honorificSuffix"},"hospitalAffiliation":{"@id":"schema:hospitalAffiliation"},"hostingOrganization":{"@id":"schema:hostingOrganization"},"hoursAvailable":{"@id":"schema:hoursAvailable"},"howPerformed":{"@id":"schema:howPerformed"},"httpMethod":{"@id":"schema:httpMethod"},"iataCode":{"@id":"schema:iataCode"},"icaoCode":{"@id":"schema:icaoCode"},"identifier":{"@id":"schema:identifier"},"identifyingExam":{"@id":"schema:identifyingExam"},"identifyingTest":{"@id":"schema:identifyingTest"},"illustrator":{"@id":"schema:illustrator"},"image":{"@id":"schema:image","@type":"@id"},"imagingTechnique":{"@id":"schema:imagingTechnique"},"inAlbum":{"@id":"schema:inAlbum"},"inBroadcastLineup":{"@id":"schema:inBroadcastLineup"},"inChI":{"@id":"schema:inChI"},"inChIKey":{"@id":"schema:inChIKey"},"inCodeSet":{"@id":"schema:inCodeSet","@type":"@id"},"inDefinedTermSet":{"@id":"schema:inDefinedTermSet","@type":"@id"},"inLanguage":{"@id":"schema:inLanguage"},"inPlaylist":{"@id":"schema:inPlaylist"},"inProductGroupWithID":{"@id":"schema:inProductGroupWithID"},"inStoreReturnsOffered":{"@id":"schema:inStoreReturnsOffered"},"inSupportOf":{"@id":"schema:inSupportOf"},"incentiveCompensation":{"@id":"schema:incentiveCompensation"},"incentives":{"@id":"schema:incentives"},"includedComposition":{"@id":"schema:includedComposition"},"includedDataCatalog":{"@id":"schema:includedDataCatalog"},"includedInDataCatalog":{"@id":"schema:includedInDataCatalog"},"includedInHealthInsurancePlan":{"@id":"schema:includedInHealthInsurancePlan"},"includedRiskFactor":{"@id":"schema:includedRiskFactor"},"includesAttraction":{"@id":"schema:includesAttraction"},"includesHealthPlanFormulary":{"@id":"schema:includesHealthPlanFormulary"},"includesHealthPlanNetwork":{"@id":"schema:includesHealthPlanNetwork"},"includesObject":{"@id":"schema:includesObject"},"increasesRiskOf":{"@id":"schema:increasesRiskOf"},"industry":{"@id":"schema:industry"},"ineligibleRegion":{"@id":"schema:ineligibleRegion"},"infectiousAgent":{"@id":"schema:infectiousAgent"},"infectiousAgentClass":{"@id":"schema:infectiousAgentClass"},"ingredients":{"@id":"schema:ingredients"},"inker":{"@id":"schema:inker"},"insertion":{"@id":"schema:insertion"},"installUrl":{"@id":"schema:installUrl","@type":"@id"},"instructor":{"@id":"schema:instructor"},"instrument":{"@id":"schema:instrument"},"intensity":{"@id":"schema:intensity"},"interactingDrug":{"@id":"schema:interactingDrug"},"interactionCount":{"@id":"schema:interactionCount"},"interactionService":{"@id":"schema:interactionService"},"interactionStatistic":{"@id":"schema:interactionStatistic"},"interactionType":{"@id":"schema:interactionType"},"interactivityType":{"@id":"schema:interactivityType"},"interestRate":{"@id":"schema:interestRate"},"interpretedAsClaim":{"@id":"schema:interpretedAsClaim"},"inventoryLevel":{"@id":"schema:inventoryLevel"},"inverseOf":{"@id":"schema:inverseOf"},"isAcceptingNewPatients":{"@id":"schema:isAcceptingNewPatients"},"isAccessibleForFree":{"@id":"schema:isAccessibleForFree"},"isAccessoryOrSparePartFor":{"@id":"schema:isAccessoryOrSparePartFor"},"isAvailableGenerically":{"@id":"schema:isAvailableGenerically"},"isBasedOn":{"@id":"schema:isBasedOn","@type":"@id"},"isBasedOnUrl":{"@id":"schema:isBasedOnUrl","@type":"@id"},"isConsumableFor":{"@id":"schema:isConsumableFor"},"isEncodedByBioChemEntity":{"@id":"schema:isEncodedByBioChemEntity"},"isFamilyFriendly":{"@id":"schema:isFamilyFriendly"},"isGift":{"@id":"schema:isGift"},"isInvolvedInBiologicalProcess":{"@id":"schema:isInvolvedInBiologicalProcess","@type":"@id"},"isLiveBroadcast":{"@id":"schema:isLiveBroadcast"},"isLocatedInSubcellularLocation":{"@id":"schema:isLocatedInSubcellularLocation","@type":"@id"},"isPartOf":{"@id":"schema:isPartOf","@type":"@id"},"isPartOfBioChemEntity":{"@id":"schema:isPartOfBioChemEntity"},"isPlanForApartment":{"@id":"schema:isPlanForApartment"},"isProprietary":{"@id":"schema:isProprietary"},"isRelatedTo":{"@id":"schema:isRelatedTo"},"isResizable":{"@id":"schema:isResizable"},"isSimilarTo":{"@id":"schema:isSimilarTo"},"isUnlabelledFallback":{"@id":"schema:isUnlabelledFallback"},"isVariantOf":{"@id":"schema:isVariantOf"},"isbn":{"@id":"schema:isbn"},"isicV4":{"@id":"schema:isicV4"},"iso6523Code":{"@id":"schema:iso6523Code"},"isrcCode":{"@id":"schema:isrcCode"},"issn":{"@id":"schema:issn"},"issueNumber":{"@id":"schema:issueNumber"},"issuedBy":{"@id":"schema:issuedBy"},"issuedThrough":{"@id":"schema:issuedThrough"},"iswcCode":{"@id":"schema:iswcCode"},"item":{"@id":"schema:item"},"itemCondition":{"@id":"schema:itemCondition"},"itemDefectReturnFees":{"@id":"schema:itemDefectReturnFees"},"itemDefectReturnLabelSource":{"@id":"schema:itemDefectReturnLabelSource"},"itemDefectReturnShippingFeesAmount":{"@id":"schema:itemDefectReturnShippingFeesAmount"},"itemListElement":{"@id":"schema:itemListElement"},"itemListOrder":{"@id":"schema:itemListOrder"},"itemLocation":{"@id":"schema:itemLocation"},"itemOffered":{"@id":"schema:itemOffered"},"itemReviewed":{"@id":"schema:itemReviewed"},"itemShipped":{"@id":"schema:itemShipped"},"itinerary":{"@id":"schema:itinerary"},"iupacName":{"@id":"schema:iupacName"},"jobBenefits":{"@id":"schema:jobBenefits"},"jobImmediateStart":{"@id":"schema:jobImmediateStart"},"jobLocation":{"@id":"schema:jobLocation"},"jobLocationType":{"@id":"schema:jobLocationType"},"jobStartDate":{"@id":"schema:jobStartDate"},"jobTitle":{"@id":"schema:jobTitle"},"jurisdiction":{"@id":"schema:jurisdiction"},"keywords":{"@id":"schema:keywords"},"knownVehicleDamages":{"@id":"schema:knownVehicleDamages"},"knows":{"@id":"schema:knows"},"knowsAbout":{"@id":"schema:knowsAbout"},"knowsLanguage":{"@id":"schema:knowsLanguage"},"labelDetails":{"@id":"schema:labelDetails","@type":"@id"},"landlord":{"@id":"schema:landlord"},"language":{"@id":"schema:language"},"lastReviewed":{"@id":"schema:lastReviewed","@type":"Date"},"latitude":{"@id":"schema:latitude"},"layoutImage":{"@id":"schema:layoutImage","@type":"@id"},"learningResourceType":{"@id":"schema:learningResourceType"},"leaseLength":{"@id":"schema:leaseLength"},"legalName":{"@id":"schema:legalName"},"legalStatus":{"@id":"schema:legalStatus"},"legislationApplies":{"@id":"schema:legislationApplies"},"legislationChanges":{"@id":"schema:legislationChanges"},"legislationConsolidates":{"@id":"schema:legislationConsolidates"},"legislationDate":{"@id":"schema:legislationDate","@type":"Date"},"legislationDateVersion":{"@id":"schema:legislationDateVersion","@type":"Date"},"legislationIdentifier":{"@id":"schema:legislationIdentifier"},"legislationJurisdiction":{"@id":"schema:legislationJurisdiction"},"legislationLegalForce":{"@id":"schema:legislationLegalForce"},"legislationLegalValue":{"@id":"schema:legislationLegalValue"},"legislationPassedBy":{"@id":"schema:legislationPassedBy"},"legislationResponsible":{"@id":"schema:legislationResponsible"},"legislationTransposes":{"@id":"schema:legislationTransposes"},"legislationType":{"@id":"schema:legislationType"},"leiCode":{"@id":"schema:leiCode"},"lender":{"@id":"schema:lender"},"lesser":{"@id":"schema:lesser"},"lesserOrEqual":{"@id":"schema:lesserOrEqual"},"letterer":{"@id":"schema:letterer"},"license":{"@id":"schema:license","@type":"@id"},"line":{"@id":"schema:line"},"linkRelationship":{"@id":"schema:linkRelationship"},"liveBlogUpdate":{"@id":"schema:liveBlogUpdate"},"loanMortgageMandateAmount":{"@id":"schema:loanMortgageMandateAmount"},"loanPaymentAmount":{"@id":"schema:loanPaymentAmount"},"loanPaymentFrequency":{"@id":"schema:loanPaymentFrequency"},"loanRepaymentForm":{"@id":"schema:loanRepaymentForm"},"loanTerm":{"@id":"schema:loanTerm"},"loanType":{"@id":"schema:loanType"},"location":{"@id":"schema:location"},"locationCreated":{"@id":"schema:locationCreated"},"lodgingUnitDescription":{"@id":"schema:lodgingUnitDescription"},"lodgingUnitType":{"@id":"schema:lodgingUnitType"},"logo":{"@id":"schema:logo","@type":"@id"},"longitude":{"@id":"schema:longitude"},"loser":{"@id":"schema:loser"},"lowPrice":{"@id":"schema:lowPrice"},"lyricist":{"@id":"schema:lyricist"},"lyrics":{"@id":"schema:lyrics"},"mainContentOfPage":{"@id":"schema:mainContentOfPage"},"mainEntity":{"@id":"schema:mainEntity"},"mainEntityOfPage":{"@id":"schema:mainEntityOfPage","@type":"@id"},"maintainer":{"@id":"schema:maintainer"},"makesOffer":{"@id":"schema:makesOffer"},"manufacturer":{"@id":"schema:manufacturer"},"map":{"@id":"schema:map","@type":"@id"},"mapType":{"@id":"schema:mapType"},"maps":{"@id":"schema:maps","@type":"@id"},"marginOfError":{"@id":"schema:marginOfError"},"masthead":{"@id":"schema:masthead","@type":"@id"},"material":{"@id":"schema:material"},"materialExtent":{"@id":"schema:materialExtent"},"mathExpression":{"@id":"schema:mathExpression"},"maxPrice":{"@id":"schema:maxPrice"},"maxValue":{"@id":"schema:maxValue"},"maximumAttendeeCapacity":{"@id":"schema:maximumAttendeeCapacity"},"maximumEnrollment":{"@id":"schema:maximumEnrollment"},"maximumIntake":{"@id":"schema:maximumIntake"},"maximumPhysicalAttendeeCapacity":{"@id":"schema:maximumPhysicalAttendeeCapacity"},"maximumVirtualAttendeeCapacity":{"@id":"schema:maximumVirtualAttendeeCapacity"},"mealService":{"@id":"schema:mealService"},"measuredProperty":{"@id":"schema:measuredProperty"},"measurementDenominator":{"@id":"schema:measurementDenominator"},"measurementMethod":{"@id":"schema:measurementMethod"},"measurementQualifier":{"@id":"schema:measurementQualifier"},"measurementTechnique":{"@id":"schema:measurementTechnique"},"mechanismOfAction":{"@id":"schema:mechanismOfAction"},"mediaAuthenticityCategory":{"@id":"schema:mediaAuthenticityCategory"},"mediaItemAppearance":{"@id":"schema:mediaItemAppearance"},"median":{"@id":"schema:median"},"medicalAudience":{"@id":"schema:medicalAudience"},"medicalSpecialty":{"@id":"schema:medicalSpecialty"},"medicineSystem":{"@id":"schema:medicineSystem"},"meetsEmissionStandard":{"@id":"schema:meetsEmissionStandard"},"member":{"@id":"schema:member"},"memberOf":{"@id":"schema:memberOf"},"members":{"@id":"schema:members"},"membershipNumber":{"@id":"schema:membershipNumber"},"membershipPointsEarned":{"@id":"schema:membershipPointsEarned"},"memoryRequirements":{"@id":"schema:memoryRequirements"},"mentions":{"@id":"schema:mentions"},"menu":{"@id":"schema:menu"},"menuAddOn":{"@id":"schema:menuAddOn"},"merchant":{"@id":"schema:merchant"},"merchantReturnDays":{"@id":"schema:merchantReturnDays","@type":"Date"},"merchantReturnLink":{"@id":"schema:merchantReturnLink","@type":"@id"},"messageAttachment":{"@id":"schema:messageAttachment"},"mileageFromOdometer":{"@id":"schema:mileageFromOdometer"},"minPrice":{"@id":"schema:minPrice"},"minValue":{"@id":"schema:minValue"},"minimumPaymentDue":{"@id":"schema:minimumPaymentDue"},"missionCoveragePrioritiesPolicy":{"@id":"schema:missionCoveragePrioritiesPolicy","@type":"@id"},"mobileUrl":{"@id":"schema:mobileUrl"},"model":{"@id":"schema:model"},"modelDate":{"@id":"schema:modelDate","@type":"Date"},"modifiedTime":{"@id":"schema:modifiedTime"},"molecularFormula":{"@id":"schema:molecularFormula"},"molecularWeight":{"@id":"schema:molecularWeight"},"monoisotopicMolecularWeight":{"@id":"schema:monoisotopicMolecularWeight"},"monthlyMinimumRepaymentAmount":{"@id":"schema:monthlyMinimumRepaymentAmount"},"monthsOfExperience":{"@id":"schema:monthsOfExperience"},"mpn":{"@id":"schema:mpn"},"multipleValues":{"@id":"schema:multipleValues"},"muscleAction":{"@id":"schema:muscleAction"},"musicArrangement":{"@id":"schema:musicArrangement"},"musicBy":{"@id":"schema:musicBy"},"musicCompositionForm":{"@id":"schema:musicCompositionForm"},"musicGroupMember":{"@id":"schema:musicGroupMember"},"musicReleaseFormat":{"@id":"schema:musicReleaseFormat"},"musicalKey":{"@id":"schema:musicalKey"},"naics":{"@id":"schema:naics"},"name":{"@id":"schema:name"},"namedPosition":{"@id":"schema:namedPosition"},"nationality":{"@id":"schema:nationality"},"naturalProgression":{"@id":"schema:naturalProgression"},"negativeNotes":{"@id":"schema:negativeNotes"},"nerve":{"@id":"schema:nerve"},"nerveMotor":{"@id":"schema:nerveMotor"},"netWorth":{"@id":"schema:netWorth"},"newsUpdatesAndGuidelines":{"@id":"schema:newsUpdatesAndGuidelines","@type":"@id"},"nextItem":{"@id":"schema:nextItem"},"noBylinesPolicy":{"@id":"schema:noBylinesPolicy","@type":"@id"},"nonEqual":{"@id":"schema:nonEqual"},"nonProprietaryName":{"@id":"schema:nonProprietaryName"},"nonprofitStatus":{"@id":"schema:nonprofitStatus"},"normalRange":{"@id":"schema:normalRange"},"nsn":{"@id":"schema:nsn"},"numAdults":{"@id":"schema:numAdults"},"numChildren":{"@id":"schema:numChildren"},"numConstraints":{"@id":"schema:numConstraints"},"numTracks":{"@id":"schema:numTracks"},"numberOfAccommodationUnits":{"@id":"schema:numberOfAccommodationUnits"},"numberOfAirbags":{"@id":"schema:numberOfAirbags"},"numberOfAvailableAccommodationUnits":{"@id":"schema:numberOfAvailableAccommodationUnits"},"numberOfAxles":{"@id":"schema:numberOfAxles"},"numberOfBathroomsTotal":{"@id":"schema:numberOfBathroomsTotal"},"numberOfBedrooms":{"@id":"schema:numberOfBedrooms"},"numberOfBeds":{"@id":"schema:numberOfBeds"},"numberOfCredits":{"@id":"schema:numberOfCredits"},"numberOfDoors":{"@id":"schema:numberOfDoors"},"numberOfEmployees":{"@id":"schema:numberOfEmployees"},"numberOfEpisodes":{"@id":"schema:numberOfEpisodes"},"numberOfForwardGears":{"@id":"schema:numberOfForwardGears"},"numberOfFullBathrooms":{"@id":"schema:numberOfFullBathrooms"},"numberOfItems":{"@id":"schema:numberOfItems"},"numberOfLoanPayments":{"@id":"schema:numberOfLoanPayments"},"numberOfPages":{"@id":"schema:numberOfPages"},"numberOfPartialBathrooms":{"@id":"schema:numberOfPartialBathrooms"},"numberOfPlayers":{"@id":"schema:numberOfPlayers"},"numberOfPreviousOwners":{"@id":"schema:numberOfPreviousOwners"},"numberOfRooms":{"@id":"schema:numberOfRooms"},"numberOfSeasons":{"@id":"schema:numberOfSeasons"},"numberedPosition":{"@id":"schema:numberedPosition"},"nutrition":{"@id":"schema:nutrition"},"object":{"@id":"schema:object"},"observationAbout":{"@id":"schema:observationAbout"},"observationDate":{"@id":"schema:observationDate"},"observationPeriod":{"@id":"schema:observationPeriod"},"occupancy":{"@id":"schema:occupancy"},"occupationLocation":{"@id":"schema:occupationLocation"},"occupationalCategory":{"@id":"schema:occupationalCategory"},"occupationalCredentialAwarded":{"@id":"schema:occupationalCredentialAwarded"},"offerCount":{"@id":"schema:offerCount"},"offeredBy":{"@id":"schema:offeredBy"},"offers":{"@id":"schema:offers"},"offersPrescriptionByMail":{"@id":"schema:offersPrescriptionByMail"},"openingHours":{"@id":"schema:openingHours"},"openingHoursSpecification":{"@id":"schema:openingHoursSpecification"},"opens":{"@id":"schema:opens"},"operatingSystem":{"@id":"schema:operatingSystem"},"opponent":{"@id":"schema:opponent"},"option":{"@id":"schema:option"},"orderDate":{"@id":"schema:orderDate","@type":"Date"},"orderDelivery":{"@id":"schema:orderDelivery"},"orderItemNumber":{"@id":"schema:orderItemNumber"},"orderItemStatus":{"@id":"schema:orderItemStatus"},"orderNumber":{"@id":"schema:orderNumber"},"orderQuantity":{"@id":"schema:orderQuantity"},"orderStatus":{"@id":"schema:orderStatus"},"orderedItem":{"@id":"schema:orderedItem"},"organizer":{"@id":"schema:organizer"},"originAddress":{"@id":"schema:originAddress"},"originalMediaContextDescription":{"@id":"schema:originalMediaContextDescription"},"originalMediaLink":{"@id":"schema:originalMediaLink","@type":"@id"},"originatesFrom":{"@id":"schema:originatesFrom"},"overdosage":{"@id":"schema:overdosage"},"ownedFrom":{"@id":"schema:ownedFrom"},"ownedThrough":{"@id":"schema:ownedThrough"},"ownershipFundingInfo":{"@id":"schema:ownershipFundingInfo"},"owns":{"@id":"schema:owns"},"pageEnd":{"@id":"schema:pageEnd"},"pageStart":{"@id":"schema:pageStart"},"pagination":{"@id":"schema:pagination"},"parent":{"@id":"schema:parent"},"parentItem":{"@id":"schema:parentItem"},"parentOrganization":{"@id":"schema:parentOrganization"},"parentService":{"@id":"schema:parentService"},"parentTaxon":{"@id":"schema:parentTaxon"},"parents":{"@id":"schema:parents"},"partOfEpisode":{"@id":"schema:partOfEpisode"},"partOfInvoice":{"@id":"schema:partOfInvoice"},"partOfOrder":{"@id":"schema:partOfOrder"},"partOfSeason":{"@id":"schema:partOfSeason"},"partOfSeries":{"@id":"schema:partOfSeries"},"partOfSystem":{"@id":"schema:partOfSystem"},"partOfTVSeries":{"@id":"schema:partOfTVSeries"},"partOfTrip":{"@id":"schema:partOfTrip"},"participant":{"@id":"schema:participant"},"partySize":{"@id":"schema:partySize"},"passengerPriorityStatus":{"@id":"schema:passengerPriorityStatus"},"passengerSequenceNumber":{"@id":"schema:passengerSequenceNumber"},"pathophysiology":{"@id":"schema:pathophysiology"},"pattern":{"@id":"schema:pattern"},"payload":{"@id":"schema:payload"},"paymentAccepted":{"@id":"schema:paymentAccepted"},"paymentDue":{"@id":"schema:paymentDue"},"paymentDueDate":{"@id":"schema:paymentDueDate","@type":"Date"},"paymentMethod":{"@id":"schema:paymentMethod"},"paymentMethodId":{"@id":"schema:paymentMethodId"},"paymentStatus":{"@id":"schema:paymentStatus"},"paymentUrl":{"@id":"schema:paymentUrl","@type":"@id"},"penciler":{"@id":"schema:penciler"},"percentile10":{"@id":"schema:percentile10"},"percentile25":{"@id":"schema:percentile25"},"percentile75":{"@id":"schema:percentile75"},"percentile90":{"@id":"schema:percentile90"},"performTime":{"@id":"schema:performTime"},"performer":{"@id":"schema:performer"},"performerIn":{"@id":"schema:performerIn"},"performers":{"@id":"schema:performers"},"permissionType":{"@id":"schema:permissionType"},"permissions":{"@id":"schema:permissions"},"permitAudience":{"@id":"schema:permitAudience"},"permittedUsage":{"@id":"schema:permittedUsage"},"petsAllowed":{"@id":"schema:petsAllowed"},"phoneticText":{"@id":"schema:phoneticText"},"photo":{"@id":"schema:photo"},"photos":{"@id":"schema:photos"},"physicalRequirement":{"@id":"schema:physicalRequirement"},"physiologicalBenefits":{"@id":"schema:physiologicalBenefits"},"pickupLocation":{"@id":"schema:pickupLocation"},"pickupTime":{"@id":"schema:pickupTime"},"playMode":{"@id":"schema:playMode"},"playerType":{"@id":"schema:playerType"},"playersOnline":{"@id":"schema:playersOnline"},"polygon":{"@id":"schema:polygon"},"populationType":{"@id":"schema:populationType"},"position":{"@id":"schema:position"},"positiveNotes":{"@id":"schema:positiveNotes"},"possibleComplication":{"@id":"schema:possibleComplication"},"possibleTreatment":{"@id":"schema:possibleTreatment"},"postOfficeBoxNumber":{"@id":"schema:postOfficeBoxNumber"},"postOp":{"@id":"schema:postOp"},"postalCode":{"@id":"schema:postalCode"},"postalCodeBegin":{"@id":"schema:postalCodeBegin"},"postalCodeEnd":{"@id":"schema:postalCodeEnd"},"postalCodePrefix":{"@id":"schema:postalCodePrefix"},"postalCodeRange":{"@id":"schema:postalCodeRange"},"potentialAction":{"@id":"schema:potentialAction"},"potentialUse":{"@id":"schema:potentialUse"},"preOp":{"@id":"schema:preOp"},"predecessorOf":{"@id":"schema:predecessorOf"},"pregnancyCategory":{"@id":"schema:pregnancyCategory"},"pregnancyWarning":{"@id":"schema:pregnancyWarning"},"prepTime":{"@id":"schema:prepTime"},"preparation":{"@id":"schema:preparation"},"prescribingInfo":{"@id":"schema:prescribingInfo","@type":"@id"},"prescriptionStatus":{"@id":"schema:prescriptionStatus"},"previousItem":{"@id":"schema:previousItem"},"previousStartDate":{"@id":"schema:previousStartDate","@type":"Date"},"price":{"@id":"schema:price"},"priceComponent":{"@id":"schema:priceComponent"},"priceComponentType":{"@id":"schema:priceComponentType"},"priceCurrency":{"@id":"schema:priceCurrency"},"priceRange":{"@id":"schema:priceRange"},"priceSpecification":{"@id":"schema:priceSpecification"},"priceType":{"@id":"schema:priceType"},"priceValidUntil":{"@id":"schema:priceValidUntil","@type":"Date"},"primaryImageOfPage":{"@id":"schema:primaryImageOfPage"},"primaryPrevention":{"@id":"schema:primaryPrevention"},"printColumn":{"@id":"schema:printColumn"},"printEdition":{"@id":"schema:printEdition"},"printPage":{"@id":"schema:printPage"},"printSection":{"@id":"schema:printSection"},"procedure":{"@id":"schema:procedure"},"procedureType":{"@id":"schema:procedureType"},"processingTime":{"@id":"schema:processingTime"},"processorRequirements":{"@id":"schema:processorRequirements"},"producer":{"@id":"schema:producer"},"produces":{"@id":"schema:produces"},"productGroupID":{"@id":"schema:productGroupID"},"productID":{"@id":"schema:productID"},"productReturnDays":{"@id":"schema:productReturnDays"},"productReturnLink":{"@id":"schema:productReturnLink","@type":"@id"},"productSupported":{"@id":"schema:productSupported"},"productionCompany":{"@id":"schema:productionCompany"},"productionDate":{"@id":"schema:productionDate","@type":"Date"},"proficiencyLevel":{"@id":"schema:proficiencyLevel"},"programMembershipUsed":{"@id":"schema:programMembershipUsed"},"programName":{"@id":"schema:programName"},"programPrerequisites":{"@id":"schema:programPrerequisites"},"programType":{"@id":"schema:programType"},"programmingLanguage":{"@id":"schema:programmingLanguage"},"programmingModel":{"@id":"schema:programmingModel"},"propertyID":{"@id":"schema:propertyID"},"proprietaryName":{"@id":"schema:proprietaryName"},"proteinContent":{"@id":"schema:proteinContent"},"provider":{"@id":"schema:provider"},"providerMobility":{"@id":"schema:providerMobility"},"providesBroadcastService":{"@id":"schema:providesBroadcastService"},"providesService":{"@id":"schema:providesService"},"publicAccess":{"@id":"schema:publicAccess"},"publicTransportClosuresInfo":{"@id":"schema:publicTransportClosuresInfo","@type":"@id"},"publication":{"@id":"schema:publication"},"publicationType":{"@id":"schema:publicationType"},"publishedBy":{"@id":"schema:publishedBy"},"publishedOn":{"@id":"schema:publishedOn"},"publisher":{"@id":"schema:publisher"},"publisherImprint":{"@id":"schema:publisherImprint"},"publishingPrinciples":{"@id":"schema:publishingPrinciples","@type":"@id"},"purchaseDate":{"@id":"schema:purchaseDate","@type":"Date"},"qualifications":{"@id":"schema:qualifications"},"quarantineGuidelines":{"@id":"schema:quarantineGuidelines","@type":"@id"},"query":{"@id":"schema:query"},"quest":{"@id":"schema:quest"},"question":{"@id":"schema:question"},"rangeIncludes":{"@id":"schema:rangeIncludes"},"ratingCount":{"@id":"schema:ratingCount"},"ratingExplanation":{"@id":"schema:ratingExplanation"},"ratingValue":{"@id":"schema:ratingValue"},"readBy":{"@id":"schema:readBy"},"readonlyValue":{"@id":"schema:readonlyValue"},"realEstateAgent":{"@id":"schema:realEstateAgent"},"recipe":{"@id":"schema:recipe"},"recipeCategory":{"@id":"schema:recipeCategory"},"recipeCuisine":{"@id":"schema:recipeCuisine"},"recipeIngredient":{"@id":"schema:recipeIngredient"},"recipeInstructions":{"@id":"schema:recipeInstructions"},"recipeYield":{"@id":"schema:recipeYield"},"recipient":{"@id":"schema:recipient"},"recognizedBy":{"@id":"schema:recognizedBy"},"recognizingAuthority":{"@id":"schema:recognizingAuthority"},"recommendationStrength":{"@id":"schema:recommendationStrength"},"recommendedIntake":{"@id":"schema:recommendedIntake"},"recordLabel":{"@id":"schema:recordLabel"},"recordedAs":{"@id":"schema:recordedAs"},"recordedAt":{"@id":"schema:recordedAt"},"recordedIn":{"@id":"schema:recordedIn"},"recordingOf":{"@id":"schema:recordingOf"},"recourseLoan":{"@id":"schema:recourseLoan"},"referenceQuantity":{"@id":"schema:referenceQuantity"},"referencesOrder":{"@id":"schema:referencesOrder"},"refundType":{"@id":"schema:refundType"},"regionDrained":{"@id":"schema:regionDrained"},"regionsAllowed":{"@id":"schema:regionsAllowed"},"relatedAnatomy":{"@id":"schema:relatedAnatomy"},"relatedCondition":{"@id":"schema:relatedCondition"},"relatedDrug":{"@id":"schema:relatedDrug"},"relatedLink":{"@id":"schema:relatedLink","@type":"@id"},"relatedStructure":{"@id":"schema:relatedStructure"},"relatedTherapy":{"@id":"schema:relatedTherapy"},"relatedTo":{"@id":"schema:relatedTo"},"releaseDate":{"@id":"schema:releaseDate","@type":"Date"},"releaseNotes":{"@id":"schema:releaseNotes"},"releaseOf":{"@id":"schema:releaseOf"},"releasedEvent":{"@id":"schema:releasedEvent"},"relevantOccupation":{"@id":"schema:relevantOccupation"},"relevantSpecialty":{"@id":"schema:relevantSpecialty"},"remainingAttendeeCapacity":{"@id":"schema:remainingAttendeeCapacity"},"renegotiableLoan":{"@id":"schema:renegotiableLoan"},"repeatCount":{"@id":"schema:repeatCount"},"repeatFrequency":{"@id":"schema:repeatFrequency"},"repetitions":{"@id":"schema:repetitions"},"replacee":{"@id":"schema:replacee"},"replacer":{"@id":"schema:replacer"},"replyToUrl":{"@id":"schema:replyToUrl","@type":"@id"},"reportNumber":{"@id":"schema:reportNumber"},"representativeOfPage":{"@id":"schema:representativeOfPage"},"requiredCollateral":{"@id":"schema:requiredCollateral"},"requiredGender":{"@id":"schema:requiredGender"},"requiredMaxAge":{"@id":"schema:requiredMaxAge"},"requiredMinAge":{"@id":"schema:requiredMinAge"},"requiredQuantity":{"@id":"schema:requiredQuantity"},"requirements":{"@id":"schema:requirements"},"requiresSubscription":{"@id":"schema:requiresSubscription"},"reservationFor":{"@id":"schema:reservationFor"},"reservationId":{"@id":"schema:reservationId"},"reservationStatus":{"@id":"schema:reservationStatus"},"reservedTicket":{"@id":"schema:reservedTicket"},"responsibilities":{"@id":"schema:responsibilities"},"restPeriods":{"@id":"schema:restPeriods"},"restockingFee":{"@id":"schema:restockingFee"},"result":{"@id":"schema:result"},"resultComment":{"@id":"schema:resultComment"},"resultReview":{"@id":"schema:resultReview"},"returnFees":{"@id":"schema:returnFees"},"returnLabelSource":{"@id":"schema:returnLabelSource"},"returnMethod":{"@id":"schema:returnMethod"},"returnPolicyCategory":{"@id":"schema:returnPolicyCategory"},"returnPolicyCountry":{"@id":"schema:returnPolicyCountry"},"returnPolicySeasonalOverride":{"@id":"schema:returnPolicySeasonalOverride"},"returnShippingFeesAmount":{"@id":"schema:returnShippingFeesAmount"},"review":{"@id":"schema:review"},"reviewAspect":{"@id":"schema:reviewAspect"},"reviewBody":{"@id":"schema:reviewBody"},"reviewCount":{"@id":"schema:reviewCount"},"reviewRating":{"@id":"schema:reviewRating"},"reviewedBy":{"@id":"schema:reviewedBy"},"reviews":{"@id":"schema:reviews"},"riskFactor":{"@id":"schema:riskFactor"},"risks":{"@id":"schema:risks"},"roleName":{"@id":"schema:roleName"},"roofLoad":{"@id":"schema:roofLoad"},"rsvpResponse":{"@id":"schema:rsvpResponse"},"runsTo":{"@id":"schema:runsTo"},"runtime":{"@id":"schema:runtime"},"runtimePlatform":{"@id":"schema:runtimePlatform"},"rxcui":{"@id":"schema:rxcui"},"safetyConsideration":{"@id":"schema:safetyConsideration"},"salaryCurrency":{"@id":"schema:salaryCurrency"},"salaryUponCompletion":{"@id":"schema:salaryUponCompletion"},"sameAs":{"@id":"schema:sameAs","@type":"@id"},"sampleType":{"@id":"schema:sampleType"},"saturatedFatContent":{"@id":"schema:saturatedFatContent"},"scheduleTimezone":{"@id":"schema:scheduleTimezone"},"scheduledPaymentDate":{"@id":"schema:scheduledPaymentDate","@type":"Date"},"scheduledTime":{"@id":"schema:scheduledTime","@type":"Date"},"schemaVersion":{"@id":"schema:schemaVersion"},"schoolClosuresInfo":{"@id":"schema:schoolClosuresInfo","@type":"@id"},"screenCount":{"@id":"schema:screenCount"},"screenshot":{"@id":"schema:screenshot","@type":"@id"},"sdDatePublished":{"@id":"schema:sdDatePublished","@type":"Date"},"sdLicense":{"@id":"schema:sdLicense","@type":"@id"},"sdPublisher":{"@id":"schema:sdPublisher"},"season":{"@id":"schema:season","@type":"@id"},"seasonNumber":{"@id":"schema:seasonNumber"},"seasons":{"@id":"schema:seasons"},"seatNumber":{"@id":"schema:seatNumber"},"seatRow":{"@id":"schema:seatRow"},"seatSection":{"@id":"schema:seatSection"},"seatingCapacity":{"@id":"schema:seatingCapacity"},"seatingType":{"@id":"schema:seatingType"},"secondaryPrevention":{"@id":"schema:secondaryPrevention"},"securityClearanceRequirement":{"@id":"schema:securityClearanceRequirement"},"securityScreening":{"@id":"schema:securityScreening"},"seeks":{"@id":"schema:seeks"},"seller":{"@id":"schema:seller"},"sender":{"@id":"schema:sender"},"sensoryRequirement":{"@id":"schema:sensoryRequirement"},"sensoryUnit":{"@id":"schema:sensoryUnit"},"serialNumber":{"@id":"schema:serialNumber"},"seriousAdverseOutcome":{"@id":"schema:seriousAdverseOutcome"},"serverStatus":{"@id":"schema:serverStatus"},"servesCuisine":{"@id":"schema:servesCuisine"},"serviceArea":{"@id":"schema:serviceArea"},"serviceAudience":{"@id":"schema:serviceAudience"},"serviceLocation":{"@id":"schema:serviceLocation"},"serviceOperator":{"@id":"schema:serviceOperator"},"serviceOutput":{"@id":"schema:serviceOutput"},"servicePhone":{"@id":"schema:servicePhone"},"servicePostalAddress":{"@id":"schema:servicePostalAddress"},"serviceSmsNumber":{"@id":"schema:serviceSmsNumber"},"serviceType":{"@id":"schema:serviceType"},"serviceUrl":{"@id":"schema:serviceUrl","@type":"@id"},"servingSize":{"@id":"schema:servingSize"},"sha256":{"@id":"schema:sha256"},"sharedContent":{"@id":"schema:sharedContent"},"shippingDestination":{"@id":"schema:shippingDestination"},"shippingDetails":{"@id":"schema:shippingDetails"},"shippingLabel":{"@id":"schema:shippingLabel"},"shippingOrigin":{"@id":"schema:shippingOrigin"},"shippingRate":{"@id":"schema:shippingRate"},"shippingSettingsLink":{"@id":"schema:shippingSettingsLink","@type":"@id"},"sibling":{"@id":"schema:sibling"},"siblings":{"@id":"schema:siblings"},"signDetected":{"@id":"schema:signDetected"},"signOrSymptom":{"@id":"schema:signOrSymptom"},"significance":{"@id":"schema:significance"},"significantLink":{"@id":"schema:significantLink","@type":"@id"},"significantLinks":{"@id":"schema:significantLinks","@type":"@id"},"size":{"@id":"schema:size"},"sizeGroup":{"@id":"schema:sizeGroup"},"sizeSystem":{"@id":"schema:sizeSystem"},"skills":{"@id":"schema:skills"},"sku":{"@id":"schema:sku"},"slogan":{"@id":"schema:slogan"},"smiles":{"@id":"schema:smiles"},"smokingAllowed":{"@id":"schema:smokingAllowed"},"sodiumContent":{"@id":"schema:sodiumContent"},"softwareAddOn":{"@id":"schema:softwareAddOn"},"softwareHelp":{"@id":"schema:softwareHelp"},"softwareRequirements":{"@id":"schema:softwareRequirements"},"softwareVersion":{"@id":"schema:softwareVersion"},"sourceOrganization":{"@id":"schema:sourceOrganization"},"sourcedFrom":{"@id":"schema:sourcedFrom"},"spatial":{"@id":"schema:spatial"},"spatialCoverage":{"@id":"schema:spatialCoverage"},"speakable":{"@id":"schema:speakable","@type":"@id"},"specialCommitments":{"@id":"schema:specialCommitments"},"specialOpeningHoursSpecification":{"@id":"schema:specialOpeningHoursSpecification"},"specialty":{"@id":"schema:specialty"},"speechToTextMarkup":{"@id":"schema:speechToTextMarkup"},"speed":{"@id":"schema:speed"},"spokenByCharacter":{"@id":"schema:spokenByCharacter"},"sponsor":{"@id":"schema:sponsor"},"sport":{"@id":"schema:sport"},"sportsActivityLocation":{"@id":"schema:sportsActivityLocation"},"sportsEvent":{"@id":"schema:sportsEvent"},"sportsTeam":{"@id":"schema:sportsTeam"},"spouse":{"@id":"schema:spouse"},"stage":{"@id":"schema:stage"},"stageAsNumber":{"@id":"schema:stageAsNumber"},"starRating":{"@id":"schema:starRating"},"startDate":{"@id":"schema:startDate","@type":"Date"},"startOffset":{"@id":"schema:startOffset"},"startTime":{"@id":"schema:startTime"},"statType":{"@id":"schema:statType"},"status":{"@id":"schema:status"},"steeringPosition":{"@id":"schema:steeringPosition"},"step":{"@id":"schema:step"},"stepValue":{"@id":"schema:stepValue"},"steps":{"@id":"schema:steps"},"storageRequirements":{"@id":"schema:storageRequirements"},"streetAddress":{"@id":"schema:streetAddress"},"strengthUnit":{"@id":"schema:strengthUnit"},"strengthValue":{"@id":"schema:strengthValue"},"structuralClass":{"@id":"schema:structuralClass"},"study":{"@id":"schema:study"},"studyDesign":{"@id":"schema:studyDesign"},"studyLocation":{"@id":"schema:studyLocation"},"studySubject":{"@id":"schema:studySubject"},"stupidProperty":{"@id":"schema:stupidProperty"},"subEvent":{"@id":"schema:subEvent"},"subEvents":{"@id":"schema:subEvents"},"subOrganization":{"@id":"schema:subOrganization"},"subReservation":{"@id":"schema:subReservation"},"subStageSuffix":{"@id":"schema:subStageSuffix"},"subStructure":{"@id":"schema:subStructure"},"subTest":{"@id":"schema:subTest"},"subTrip":{"@id":"schema:subTrip"},"subjectOf":{"@id":"schema:subjectOf"},"subtitleLanguage":{"@id":"schema:subtitleLanguage"},"successorOf":{"@id":"schema:successorOf"},"sugarContent":{"@id":"schema:sugarContent"},"suggestedAge":{"@id":"schema:suggestedAge"},"suggestedAnswer":{"@id":"schema:suggestedAnswer"},"suggestedGender":{"@id":"schema:suggestedGender"},"suggestedMaxAge":{"@id":"schema:suggestedMaxAge"},"suggestedMeasurement":{"@id":"schema:suggestedMeasurement"},"suggestedMinAge":{"@id":"schema:suggestedMinAge"},"suitableForDiet":{"@id":"schema:suitableForDiet"},"superEvent":{"@id":"schema:superEvent"},"supersededBy":{"@id":"schema:supersededBy"},"supply":{"@id":"schema:supply"},"supplyTo":{"@id":"schema:supplyTo"},"supportingData":{"@id":"schema:supportingData"},"surface":{"@id":"schema:surface"},"syllabusSections":{"@id":"schema:syllabusSections"},"target":{"@id":"schema:target","@type":"@id"},"targetCollection":{"@id":"schema:targetCollection"},"targetDescription":{"@id":"schema:targetDescription"},"targetName":{"@id":"schema:targetName"},"targetPlatform":{"@id":"schema:targetPlatform"},"targetPopulation":{"@id":"schema:targetPopulation"},"targetProduct":{"@id":"schema:targetProduct"},"targetUrl":{"@id":"schema:targetUrl","@type":"@id"},"taxID":{"@id":"schema:taxID"},"taxonRank":{"@id":"schema:taxonRank"},"taxonomicRange":{"@id":"schema:taxonomicRange"},"teaches":{"@id":"schema:teaches"},"telephone":{"@id":"schema:telephone"},"temporal":{"@id":"schema:temporal"},"temporalCoverage":{"@id":"schema:temporalCoverage"},"termCode":{"@id":"schema:termCode"},"termDuration":{"@id":"schema:termDuration"},"termsOfService":{"@id":"schema:termsOfService"},"termsPerYear":{"@id":"schema:termsPerYear"},"text":{"@id":"schema:text"},"textValue":{"@id":"schema:textValue"},"thumbnail":{"@id":"schema:thumbnail"},"thumbnailUrl":{"@id":"schema:thumbnailUrl","@type":"@id"},"tickerSymbol":{"@id":"schema:tickerSymbol"},"ticketNumber":{"@id":"schema:ticketNumber"},"ticketToken":{"@id":"schema:ticketToken"},"ticketedSeat":{"@id":"schema:ticketedSeat"},"timeOfDay":{"@id":"schema:timeOfDay"},"timeRequired":{"@id":"schema:timeRequired"},"timeToComplete":{"@id":"schema:timeToComplete"},"tissueSample":{"@id":"schema:tissueSample"},"title":{"@id":"schema:title"},"titleEIDR":{"@id":"schema:titleEIDR"},"toLocation":{"@id":"schema:toLocation"},"toRecipient":{"@id":"schema:toRecipient"},"tocContinuation":{"@id":"schema:tocContinuation"},"tocEntry":{"@id":"schema:tocEntry"},"tongueWeight":{"@id":"schema:tongueWeight"},"tool":{"@id":"schema:tool"},"torque":{"@id":"schema:torque"},"totalHistoricalEnrollment":{"@id":"schema:totalHistoricalEnrollment"},"totalJobOpenings":{"@id":"schema:totalJobOpenings"},"totalPaymentDue":{"@id":"schema:totalPaymentDue"},"totalPrice":{"@id":"schema:totalPrice"},"totalTime":{"@id":"schema:totalTime"},"tourBookingPage":{"@id":"schema:tourBookingPage","@type":"@id"},"touristType":{"@id":"schema:touristType"},"track":{"@id":"schema:track"},"trackingNumber":{"@id":"schema:trackingNumber"},"trackingUrl":{"@id":"schema:trackingUrl","@type":"@id"},"tracks":{"@id":"schema:tracks"},"trailer":{"@id":"schema:trailer"},"trailerWeight":{"@id":"schema:trailerWeight"},"trainName":{"@id":"schema:trainName"},"trainNumber":{"@id":"schema:trainNumber"},"trainingSalary":{"@id":"schema:trainingSalary"},"transFatContent":{"@id":"schema:transFatContent"},"transcript":{"@id":"schema:transcript"},"transitTime":{"@id":"schema:transitTime"},"transitTimeLabel":{"@id":"schema:transitTimeLabel"},"translationOfWork":{"@id":"schema:translationOfWork"},"translator":{"@id":"schema:translator"},"transmissionMethod":{"@id":"schema:transmissionMethod"},"travelBans":{"@id":"schema:travelBans","@type":"@id"},"trialDesign":{"@id":"schema:trialDesign"},"tributary":{"@id":"schema:tributary"},"tripOrigin":{"@id":"schema:tripOrigin"},"typeOfBed":{"@id":"schema:typeOfBed"},"typeOfGood":{"@id":"schema:typeOfGood"},"typicalAgeRange":{"@id":"schema:typicalAgeRange"},"typicalCreditsPerTerm":{"@id":"schema:typicalCreditsPerTerm"},"typicalTest":{"@id":"schema:typicalTest"},"underName":{"@id":"schema:underName"},"unitCode":{"@id":"schema:unitCode"},"unitText":{"@id":"schema:unitText"},"unnamedSourcesPolicy":{"@id":"schema:unnamedSourcesPolicy","@type":"@id"},"unsaturatedFatContent":{"@id":"schema:unsaturatedFatContent"},"uploadDate":{"@id":"schema:uploadDate","@type":"Date"},"upvoteCount":{"@id":"schema:upvoteCount"},"url":{"@id":"schema:url","@type":"@id"},"urlTemplate":{"@id":"schema:urlTemplate"},"usageInfo":{"@id":"schema:usageInfo","@type":"@id"},"usedToDiagnose":{"@id":"schema:usedToDiagnose"},"userInteractionCount":{"@id":"schema:userInteractionCount"},"usesDevice":{"@id":"schema:usesDevice"},"usesHealthPlanIdStandard":{"@id":"schema:usesHealthPlanIdStandard"},"utterances":{"@id":"schema:utterances"},"validFor":{"@id":"schema:validFor"},"validFrom":{"@id":"schema:validFrom","@type":"Date"},"validIn":{"@id":"schema:validIn"},"validThrough":{"@id":"schema:validThrough","@type":"Date"},"validUntil":{"@id":"schema:validUntil","@type":"Date"},"value":{"@id":"schema:value"},"valueAddedTaxIncluded":{"@id":"schema:valueAddedTaxIncluded"},"valueMaxLength":{"@id":"schema:valueMaxLength"},"valueMinLength":{"@id":"schema:valueMinLength"},"valueName":{"@id":"schema:valueName"},"valuePattern":{"@id":"schema:valuePattern"},"valueReference":{"@id":"schema:valueReference"},"valueRequired":{"@id":"schema:valueRequired"},"variableMeasured":{"@id":"schema:variableMeasured"},"variablesMeasured":{"@id":"schema:variablesMeasured"},"variantCover":{"@id":"schema:variantCover"},"variesBy":{"@id":"schema:variesBy"},"vatID":{"@id":"schema:vatID"},"vehicleConfiguration":{"@id":"schema:vehicleConfiguration"},"vehicleEngine":{"@id":"schema:vehicleEngine"},"vehicleIdentificationNumber":{"@id":"schema:vehicleIdentificationNumber"},"vehicleInteriorColor":{"@id":"schema:vehicleInteriorColor"},"vehicleInteriorType":{"@id":"schema:vehicleInteriorType"},"vehicleModelDate":{"@id":"schema:vehicleModelDate","@type":"Date"},"vehicleSeatingCapacity":{"@id":"schema:vehicleSeatingCapacity"},"vehicleSpecialUsage":{"@id":"schema:vehicleSpecialUsage"},"vehicleTransmission":{"@id":"schema:vehicleTransmission"},"vendor":{"@id":"schema:vendor"},"verificationFactCheckingPolicy":{"@id":"schema:verificationFactCheckingPolicy","@type":"@id"},"version":{"@id":"schema:version"},"video":{"@id":"schema:video"},"videoFormat":{"@id":"schema:videoFormat"},"videoFrameSize":{"@id":"schema:videoFrameSize"},"videoQuality":{"@id":"schema:videoQuality"},"volumeNumber":{"@id":"schema:volumeNumber"},"warning":{"@id":"schema:warning"},"warranty":{"@id":"schema:warranty"},"warrantyPromise":{"@id":"schema:warrantyPromise"},"warrantyScope":{"@id":"schema:warrantyScope"},"webCheckinTime":{"@id":"schema:webCheckinTime"},"webFeed":{"@id":"schema:webFeed","@type":"@id"},"weight":{"@id":"schema:weight"},"weightTotal":{"@id":"schema:weightTotal"},"wheelbase":{"@id":"schema:wheelbase"},"width":{"@id":"schema:width"},"winner":{"@id":"schema:winner"},"wordCount":{"@id":"schema:wordCount"},"workExample":{"@id":"schema:workExample"},"workFeatured":{"@id":"schema:workFeatured"},"workHours":{"@id":"schema:workHours"},"workLocation":{"@id":"schema:workLocation"},"workPerformed":{"@id":"schema:workPerformed"},"workPresented":{"@id":"schema:workPresented"},"workTranslation":{"@id":"schema:workTranslation"},"workload":{"@id":"schema:workload"},"worksFor":{"@id":"schema:worksFor"},"worstRating":{"@id":"schema:worstRating"},"xpath":{"@id":"schema:xpath"},"yearBuilt":{"@id":"schema:yearBuilt"},"yearlyRevenue":{"@id":"schema:yearlyRevenue"},"yearsInOperation":{"@id":"schema:yearsInOperation"},"yield":{"@id":"schema:yield"}}}')},41465:e=>{e.exports=JSON.parse('{"@context":[{"@version":1.1},"https://w3id.org/security/v1",{"AesKeyWrappingKey2019":"sec:AesKeyWrappingKey2019","DeleteKeyOperation":"sec:DeleteKeyOperation","DeriveSecretOperation":"sec:DeriveSecretOperation","EcdsaSecp256k1Signature2019":"sec:EcdsaSecp256k1Signature2019","EcdsaSecp256r1Signature2019":"sec:EcdsaSecp256r1Signature2019","EcdsaSecp256k1VerificationKey2019":"sec:EcdsaSecp256k1VerificationKey2019","EcdsaSecp256r1VerificationKey2019":"sec:EcdsaSecp256r1VerificationKey2019","Ed25519Signature2018":"sec:Ed25519Signature2018","Ed25519VerificationKey2018":"sec:Ed25519VerificationKey2018","EquihashProof2018":"sec:EquihashProof2018","ExportKeyOperation":"sec:ExportKeyOperation","GenerateKeyOperation":"sec:GenerateKeyOperation","KmsOperation":"sec:KmsOperation","RevokeKeyOperation":"sec:RevokeKeyOperation","RsaSignature2018":"sec:RsaSignature2018","RsaVerificationKey2018":"sec:RsaVerificationKey2018","Sha256HmacKey2019":"sec:Sha256HmacKey2019","SignOperation":"sec:SignOperation","UnwrapKeyOperation":"sec:UnwrapKeyOperation","VerifyOperation":"sec:VerifyOperation","WrapKeyOperation":"sec:WrapKeyOperation","X25519KeyAgreementKey2019":"sec:X25519KeyAgreementKey2019","allowedAction":"sec:allowedAction","assertionMethod":{"@id":"sec:assertionMethod","@type":"@id","@container":"@set"},"authentication":{"@id":"sec:authenticationMethod","@type":"@id","@container":"@set"},"capability":{"@id":"sec:capability","@type":"@id"},"capabilityAction":"sec:capabilityAction","capabilityChain":{"@id":"sec:capabilityChain","@type":"@id","@container":"@list"},"capabilityDelegation":{"@id":"sec:capabilityDelegationMethod","@type":"@id","@container":"@set"},"capabilityInvocation":{"@id":"sec:capabilityInvocationMethod","@type":"@id","@container":"@set"},"caveat":{"@id":"sec:caveat","@type":"@id","@container":"@set"},"challenge":"sec:challenge","ciphertext":"sec:ciphertext","controller":{"@id":"sec:controller","@type":"@id"},"delegator":{"@id":"sec:delegator","@type":"@id"},"equihashParameterK":{"@id":"sec:equihashParameterK","@type":"xsd:integer"},"equihashParameterN":{"@id":"sec:equihashParameterN","@type":"xsd:integer"},"invocationTarget":{"@id":"sec:invocationTarget","@type":"@id"},"invoker":{"@id":"sec:invoker","@type":"@id"},"jws":"sec:jws","keyAgreement":{"@id":"sec:keyAgreementMethod","@type":"@id","@container":"@set"},"kmsModule":{"@id":"sec:kmsModule"},"parentCapability":{"@id":"sec:parentCapability","@type":"@id"},"plaintext":"sec:plaintext","proof":{"@id":"sec:proof","@type":"@id","@container":"@graph"},"proofPurpose":{"@id":"sec:proofPurpose","@type":"@vocab"},"proofValue":"sec:proofValue","referenceId":"sec:referenceId","unwrappedKey":"sec:unwrappedKey","verificationMethod":{"@id":"sec:verificationMethod","@type":"@id"},"verifyData":"sec:verifyData","wrappedKey":"sec:wrappedKey"}]}')},87557:e=>{e.exports=JSON.parse('{"@context":{"sec":"https://w3id.org/security/v1","cred":"https://w3.org/2018/credentials#","dc":"http://purl.org/dc/terms/","owl":"http://www.w3.org/2002/07/owl#","rdf":"http://www.w3.org/1999/02/22-rdf-syntax-ns#","rdfs":"http://www.w3.org/2000/01/rdf-schema#","xsd":"http://www.w3.org/2001/XMLSchema#","dc:title":{"@container":"@language"},"dc:description":{"@container":"@language"},"dc:date":{"@type":"xsd:date"},"rdfs:comment":{"@container":"@language"},"rdfs:domain":{"@type":"@id"},"rdfs:label":{"@container":"@language"},"rdfs:range":{"@type":"@id"},"rdfs:seeAlso":{"@type":"@id"},"rdfs:subClassOf":{"@type":"@id"},"rdfs:subPropertyOf":{"@type":"@id"},"owl:equivalentClass":{"@type":"@vocab"},"owl:equivalentProperty":{"@type":"@vocab"},"owl:oneOf":{"@container":"@list","@type":"@vocab"},"owl:deprecated":{"@type":"xsd:boolean"},"owl:imports":{"@type":"@id"},"owl:versionInfo":{"@type":"@id"},"owl:inverseOf":{"@type":"@vocab"},"owl:unionOf":{"@type":"@vocab","@container":"@list"},"rdfs_classes":{"@reverse":"rdfs:isDefinedBy","@type":"@id"},"rdfs_properties":{"@reverse":"rdfs:isDefinedBy","@type":"@id"},"rdfs_instances":{"@reverse":"rdfs:isDefinedBy","@type":"@id"}},"@id":"https://w3id.org/security/v1","@type":"owl:Ontology","dc:title":{"en":"Security Vocabulary"},"dc:description":{"en":"vocabulary used to ensure the authenticity and integrity of Verifiable Credentials and similar types of constrained digital documents using cryptography, especially through the use of digital signatures and related mathematical proofs \\n"},"rdfs:seeAlso":"https://www.w3.org/TR/vc-data-integrity/","dc:date":"2023-02-11","rdfs_classes":[{"@id":"sec:Proof","@type":"rdfs:Class","rdfs:label":{"en":"Digital proof"},"rdfs:comment":{"en":"This class represents a digital proof on serialized data. "}},{"@id":"sec:ProofGraph","@type":"rdfs:Class","rdfs:label":{"en":"An RDF Graph for a digital proof"},"rdfs:comment":{"en":"Instances of this class are RDF Graphs, where each of these graphs must include exactly one Proof."}},{"@id":"sec:VerificationMethod","@type":"rdfs:Class","rdfs:label":{"en":"Verification method"},"rdfs:comment":{"en":"A Verification Method class can express different verification methods, such as cryptographic public keys, which can be used to authenticate or authorize interaction with the `controller` or associated parties. Verification methods might take many parameters."}},{"@id":"sec:DataIntegrityProof","@type":"rdfs:Class","rdfs:subClassOf":["sec:Proof"],"rdfs:label":{"en":"A Data Integrity Proof"},"rdfs:comment":{"en":"This class represents a data integrity proof used to encode a variety of cryptographic suite proof encodings."},"rdfs:seeAlso":["https://www.w3.org/TR/vc-data-integrity/#dataintegrityproof"]},{"@id":"sec:Ed25519Signature2020","@type":"rdfs:Class","rdfs:subClassOf":["sec:Proof"],"rdfs:label":{"en":"ED2559 Signature Suite, 2020 version"},"rdfs:comment":{"en":"T.B.D."}},{"@id":"sec:Key","@type":["rdfs:Class","owl:DeprecatedClass"],"owl:deprecated":true,"rdfs:label":{"en":"Cryptographic key"},"rdfs:comment":{"en":"This class represents a cryptographic key that may be used for encryption, decryption, or digitally signing data."}},{"@id":"sec:Signature","@type":["rdfs:Class","owl:DeprecatedClass"],"owl:deprecated":true,"rdfs:subClassOf":["sec:Proof"],"rdfs:label":{"en":"Digital signature"},"rdfs:comment":{"en":"This class represents a digital signature on serialized data. It is an abstract class and should not be used other than for Semantic Web reasoning purposes, such as by a reasoning agent. This class MUST NOT be used directly, but only through its subclasses."}},{"@id":"sec:SignatureGraph","@type":["rdfs:Class","owl:DeprecatedClass"],"owl:deprecated":true,"rdfs:subClassOf":["sec:ProofGraph"],"rdfs:label":{"en":"An RDF Graph for a digital signature"},"rdfs:comment":{"en":"Instances of this class are RDF Graphs, where each of these graphs must include exactly one Signature."}},{"@id":"sec:EcdsaSecp256k1Signature2019","@type":["rdfs:Class","owl:DeprecatedClass"],"owl:deprecated":true,"rdfs:subClassOf":["sec:Signature"],"rdfs:label":{"en":"TBD."},"rdfs:comment":{"en":"This class represents a data integrity signature suite."},"rdfs:seeAlso":["https://w3c-ccg.github.io/ld-cryptosuite-registry/#ecdsa-secp256k1"]},{"@id":"sec:EcdsaSecp256k1Signature2020","@type":["rdfs:Class","owl:DeprecatedClass"],"owl:deprecated":true,"rdfs:subClassOf":["sec:Signature"],"rdfs:label":{"en":"TBD."},"rdfs:comment":{"en":"This class represents a data integrity signature suite."},"rdfs:seeAlso":["https://w3c-ccg.github.io/ld-cryptosuite-registry/#ecdsa-secp256k1"]},{"@id":"sec:EcdsaSecp256k1RecoverySignature2020","@type":["rdfs:Class","owl:DeprecatedClass"],"owl:deprecated":true,"rdfs:subClassOf":["sec:Signature"],"rdfs:label":{"en":"TBD."},"rdfs:comment":{"en":"This class represents a data integrity signature."},"rdfs:seeAlso":["https://w3c-ccg.github.io/ld-cryptosuite-registry/#ecdsasecp256k1recoverysignature2020"]},{"@id":"sec:EcdsaSecp256k1VerificationKey2019","@type":["rdfs:Class","owl:DeprecatedClass"],"owl:deprecated":true,"rdfs:subClassOf":["sec:Key"],"rdfs:label":{"en":"TBD."},"rdfs:comment":{"en":"This class represents a data integrity verification method."},"rdfs:seeAlso":["https://w3c-ccg.github.io/ld-cryptosuite-registry/#ecdsa-secp256k1"]},{"@id":"sec:EcdsaSecp256k1RecoveryMethod2020","@type":["rdfs:Class","owl:DeprecatedClass"],"owl:deprecated":true,"rdfs:subClassOf":["sec:Key"],"rdfs:label":{"en":"TBD."},"rdfs:comment":{"en":"This class represents a data integrity verification method."},"rdfs:seeAlso":["https://w3c-ccg.github.io/ld-cryptosuite-registry/#ecdsasecp256k1recoverymethod2020"]},{"@id":"sec:RsaSignature2018","@type":["rdfs:Class","owl:DeprecatedClass"],"owl:deprecated":true,"rdfs:subClassOf":["sec:Signature"],"rdfs:label":{"en":"Signature Suite for RSA (was deprecated in the CCG document)"},"rdfs:comment":{"en":"This class represents a data integrity signature suite."},"rdfs:seeAlso":["https://w3c-ccg.github.io/ld-cryptosuite-registry/#rsa"]},{"@id":"sec:RsaVerificationKey2018","@type":["rdfs:Class","owl:DeprecatedClass"],"owl:deprecated":true,"rdfs:subClassOf":["sec:Key"],"rdfs:label":{"en":"Verification Key for RSA (was deprecated in the CCG document)"},"rdfs:comment":{"en":"This class represents a data integrity verification method."},"rdfs:seeAlso":["https://w3c-ccg.github.io/ld-cryptosuite-registry/#rsa"]},{"@id":"sec:SchnorrSecp256k1Signature2019","@type":["rdfs:Class","owl:DeprecatedClass"],"owl:deprecated":true,"rdfs:subClassOf":["sec:Signature"],"rdfs:label":{"en":"TBD."},"rdfs:comment":{"en":"This class represents a data integrity signature suite."}},{"@id":"sec:SchnorrSecp256k1VerificationKey2019","@type":["rdfs:Class","owl:DeprecatedClass"],"owl:deprecated":true,"rdfs:subClassOf":["sec:Key"],"rdfs:label":{"en":"TBD."},"rdfs:comment":{"en":"This class represents a data integrity verification method."}},{"@id":"sec:ServiceEndpointProxyService","@type":["rdfs:Class","owl:DeprecatedClass"],"owl:deprecated":true,"rdfs:label":{"en":"TBD."},"rdfs:comment":{"en":"T.B.D."}},{"@id":"sec:Digest","@type":["rdfs:Class","owl:DeprecatedClass"],"owl:deprecated":true,"rdfs:label":{"en":"Message digest"},"rdfs:comment":{"en":"This class represents a message digest that may be used for data integrity verification. The digest algorithm used will determine the cryptographic properties of the digest."}},{"@id":"sec:EncryptedMessage","@type":["rdfs:Class","owl:DeprecatedClass"],"owl:deprecated":true,"rdfs:label":{"en":"Encrypted message"},"rdfs:comment":{"en":"A class of messages that are obfuscated in some cryptographic manner. These messages are incredibly difficult to decrypt without the proper decryption key."}},{"@id":"sec:GraphSignature2012","@type":["rdfs:Class","owl:DeprecatedClass"],"owl:deprecated":true,"rdfs:subClassOf":["sec:Signature"],"rdfs:label":{"en":"RDF graph signature"},"rdfs:comment":{"en":"A graph signature is used for digital signatures on RDF graphs. The default canonicalization mechanism is specified in the RDF Graph normalization specification, which effectively deterministically names all unnamed nodes. The default signature mechanism uses a SHA-256 digest and RSA to perform the digital signature."}},{"@id":"sec:LinkedDataSignature2015","@type":["rdfs:Class","owl:DeprecatedClass"],"owl:deprecated":true,"rdfs:subClassOf":["sec:Signature"],"rdfs:label":{"en":"Linked data signature, 2015 version (was deprecated in the CCG document)"},"rdfs:comment":{"en":"A Linked Data signature is used for digital signatures on RDF Datasets. The default canonicalization mechanism is specified in the RDF Dataset Normalization specification, which effectively deterministically names all unnamed nodes. The default signature mechanism uses a SHA-256 digest and RSA to perform the digital signature."}},{"@id":"sec:LinkedDataSignature2016","@type":["rdfs:Class","owl:DeprecatedClass"],"owl:deprecated":true,"rdfs:subClassOf":["sec:Signature"],"rdfs:label":{"en":"Linked data signature, 2016 version (was deprecated in the CCG document)"},"rdfs:comment":{"en":"A Linked Data signature is used for digital signatures on RDF Datasets. The default canonicalization mechanism is specified in the RDF Dataset Normalization specification, which effectively deterministically names all unnamed nodes. The default signature mechanism uses a SHA-256 digest and RSA to perform the digital signature."}},{"@id":"sec:MerkleProof2019","@type":["rdfs:Class","owl:DeprecatedClass"],"owl:deprecated":true,"rdfs:subClassOf":["sec:Signature"],"rdfs:label":{"en":"Merkle Proof"},"rdfs:comment":{"en":"Linked Data signature is used for digital signatures on RDF Datasets. The default canonicalization mechanism is specified in the RDF Dataset Normalization specification, which effectively deterministically names all unnamed nodes. The default signature mechanism uses a SHA-256 digest and ECDSA to perform the digital signature."},"rdfs:seeAlso":["https://w3c-ccg.github.io/lds-merkle-proof-2019/"]},{"@id":"sec:X25519KeyAgreementKey2019","@type":["rdfs:Class","owl:DeprecatedClass"],"owl:deprecated":true,"rdfs:subClassOf":["sec:Key"],"rdfs:label":{"en":"X25519 Key Agreement Key 2019"},"rdfs:comment":{"en":"This class represents a verification key."}},{"@id":"sec:Ed25519VerificationKey2018","@type":["rdfs:Class","owl:DeprecatedClass"],"owl:deprecated":true,"rdfs:subClassOf":["sec:Key"],"rdfs:label":{"en":"ED2559 Verification Key, 2018 version"},"rdfs:comment":{"en":"This class represents a data integrity verification method."},"rdfs:seeAlso":["https://w3c-ccg.github.io/ld-cryptosuite-registry/#ed25519"]},{"@id":"sec:Ed25519VerificationKey2020","@type":["rdfs:Class","owl:DeprecatedClass"],"owl:deprecated":true,"rdfs:subClassOf":["sec:Key"],"rdfs:label":{"en":"ED2559 Verification Key, 2020 version"},"rdfs:comment":{"en":"A linked data proof suite verification method type used with `Ed25519Signature2020`."}},{"@id":"sec:JsonWebKey2020","@type":["rdfs:Class","owl:DeprecatedClass"],"owl:deprecated":true,"rdfs:subClassOf":["sec:Key"],"rdfs:label":{"en":"JSON Web Key, 2020 version"},"rdfs:comment":{"en":"A linked data proof suite verification method type used with `JsonWebSignature2020`"}},{"@id":"sec:JsonWebSignature2020","@type":["rdfs:Class","owl:DeprecatedClass"],"owl:deprecated":true,"rdfs:subClassOf":["sec:Signature"],"rdfs:label":{"en":"JSON Web Signature, 2020 version"},"rdfs:comment":{"en":"A Linked Data signature is used for digital signatures on RDF Datasets. The default canonicalization mechanism is specified in the RDF Dataset Normalization specification, which deterministically names all unnamed nodes. The default signature mechanism uses a SHA-256 digest and JWS to perform the digital signature."}},{"@id":"sec:BbsBlsSignature2020","@type":["rdfs:Class","owl:DeprecatedClass"],"owl:deprecated":true,"rdfs:subClassOf":["sec:Signature"],"rdfs:label":{"en":"BBS Signature, 2020 version"},"rdfs:comment":{"en":"A Linked Data signature is used for digital signatures on RDF Datasets. The default canonicalization mechanism is specified in the RDF Dataset Normalization specification, which deterministically names all unnamed nodes. Importantly, a `BbsBlsSignature` digests each of the statements produced by the normalization process individually to enable selective disclosure. The signature mechanism uses Blake2B as the digest for each statement and produces a single output digital signature."}},{"@id":"sec:BbsBlsSignatureProof2020","@type":["rdfs:Class","owl:DeprecatedClass"],"owl:deprecated":true,"rdfs:subClassOf":["sec:Signature"],"rdfs:label":{"en":"BBS Signature Proof, 2020 version"},"rdfs:comment":{"en":"A Linked Data signature is used for digital signatures on RDF Datasets. The default canonicalization mechanism is specified in the RDF Dataset Normalization specification, which deterministically names all unnamed nodes. Importantly, a `BbsBlsSignatureProof2020` is in fact a proof of knowledge of an unrevealed BbsBlsSignature2020 enabling the ability to selectively reveal information from the set that was originally signed. Each of the statements produced by the normalizing process for a JSON-LD document featuring a `BbsBlsSignatureProof2020` represent statements that were originally signed in producing the `BbsBlsSignature2020` and represent the denomination under which information can be selectively disclosed. The signature mechanism uses Blake2B as the digest for each statement and produces a single output digital signature."}},{"@id":"sec:Bls12381G1Key2020","@type":["rdfs:Class","owl:DeprecatedClass"],"owl:deprecated":true,"rdfs:subClassOf":["sec:Key"],"rdfs:label":{"en":"BLS 12381 G1 Signature Key, 2020 version"},"rdfs:comment":{"en":"This class represents a data integrity signature key."},"rdfs:seeAlso":["https://w3c-ccg.github.io/ld-cryptosuite-registry/#ed25519"]},{"@id":"sec:Bls12381G2Key2020","@type":["rdfs:Class","owl:DeprecatedClass"],"owl:deprecated":true,"rdfs:subClassOf":["sec:Key"],"rdfs:label":{"en":"BLS 12381 G2 Signature Key, 2020 version"},"rdfs:comment":{"en":"This class represents a data integrity signature key."},"rdfs:seeAlso":["https://w3c-ccg.github.io/ld-cryptosuite-registry/#ed25519"]}],"rdfs_properties":[{"@id":"sec:verificationMethod","@type":"rdfs:Property","rdfs:range":"sec:VerificationMethod","rdfs:label":{"en":"Verification method"},"rdfs:comment":{"en":"A `verificationMethod` property is used to specify a URL that contains information used for proof verification."},"rdfs:seeAlso":["https://www.w3.org/TR/did-core/#verification-methods"]},{"@id":"sec:domain","@type":["rdfs:Property","owl:DatatypeProperty"],"rdfs:domain":"sec:Proof","rdfs:range":"xsd:string","rdfs:label":{"en":"Domain of a proof"},"rdfs:comment":{"en":"The `domain` property is used to associate a domain with a proof, for use with a `proofPurpose` such as `authentication` and indicating its intended usage."}},{"@id":"sec:challenge","@type":["rdfs:Property","owl:DatatypeProperty"],"rdfs:domain":"sec:Proof","rdfs:range":"xsd:string","rdfs:label":{"en":"Challenge with a proof"},"rdfs:comment":{"en":"The challenge property is used to associate a challenge with a proof, for use with a `proofPurpose` such as `authentication`. This string value SHOULD be included in a proof if a `domain` is specified."}},{"@id":"sec:proofPurpose","@type":["rdfs:Property","owl:DatatypeProperty"],"rdfs:domain":"sec:Proof","rdfs:range":"xsd:string","rdfs:label":{"en":"Proof purpose"},"rdfs:comment":{"en":"The` proofPurpose` property is used to associate a purpose, such as `assertionMethod` or `authentication` with a proof. The proof purpose acts as a safeguard to prevent the proof from being misused by being applied to a purpose other than the one that was intended."}},{"@id":"sec:proofValue","@type":["rdfs:Property","owl:DatatypeProperty"],"rdfs:domain":"sec:Proof","rdfs:range":"xsd:string","rdfs:label":{"en":"Proof value"},"rdfs:comment":{"en":"A string value that contains the data necessary to verify the digital proof using the `verificationMethod` specified"}},{"@id":"sec:proof","@type":"rdfs:Property","rdfs:range":"sec:ProofGraph","rdfs:label":{"en":"Proof sets"},"rdfs:comment":{"en":"The value of the `proof` property MUST identify `ProofGraph` instances (informally, it indirectly identifies `Proof` instances, each contained in a separate graph). The property is used to associate a proof with a graph of information. The proof property is typically not included in the canonicalized graphs that are then digested and digitally signed. The order of the proofs is not relevant."}},{"@id":"sec:proofChain","@type":"rdfs:Property","rdfs:range":"rdf:List","rdfs:label":{"en":"Proof chain"},"rdfs:comment":{"en":"The value of the `proofChain` property MUST identify a sequence of `ProofGraph` instances (informally, it indirectly identifies a series of `Proof` instances, each contained in a separate graph). The property is used to provide a sequence of multiple proofs where the order of when the proofs occurred matters. The proof chain property is typically not included in the canonicalized graphs that are then separately digested and digitally signed."}},{"@id":"sec:controller","@type":["rdfs:Property","owl:ObjectProperty"],"rdfs:domain":"sec:VerificationMethod","rdfs:label":{"en":"Controller"},"rdfs:comment":{"en":"A controller is an entity that claims control over a particular resource. Note that control is best validated as a two-way relationship, where the controller claims control over a particular resource, and the resource clearly identifies its controller."}},{"@id":"sec:authentication","@type":"rdfs:Property","rdfs:range":"VerificationMethod","rdfs:label":{"en":"Authentication method"},"rdfs:comment":{"en":"An `authentication` property is used to specify a URL that contains information about a `verificationMethod` used for authentication."}},{"@id":"sec:assertionMethod","@type":"rdfs:Property","rdfs:range":"VerificationMethod","rdfs:label":{"en":"Assertion method"},"rdfs:comment":{"en":"An `assertionMethod` property is used to specify a URL that contains information about a `verificationMethod` used for assertions."}},{"@id":"sec:capabilityDelegation","@type":"rdfs:Property","rdfs:range":"VerificationMethod","rdfs:label":{"en":"Capability Delegation Method"},"rdfs:comment":{"en":"A `capabilityDelegation` property is used to express that one or more `verificationMethods` are authorized to verify cryptographic proofs that were created for the purpose of delegating capabilities.\\nA `verificationMethod` may be referenced by its identifier (a URL) or expressed in full.\\nThe aforementioned proofs are created to prove that some entity is delegating the authority to take some action to another entity. A verifier of the proof should expect the proof to express a `proofPurpose` of `capabilityDelegation` and reference a `verificationMethod` to verify it. The dereferenced `verificationMethod` MUST have a controller property that has a property of `capabilityDelegation` that references the `verificationMethod`. This indicates that the controller has authorized it for the expressed `proofPurpose`."}},{"@id":"sec:capabilityInvocation","@type":"rdfs:Property","rdfs:range":"VerificationMethod","rdfs:label":{"en":"Capability Invocation Method"},"rdfs:comment":{"en":"A `capabilityInvocation` property is used to express that one or more `verificationMethods` are authorized to verify cryptographic proofs that were created for the purpose of invoking capabilities.\\nA `verificationMethod` MAY be referenced by its identifier (a URL) or expressed in full.\\nThe aforementioned proofs are created to prove that some entity is attempting to exercise some authority they possess to take an action. A verifier of the proof should expect the proof to express a `proofPurpose` of `capabilityInvocation` and reference a `verificationMethod` to verify it. The dereferenced `verificationMethod` MUST have a controller property that, when dereferenced, has a property of `capabilityInvocation` that references the `verificationMethod.` This indicates that the controller has authorized it for the expressed `proofPurpose`."}},{"@id":"sec:keyAgreement","@type":"rdfs:Property","rdfs:range":"VerificationMethod","rdfs:label":{"en":"Key agreement protocols"},"rdfs:comment":{"en":"Indicates that a proof is used for for key agreement protocols, such as Elliptic Curve Diffie Hellman key agreement used by popular encryption libraries."}},{"@id":"sec:cryptosuite","@type":["rdfs:Property","owl:DatatypeProperty"],"rdfs:domain":"sec:DataIntegrityProof","rdfs:range":"xsd:string","rdfs:label":{"en":"Cryptographic suite"},"rdfs:comment":{"en":"A text-based identifier for a specific cryptographic suite."},"rdfs:seeAlso":["https://www.w3.org/TR/vc-data-integrity/#dataintegrityproof"]},{"@id":"sec:publicKeyMultibase","@type":["rdfs:Property","owl:DatatypeProperty"],"rdfs:domain":"sec:VerificationMethod","rdfs:range":"xsd:string","rdfs:label":{"en":"Public key multibase"},"rdfs:comment":{"en":"The public key multibase property is used to specify the multibase-encoded version of a public key. The contents of the property are defined by specifications such as ED25519-2020 and listed in the Linked Data Cryptosuite Registry. Most public key type definitions are expected to:\\n• Specify only a single encoding base per public key type as it reduces implementation burden and increases the chances of reaching broad interoperability.\\n• Specify a multicodec header on the encoded public key to aid encoding and decoding applications in confirming that they are serializing and deserializing an expected public key type.\\n• Use compressed binary formats to ensure efficient key sizes."},"rdfs:seeAlso":["https://datatracker.ietf.org/doc/html/draft-multiformats-multibase-03","https://w3c-ccg.github.io/ld-cryptosuite-registry/","https://github.com/multiformats/multicodec/blob/master/table.csv","https://w3c-ccg.github.io/lds-ed25519-2020/"]},{"@id":"sec:publicKeyJwk","@type":["rdfs:Property","owl:DatatypeProperty"],"rdfs:domain":"sec:VerificationMethod","rdfs:range":"xsd:string","rdfs:label":{"en":"Public key JWK"},"rdfs:comment":{"en":"See the JOSE suite."},"rdfs:seeAlso":["https://www.iana.org/assignments/jose/jose.xhtml","https://tools.ietf.org/html/rfc7517"]},{"@id":"sec:cipherAlgorithm","@type":["rdf:Property","owl:DeprecatedProperty","owl:DatatypeProperty"],"owl:deprecated":true,"rdfs:domain":"sec:EncryptedMessage","rdfs:range":"xsd:string","rdfs:label":{"en":"Cipher algorithm"},"rdfs:comment":{"en":"The cipher algorithm describes the mechanism used to encrypt a message. It is typically a string expressing the cipher suite, the strength of the cipher, and a block cipher mode."}},{"@id":"sec:cipherData","@type":["rdf:Property","owl:DeprecatedProperty","owl:DatatypeProperty"],"owl:deprecated":true,"rdfs:domain":"sec:EncryptedMessage","rdfs:range":"xsd:string","rdfs:label":{"en":"Cipher data"},"rdfs:comment":{"en":"Cipher data is an opaque blob of information that is used to specify an encrypted message."}},{"@id":"sec:cipherKey","@type":["rdf:Property","owl:DeprecatedProperty","owl:DatatypeProperty"],"owl:deprecated":true,"rdfs:domain":"sec:EncryptedMessage","rdfs:range":"xsd:string","rdfs:label":{"en":"Cipher key"},"rdfs:comment":{"en":"A cipher key is a symmetric key that is used to encrypt or decrypt a piece of information. The key itself may be expressed in clear text or encrypted."}},{"@id":"sec:digestAlgorithm","@type":["rdf:Property","owl:DeprecatedProperty","owl:DatatypeProperty"],"owl:deprecated":true,"rdfs:range":"xsd:string","rdfs:label":{"en":"Digest algorithm"},"rdfs:comment":{"en":"The digest algorithm is used to specify the cryptographic function to use when generating the data to be digitally signed. Typically, data that is to be signed goes through three steps: 1) canonicalization, 2) digest, and 3) signature. This property is used to specify the algorithm that should be used for step 2. A signature class typically specifies a default digest method, so this property is typically used to specify information for a signature algorithm."}},{"@id":"sec:digestValue","@type":["rdf:Property","owl:DeprecatedProperty","owl:DatatypeProperty"],"owl:deprecated":true,"rdfs:range":"xsd:string","rdfs:label":{"en":"Digest value"},"rdfs:comment":{"en":"The digest value is used to express the output of the digest algorithm expressed in Base-16 (hexadecimal) format."}},{"@id":"sec:blockchainAccountId","@type":["rdf:Property","owl:DeprecatedProperty","owl:DatatypeProperty"],"owl:deprecated":true,"rdfs:range":"xsd:string","rdfs:label":{"en":"Blockchain account ID"},"rdfs:comment":{"en":"A `blockchainAccountId` property is used to specify a blockchain account identifier, as per the CAIP-10Account ID Specification."}},{"@id":"sec:ethereumAddress","@type":["rdf:Property","owl:DeprecatedProperty","owl:DatatypeProperty"],"owl:deprecated":true,"rdfs:range":"xsd:string","rdfs:label":{"en":"Ethereum address"},"rdfs:comment":{"en":"An `ethereumAddress` property is used to specify the Ethereum address. As per the Ethereum Yellow Paper “Ethereum: a secure decentralised generalised transaction ledger” in consists of a prefix \\"0x\\", a common identifier for hexadecimal, concatenated with the rightmost 20 bytes of the Keccak-256 hash (big endian) of the ECDSA public key (the curve used is the so-called secp256k1). In hexadecimal, 2 digits represent a byte, meaning addresses contain 40 hexadecimal digits. The Ethereum address should also contain a checksum as per EIP-55."},"rdfs:seeAlso":["https://eips.ethereum.org/EIPS/eip-55","https://ethereum.github.io/yellowpaper/paper.pdf"]},{"@id":"sec:expires","@type":["rdf:Property","owl:DeprecatedProperty","owl:DatatypeProperty"],"owl:deprecated":true,"rdfs:range":"xsd:dateTime","rdfs:label":{"en":"Expiration time"},"rdfs:comment":{"en":"The expiration time is typically associated with a `Key` and specifies when the validity of the key will expire."}},{"@id":"sec:initializationVector","@type":["rdf:Property","owl:DeprecatedProperty","owl:DatatypeProperty"],"owl:deprecated":true,"rdfs:domain":"sec:EncryptedMessage","rdfs:range":"xsd:string","rdfs:label":{"en":"Initialization vector"},"rdfs:comment":{"en":"The initialization vector (IV) is a byte stream that is typically used to initialize certain block cipher encryption schemes. For a receiving application to be able to decrypt a message, it must know the decryption key and the initialization vector. The value is typically base-64 encoded."}},{"@id":"sec:nonce","@type":["rdf:Property","owl:DeprecatedProperty","owl:DatatypeProperty"],"owl:deprecated":true,"rdfs:domain":"sec:Signature","rdfs:range":"xsd:string","rdfs:label":{"en":"Nonce"},"rdfs:comment":{"en":"This property is used in conjunction with the input to the signature hashing function in order to protect against replay attacks. Typically, receivers need to track all nonce values used within a certain time period in order to ensure that an attacker cannot merely re-send a compromised packet in order to execute a privileged request."}},{"@id":"sec:canonicalizationAlgorithm","@type":["rdf:Property","owl:DeprecatedProperty"],"owl:deprecated":true,"rdfs:domain":"sec:Signature","rdfs:label":{"en":"Canonicalization algorithm"},"rdfs:comment":{"en":"The canonicalization algorithm is used to transform the input data into a form that can be passed to a cryptographic digest method. The digest is then digitally signed using a digital signature algorithm. Canonicalization ensures that a piece of software that is generating a digital signature is able to do so on the same set of information in a deterministic manner."}},{"@id":"sec:controller","@type":["rdf:Property","owl:DeprecatedProperty","owl:ObjectProperty"],"owl:deprecated":true,"rdfs:label":{"en":"Controller"},"rdfs:comment":{"en":"A controller is an entity that claims control over a particular resource. Note that control is best validated as a two-way relationship where the controller claims control over a particular resource, and the resource clearly identifies its controller."}},{"@id":"sec:owner","@type":["rdf:Property","owl:DeprecatedProperty","owl:ObjectProperty"],"owl:deprecated":true,"rdfs:label":{"en":"Owner (was deprecated in the CCG document)"},"rdfs:comment":{"en":"An owner is an entity that claims control over a particular resource. Note that ownership is best validated as a two-way relationship where the owner claims ownership over a particular resource, and the resource clearly identifies its owner."}},{"@id":"sec:password","@type":["rdf:Property","owl:DeprecatedProperty","owl:DatatypeProperty"],"owl:deprecated":true,"rdfs:range":"xsd:string","rdfs:label":{"en":"Password"},"rdfs:comment":{"en":"A secret that is used to generate a key that can be used to encrypt or decrypt message. It is typically a string value."}},{"@id":"sec:privateKeyPem","@type":["rdf:Property","owl:DeprecatedProperty","owl:DatatypeProperty"],"owl:deprecated":true,"rdfs:domain":"sec:Key","rdfs:range":"xsd:string","rdfs:label":{"en":"PEM encoded private key"},"rdfs:comment":{"en":"A private key PEM property is used to specify the PEM-encoded version of the private key. This encoding is compatible with almost every Secure Sockets Layer library implementation and typically plugs directly into functions intializing private keys."},"rdfs:seeAlso":["http://en.wikipedia.org/wiki/Privacy_Enhanced_Mail"]},{"@id":"sec:publicKey","@type":["rdf:Property","owl:DeprecatedProperty","owl:ObjectProperty"],"owl:deprecated":true,"rdfs:domain":"sec:Key","rdfs:label":{"en":"Public Key"},"rdfs:comment":{"en":"A public key property is used to specify a URL that contains information about a public key."}},{"@id":"sec:publicKeyBase58","@type":["rdf:Property","owl:DeprecatedProperty","owl:DatatypeProperty"],"owl:deprecated":true,"rdfs:domain":"sec:Key","rdfs:range":"xsd:string","rdfs:label":{"en":"Base58-encoded Public Key"},"rdfs:comment":{"en":"A public key Base58 property is used to specify the base58-encoded version of the public key."}},{"@id":"sec:publicKeyPem","@type":["rdf:Property","owl:DeprecatedProperty","owl:DatatypeProperty"],"owl:deprecated":true,"rdfs:domain":"sec:Key","rdfs:range":"xsd:string","rdfs:label":{"en":"Public key PEM"},"rdfs:comment":{"en":"A public key PEM property is used to specify the PEM-encoded version of the public key. This encoding is compatible with almost every Secure Sockets Layer library implementation and typically plugs directly into functions initializing public keys."}},{"@id":"sec:publicKeyHex","@type":["rdf:Property","owl:DeprecatedProperty","owl:DatatypeProperty"],"owl:deprecated":true,"rdfs:domain":"sec:Key","rdfs:range":"xsd:string","rdfs:label":{"en":"Hex-encoded version of public Key"},"rdfs:comment":{"en":"A `publicKeyHex` property is used to specify the hex-encoded version of the public key, based on section 8 of rfc4648. Hex encoding is also known as Base16 encoding."},"rdfs:seeAlso":["https://tools.ietf.org/html/rfc4648#section-8"]},{"@id":"sec:publicKeyService","@type":["rdf:Property","owl:DeprecatedProperty","owl:ObjectProperty"],"owl:deprecated":true,"rdfs:label":{"en":"Public key service"},"rdfs:comment":{"en":"The publicKeyService property is used to express the REST URL that provides public key management services."}},{"@id":"sec:revoked","@type":["rdf:Property","owl:DeprecatedProperty","owl:DatatypeProperty"],"owl:deprecated":true,"rdfs:range":"xsd:dateTime","rdfs:label":{"en":"Revocation time"},"rdfs:comment":{"en":"The revocation time is typically associated with a `Key` that has been marked as invalid as of the date and time associated with the property. Key revocations are often used when a key is compromised, such as the theft of the private key, or during the course of best-practice key rotation schedules."}},{"@id":"sec:jws","@type":["rdf:Property","owl:DeprecatedProperty"],"owl:deprecated":true,"rdfs:range":"sec:Signature","rdfs:label":{"en":"Json Web Signature"},"rdfs:comment":{"en":"The jws property is used to associate a detached Json Web Signature with a proof."},"rdfs:seeAlso":["https://tools.ietf.org/html/rfc7797"]},{"@id":"sec:challenge","@type":["rdf:Property","owl:DeprecatedProperty","owl:DatatypeProperty"],"owl:deprecated":true,"rdfs:domain":"sec:Proof","rdfs:range":"xsd:string","rdfs:label":{"en":"Challenge with a proof"},"rdfs:comment":{"en":"The challenge property is used to associate a challenge with a proof, for use with a `proofPurpose` such as `authentication`. This string value SHOULD be included in a proof if a `domain` is specified."}},{"@id":"sec:expirationDate","@type":["rdf:Property","owl:DeprecatedProperty","owl:DatatypeProperty"],"owl:deprecated":true,"rdfs:domain":"sec:Proof","rdfs:range":"xsd:dateTime","rdfs:label":{"en":"Expiration date for proof"},"rdfs:comment":{"en":"The `expirationDate` property is used to associate an expiration date with a proof."}},{"@id":"sec:signature","@type":["rdf:Property","owl:DeprecatedProperty"],"owl:deprecated":true,"rdfs:range":"sec:Signature","rdfs:label":{"en":"Signature  (was deprecated in the CCG document)"},"rdfs:comment":{"en":"The property is used to associate a proof with a graph of information. The proof property is typically not included in the canonicalized graph that is then digested, and digitally signed."}},{"@id":"sec:signatureValue","@type":["rdf:Property","owl:DeprecatedProperty","owl:DatatypeProperty"],"owl:deprecated":true,"rdfs:domain":"sec:Signature","rdfs:range":"xsd:string","rdfs:label":{"en":"Signature value  (was deprecated in the CCG document)"},"rdfs:comment":{"en":"The signature value is used to express the output of the signature algorithm expressed in base-64 format."}},{"@id":"sec:signatureAlgorithm","@type":["rdf:Property","owl:DeprecatedProperty","owl:ObjectProperty"],"owl:deprecated":true,"rdfs:domain":"sec:Signature","rdfs:label":{"en":"Signature algorithm  (was deprecated in the CCG document)"},"rdfs:comment":{"en":"The signature algorithm is used to specify the cryptographic signature function to use when digitally signing the digest data. Typically, text to be signed goes through three steps: 1) canonicalization, 2) digest, and 3) signature. This property is used to specify the algorithm that should be used for step #3. A signature class typically specifies a default signature algorithm, so this property rarely needs to be used in practice when specifying digital signatures."}},{"@id":"sec:service","@type":["rdf:Property","owl:DeprecatedProperty","owl:ObjectProperty"],"owl:deprecated":true,"rdfs:domain":"sec:Signature","rdfs:label":{"en":"Service"},"rdfs:comment":{"en":"Examples of specific services include discovery services, social networks, file storage services, and verifiable claim repository services."}},{"@id":"sec:serviceEndpoint","@type":["rdf:Property","owl:DeprecatedProperty","owl:ObjectProperty"],"owl:deprecated":true,"rdfs:domain":"sec:Signature","rdfs:label":{"en":"Service endpoint"},"rdfs:comment":{"en":"A network address at which a service operates on behalf of a controller. Examples of specific services include discovery services, social networks, file storage services, and verifiable claim repository services. Service endpoints might also be provided by a generalized data interchange protocol, such as extensible data interchange."}},{"@id":"sec:x509CertificateChain","@type":["rdf:Property","owl:DeprecatedProperty"],"owl:deprecated":true,"rdfs:domain":"sec:Signature","rdfs:range":"sec:Signature","rdfs:label":{"en":"X509 Certificate chain"},"rdfs:comment":{"en":"The x509CertificateChain property is used to associate a chain of X.509 Certificates with a proof. The value of this property is an ordered list where each value in the list is an X.509 Certificate expressed as a DER PKIX format, that is encoded with multibase using the base64pad variant. The certificate directly associated to the verification method used to verify the proof MUST be the first element in the list. Subsequent certificates in the list MAY be included where each one MUST certify the previous one."},"rdfs:seeAlso":["https://tools.ietf.org/html/rfc5280","https://tools.ietf.org/id/draft-multiformats-multibase-00.html"]},{"@id":"sec:x509CertificateFingerprint","@type":["rdf:Property","owl:DeprecatedProperty"],"owl:deprecated":true,"rdfs:domain":"sec:Signature","rdfs:range":"sec:Signature","rdfs:label":{"en":"X509 Certificate fingerprint"},"rdfs:comment":{"en":"The x509CertificateFingerprint property is used to associate an X.509 Certificate with a proof via its fingerprint. The value is a multihash encoded then multibase encoded value using the base64pad variant. It is RECOMMENDED that the fingerprint value be the SHA-256 hash of the X.509 Certificate."},"rdfs:seeAlso":["https://tools.ietf.org/html/rfc5280","https://tools.ietf.org/id/draft-multiformats-multibase-00.html"]},{"@id":"sec:allowedAction","@type":["rdf:Property","owl:DeprecatedProperty"],"owl:deprecated":true,"rdfs:label":{"en":"Allowed action"},"rdfs:comment":{"en":"An action that the controller of a capability may take when invoking the capability."},"rdfs:seeAlso":["https://w3c-ccg.github.io/zcap-spec/#delegated-capability"]},{"@id":"sec:capabilityChain","@type":["rdf:Property","owl:DeprecatedProperty"],"owl:deprecated":true,"rdfs:label":{"en":"Capability chain"},"rdfs:comment":{"en":"An list of delegated capabilities from a delegator to a delegatee."},"rdfs:seeAlso":["https://w3c-ccg.github.io/zcap-spec/#delegation"]},{"@id":"sec:capabilityAction","@type":["rdf:Property","owl:DeprecatedProperty"],"owl:deprecated":true,"rdfs:label":{"en":"Capability action"},"rdfs:comment":{"en":"An action that can be taken given a capability."},"rdfs:seeAlso":["https://w3c-ccg.github.io/zcap-spec/#invoking-root-capability"]},{"@id":"sec:caveat","@type":["rdf:Property","owl:DeprecatedProperty"],"owl:deprecated":true,"rdfs:label":{"en":"Caveat"},"rdfs:comment":{"en":"A restriction on the way the capability may be used."},"rdfs:seeAlso":["https://w3c-ccg.github.io/zcap-spec/#caveats"]},{"@id":"sec:delegator","@type":["rdf:Property","owl:DeprecatedProperty"],"owl:deprecated":true,"rdfs:label":{"en":"Delegator"},"rdfs:comment":{"en":"An entity that delegates a capability to a delegatee."},"rdfs:seeAlso":["https://w3c-ccg.github.io/zcap-spec/#delegation"]},{"@id":"sec:invocationTarget","@type":["rdf:Property","owl:DeprecatedProperty"],"owl:deprecated":true,"rdfs:label":{"en":"Invocation target"},"rdfs:comment":{"en":"An invocation target identifies where a capability may be invoked, and identifies the target object for which the root capability expresses authority."},"rdfs:seeAlso":["https://w3c-ccg.github.io/zcap-spec/#root-capability"]},{"@id":"sec:invoker","@type":["rdf:Property","owl:DeprecatedProperty"],"owl:deprecated":true,"rdfs:label":{"en":"Invoker"},"rdfs:comment":{"en":"An identifier to cryptographic material that can invoke a capability."},"rdfs:seeAlso":["https://w3c-ccg.github.io/zcap-spec/#invocation"]}]}')},37263:e=>{e.exports=JSON.parse('{"@context":{"id":"@id","type":"@type","@protected":true,"X25519KeyAgreementKey2020":{"@id":"https://w3id.org/security#X25519KeyAgreementKey2020","@context":{"@protected":true,"id":"@id","type":"@type","controller":{"@id":"https://w3id.org/security#controller","@type":"@id"},"revoked":{"@id":"https://w3id.org/security#revoked","@type":"http://www.w3.org/2001/XMLSchema#dateTime"},"publicKeyMultibase":{"@id":"https://w3id.org/security#publicKeyMultibase","@type":"https://w3id.org/security#multibase"},"blockchainAccountId":"https://w3id.org/security#blockchainAccountId"}}}}')}}]);